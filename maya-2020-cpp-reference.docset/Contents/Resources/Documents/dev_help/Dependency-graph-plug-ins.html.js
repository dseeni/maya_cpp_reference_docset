var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head>\n\
<link href=\"../style/prettify.css\" type=\"text/css\" rel=\"stylesheet\" />\n\
<script type=\"text/javascript\" src=\"../scripts/prettify.js\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><meta http-equiv=\"Content-Style-Type\" content=\"text/css\" /><meta name=\"generator\" content=\"pandoc\" /><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>Dependency graph plug-ins</title>\n\
   </head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><style type=\"text/css\">code{white-space: pre;}</style><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/multireflink.js\"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script></script><script></script><div id=\"reflinkdiv\"></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Dependency graph plug-ins</h1>\n\
         </div>\n\
\n\
<div class=\'section\'><a id=\"dependency-graph-plug-ins\"></a></div>\n\
<p>This section introduces the Dependency Graph (DG), and shows how to use the Maya API to write plug-ins that extend and integrate with it.</p>\n\
<p>The dependency graph lies at the heart of Maya. It maintains the construction history of the scene: a record of what operations you have applied in what order. The graph is made up of a series of interconnected nodes, each of which encapsulates a single operation or a single set of calculations. Each node accepts a limited set of well-defined input data, performs its calculations based on that data, and produces one or more output values. For more background information about nodes, connections, and how the dependency graph works, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/About-the-dependency-graph.html\' title=\'\'>About the dependency graph</a>.</p>\n\
<p>You can use the Maya API to create your own custom dependency graph nodes, which carry out custom operations based on their incoming data. Each kind of node you write is represented by a class that derives from the base <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_px_node.html&quot;,&quot;title&quot;:&quot;Python 2.0 API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;}]\">MPxNode</a></span> class, which provides the main interface needed in order to hook up to the dependency graph. The Maya API also provides several other base classes that derive from <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_px_node.html&quot;,&quot;title&quot;:&quot;Python 2.0 API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;}]\">MPxNode</a></span>, but that specialize its behavior for different uses. For example, you can derive your custom node class from <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxDeformerNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_deformer_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;}]\">MPxDeformerNode</a></span> instead of <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxNode\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_px_node.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_px_node.html&quot;,&quot;title&quot;:&quot;Python 2.0 API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../&quot;}]\">MPxNode</a></span> in order to implement a custom deformer. Maya will treat your custom node in the same way that it treats built-in types of deformers. For a description of these base classes, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/Base-dependency-node-classes.html\' title=\'\'>Base dependency node classes</a>.</p>\n\
<p>Every node class needs to be set up with some <em>attributes</em>, which define the types of input data the node accepts and the types of output data that the node produces. For more information, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/Attributes-and-plugs.html\' title=\'\'>Attributes and plugs</a> and <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/Complex-and-Dynamic-Attributes.html\' title=\'\'>Complex and Dynamic Attributes</a>.</p>\n\
<p>The main work done by each dependency graph node is typically done in its virtual <span class=\'code\'>compute()</span> method, which you must implement in your custom class. For considerations to keep in mind when writing your implementation, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/Implementing-the-compute-method.html\' title=\'\'>Implementing the compute() method for a dependency graph node</a>. Maya maintains all data related to each node in a dedicated data block, which it passes to this method each time an output value for the node needs to be re-computed. You need to use handles to read the input data from this block, and to write the output data to the block. For details, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/Working-with-data-blocks.html\' title=\'\'>Working with data blocks</a>.</p>\n\
<p>For working examples of plug-ins that define new types of dependency graph nodes, see <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/A-basic-dependency-node-example.html\' title=\'\'>A basic dependency node example</a> and <a href=\'#!/url=./dev_help/Dependency-graph-plug-ins/A-more-complex-dependency-graph.html\' title=\'\'>A more complex dependency graph example</a>.</p>\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";