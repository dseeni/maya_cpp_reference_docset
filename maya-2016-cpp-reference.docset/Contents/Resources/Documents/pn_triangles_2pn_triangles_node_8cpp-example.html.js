var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>pnTriangles/pnTrianglesNode.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'pn_triangles_2pn_triangles_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>pnTriangles/pnTrianglesNode.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">pnTriangles/pnTrianglesNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// NOTE: PLEASE READ THE README.TXT FILE FOR INSTRUCTIONS ON</span></div>\n\
<div class=\"line\"><span class=\"comment\">// COMPILING AND USAGE REQUIREMENTS.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// File: pnTrianglesNode.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Dependency Graph Node: pnTriangles</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Hardware shader plugin to perform :</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      1) ATI PN triangle tessellation on geometry, if the extension</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          ATI_pn_triangles is supported in hardware.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      2) A simple vertex program using EXT_vertex_program, if the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          extension is supported.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      3) A simple fragement program using AT_fragment_program, if the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//          extension is supported.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This is an excerpt from the PN triangle extension</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      specification:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      &quot;When PN Triangle generation is enabled, each triangle-based geometric </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      primitive is replaced with a new curved surface using the primitive </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      vertices as control points.  The intent of PN Triangles </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      are to take a set of triangle-based geometry and algorithmically </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      tessellate it into a more organic shape with a smoother silhouette. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      The new surface can either linearly or quadratically interpolate the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      normals across the patch.  The vertices can be either linearly or</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      cubically interpolated across the patch.  Linear interpolation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      of the points would be useful for getting more sample points for </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      lighting on the same geometric shape.  All other vertex information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      (colors, texture coordinates, fog coordinates, and vertex weights) are </span></div>\n\
<div class=\"line\"><span class=\"comment\">//      interpolated linearly across the patch.&quot;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This plugin is ATI Radeon specific.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;pnTrianglesNode.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMaterial.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     pnTriangles::id( 0x00105448 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define     pnDefaultMaxTessellation    0       // Default max tessellation</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Attributes</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrSubdivisions;  <span class=\"comment\">// Subdivision level      </span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrColored;       <span class=\"comment\">// Display colored</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrTextured;      <span class=\"comment\">// Display textured</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrWireframe;     <span class=\"comment\">// Display wireframe</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrNormalMode;    <span class=\"comment\">// Normal evaluation mode</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrPointMode;     <span class=\"comment\">// Point evaluation mode</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrEnableVertexProgram; <span class=\"comment\">// Enable vertex program</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>     pnTriangles::attrEnablePixelProgram; <span class=\"comment\">// Enable pixel program</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">pnTriangles::pnTriangles() </div>\n\
<div class=\"line\">:   fSubdivisions( 0 ),                                 <span class=\"comment\">// Default 0 level of subdivision</span></div>\n\
<div class=\"line\">    fNumTextureCoords( 0 ),                             <span class=\"comment\">// Default not-textured</span></div>\n\
<div class=\"line\">    fNumNormals( 1 ),                                   <span class=\"comment\">// Default shaded</span></div>\n\
<div class=\"line\">    fNumColors( 0 ),                                    <span class=\"comment\">// Default not-colored</span></div>\n\
<div class=\"line\">    fPointMode( kPointCubic ),                          <span class=\"comment\">// Default cubic</span></div>\n\
<div class=\"line\">    fNormalMode( kNormalQuadratic ),                    <span class=\"comment\">// Default quadratic</span></div>\n\
<div class=\"line\">    fMaxTessellationLevel( pnDefaultMaxTessellation ),  <span class=\"comment\">// 0 maximum default</span></div>\n\
<div class=\"line\">    fWireframe( false ),                                <span class=\"comment\">// Default filled</span></div>\n\
<div class=\"line\">    fInTexturedMode( false ),                           <span class=\"comment\">// Keep track of textured mode</span></div>\n\
<div class=\"line\">    fTestVertexProgram( false ),</div>\n\
<div class=\"line\">    fTestFragmentProgram( false ),</div>\n\
<div class=\"line\">    fVertexShaderId( -1 ),</div>\n\
<div class=\"line\">    fFragmentShaderId( -1 )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fExtensionSupported[kPNTriangesEXT ] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fExtensionSupported[kVertexShaderEXT] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fExtensionSupported[kFragmentShaderEXT] = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize required extension(s)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize PN-triangles</span></div>\n\
<div class=\"line\">    fExtensionSupported[kPNTriangesEXT] = initialize_ATI_Extension(<span class=\"stringliteral\">&quot;GL_ATI_pn_triangles&quot;</span>);</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the maximum tessellation level supported by the extension</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExtensionSupported[kPNTriangesEXT])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> val;</div>\n\
<div class=\"line\">        glGetIntegerv( GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI, &amp;val );</div>\n\
<div class=\"line\">        fMaxTessellationLevel = val;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fExtensionSupported[kVertexShaderEXT] = initialize_ATI_Extension(<span class=\"stringliteral\">&quot;GL_EXT_vertex_shader&quot;</span>);</div>\n\
<div class=\"line\">    fExtensionSupported[kFragmentShaderEXT] = initialize_ATI_Extension(<span class=\"stringliteral\">&quot;GL_ATI_fragment_shader&quot;</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">pnTriangles::~pnTriangles() </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Destructor </span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Delete any vertex shader</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExtensionSupported[kVertexShaderEXT])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fVertexShaderId != -1)</div>\n\
<div class=\"line\">            glDeleteVertexShaderEXT(fVertexShaderId);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> pnTriangles::getInternalValue( <span class=\"keyword\">const</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> &amp;dh ) </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Get internally cached values when attribute is queried</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( plug == pnTriangles::attrSubdivisions ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( <span class=\"keywordtype\">int</span>(fSubdivisions) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrColored)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( (fNumColors &gt; 0) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrWireframe)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( fWireframe );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrTextured)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( (fNumTextureCoords &gt; 0) );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrNormalMode )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fNormalMode == kNormalLinear)</div>\n\
<div class=\"line\">            dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( 0 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( 1 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrPointMode )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fPointMode == kPointLinear)</div>\n\
<div class=\"line\">            dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( 0 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( 1 );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrEnableVertexProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( fTestVertexProgram );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrEnablePixelProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( fTestFragmentProgram );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> pnTriangles::setInternalValue( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp;plug, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> &amp;dh ) </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Set internally cached values when attribute changes</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">   <span class=\"keywordflow\">if</span>( plug == pnTriangles::attrSubdivisions ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fSubdivisions = dh.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Make sure we don&#39;t go above the maximum allowed by </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the extension</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fSubdivisions &gt; fMaxTessellationLevel)</div>\n\
<div class=\"line\">            fSubdivisions = fMaxTessellationLevel;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrColored)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() == <span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">            fNumColors = 1;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fNumColors = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrWireframe)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() == <span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">            fWireframe = 1;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fWireframe = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrTextured)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() == <span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">            fNumTextureCoords = 1;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fNumTextureCoords = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrNormalMode )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>() == 0)</div>\n\
<div class=\"line\">            fNormalMode = kNormalLinear;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fNormalMode = kNormalQuadratic;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrPointMode )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>() == 0)</div>\n\
<div class=\"line\">            fPointMode = kPointLinear;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fPointMode = kPointCubic;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrEnableVertexProgram )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() == <span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fExtensionSupported[kVertexShaderEXT])</div>\n\
<div class=\"line\">                fTestVertexProgram = 1;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                fTestVertexProgram = 0;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fTestVertexProgram = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> ( plug == pnTriangles::attrEnablePixelProgram )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _FRAGMENT_PROGRAM_READY_</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (dh.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>() == <span class=\"keyword\">true</span>)</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fExtensionSupported[kFragmentShaderEXT])</div>\n\
<div class=\"line\">                fTestFragmentProgram = 1;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                fTestFragmentProgram = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            fTestFragmentProgram = 0;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        fTestFragmentProgram = 0;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* pnTriangles::creator()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Create new pnTriangles class</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Return Value:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      a new object of this type</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> pnTriangles();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> pnTriangles::initialize()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Initialize class</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Return Values:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MS::kSuccess</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      MS::kFailure</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      </span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>             stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Subivision attribute</span></div>\n\
<div class=\"line\">    attrSubdivisions = nAttr.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;subdivisions&quot;</span>, <span class=\"stringliteral\">&quot;sd&quot;</span>, <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(10);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attrColored = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colored&quot;</span>, <span class=\"stringliteral\">&quot;cl&quot;</span>, <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attrTextured = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;textured&quot;</span>, <span class=\"stringliteral\">&quot;tx&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attrWireframe = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;wireframe&quot;</span>, <span class=\"stringliteral\">&quot;wf&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Normal mode attribute</span></div>\n\
<div class=\"line\">    attrNormalMode = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;quadraticNormals&quot;</span>, <span class=\"stringliteral\">&quot;qn&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0); <span class=\"comment\">// Linear</span></div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1); <span class=\"comment\">// Quadratic</span></div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Point mode attribute</span></div>\n\
<div class=\"line\">    attrPointMode= nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;cubicPoints&quot;</span>, <span class=\"stringliteral\">&quot;cp&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0); <span class=\"comment\">// Linear</span></div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1); <span class=\"comment\">// Cubic</span></div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable vertex program</span></div>\n\
<div class=\"line\">    attrEnableVertexProgram = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vertexProgram&quot;</span>, <span class=\"stringliteral\">&quot;vp&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable pixel program</span></div>\n\
<div class=\"line\">    attrEnablePixelProgram = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;pixelProgram&quot;</span>, <span class=\"stringliteral\">&quot;pp&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, 1 );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add the attributes we have created to the node</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    stat = addAttribute( attrSubdivisions );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrColored );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrWireframe );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrTextured );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrNormalMode );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrPointMode );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrEnableVertexProgram );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\">    stat = addAttribute( attrEnablePixelProgram );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!stat) { stat.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>); <span class=\"keywordflow\">return</span> stat;}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> pnTriangles::getFloat3(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <span class=\"keywordtype\">float</span> value[3])</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the attr to use</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   plug(thisMObject(), attr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> object;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plug.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(<span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;pnTrianglesNode::bind plug.getValue.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html\">MFnNumericData</a> data(<span class=\"keywordtype\">object</span>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;pnTrianglesNode::bind construct data.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = data.getData(value[0], value[1], value[2]);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;pnTrianglesNode::bind get values.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define DEG_TO_RAD(_x_) (3.14159265358979323846264338327950F / 180.0F * (_x_))</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> pnTriangles::bindVertexProgram(<span class=\"keyword\">const</span> <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> diffuse, </div>\n\
<div class=\"line\">                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> specular, </div>\n\
<div class=\"line\">                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> emission, </div>\n\
<div class=\"line\">                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> ambient)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Sample vertex program which sets up a yellow diffuse</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//                                  </span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// See if extension is supported</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fExtensionSupported[kVertexShaderEXT])</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable vertex shaders</span></div>\n\
<div class=\"line\">    glEnable(GL_VERTEX_SHADER_EXT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Generate a new vertex shader id, if none has been created.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fVertexShaderId != -1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBindVertexShaderEXT (fVertexShaderId); </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fVertexShaderId = glGenVertexShadersEXT (1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//Initialize global parameter bindings</span></div>\n\
<div class=\"line\">    GLuint Modelview = glBindParameterEXT (GL_MODELVIEW_MATRIX);</div>\n\
<div class=\"line\">    GLuint Projection = glBindParameterEXT (GL_PROJECTION_MATRIX);</div>\n\
<div class=\"line\">    <span class=\"comment\">// Q: does this read properly from vertex arrays or</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// do I need to define a variant pointer via glVariantPointerEXT ?</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    GLuint Vertex = glBindParameterEXT (GL_CURRENT_VERTEX_EXT);</div>\n\
<div class=\"line\">    <span class=\"comment\">// GL_CURRENT_NORMAL comes from the glGetPointerTarget enums</span></div>\n\
<div class=\"line\">    GLuint Normal = glBindParameterEXT (GL_CURRENT_NORMAL); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">//GLuint lightPos = glBindLightParameterEXT( 0, GL_POSITION );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Bind a diffuse shader </span></div>\n\
<div class=\"line\">    glBindVertexShaderEXT (fVertexShaderId); </div>\n\
<div class=\"line\">    glBeginVertexShaderEXT ();</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> direction[4] = { 0.57735f, 0.57735f, 0.57735f, 0.0f}; <span class=\"comment\">//direction vector (1,1,1) normalized</span></div>\n\
<div class=\"line\">        GLuint lightDirection;</div>\n\
<div class=\"line\">        GLuint diffMaterial;</div>\n\
<div class=\"line\">        GLuint sceneAmbient;</div>\n\
<div class=\"line\">        GLuint eyeVertex;</div>\n\
<div class=\"line\">        GLuint clipVertex;</div>\n\
<div class=\"line\">        GLuint eyeNormal;</div>\n\
<div class=\"line\">        GLuint intensity;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// generate local values</span></div>\n\
<div class=\"line\">        eyeVertex = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        clipVertex = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        eyeNormal = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        intensity = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// generate constant values</span></div>\n\
<div class=\"line\">        lightDirection = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_CONSTANT_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        diffMaterial = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_CONSTANT_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        sceneAmbient = glGenSymbolsEXT (GL_VECTOR_EXT, GL_LOCAL_CONSTANT_EXT, GL_FULL_RANGE_EXT, 1);</div>\n\
<div class=\"line\">        glSetLocalConstantEXT (lightDirection, GL_FLOAT, direction);</div>\n\
<div class=\"line\">        glSetLocalConstantEXT (diffMaterial, GL_FLOAT, (<span class=\"keywordtype\">void</span> *)&amp;(diffuse.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>));</div>\n\
<div class=\"line\">        glSetLocalConstantEXT (sceneAmbient, GL_FLOAT, (<span class=\"keywordtype\">void</span> *)&amp;(ambient.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>));</div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_MULTIPLY_MATRIX_EXT, eyeVertex, Modelview, Vertex);</div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_MULTIPLY_MATRIX_EXT, GL_OUTPUT_VERTEX_EXT, Projection, eyeVertex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// assumes no scaling/shearing in modelview matrix</span></div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_MULTIPLY_MATRIX_EXT, eyeNormal, Modelview, Normal);</div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_DOT3_EXT, intensity, lightDirection, eyeNormal);</div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_ADD_EXT, intensity, sceneAmbient, intensity);</div>\n\
<div class=\"line\">        glShaderOp2EXT (GL_OP_MUL_EXT, GL_OUTPUT_COLOR0_EXT, diffMaterial, intensity);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEndVertexShaderEXT ();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> pnTriangles::bindFragmentProgram()</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  THIS IS JUST SAMPLE CODE, MORE NEEDS TO BE DONE TO ACTUALLY USE</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  INCORPORATE A FRAGMENT SHADER.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// See if extension is supported</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fExtensionSupported[kFragmentShaderEXT])</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable vertex shaders</span></div>\n\
<div class=\"line\">    glEnable(GL_FRAGMENT_SHADER_ATI);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Generate a new fragment shader id, if none has been created.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fFragmentShaderId != -1)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBindFragmentShaderATI (fFragmentShaderId);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fFragmentShaderId = glGenFragmentShadersATI(1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glBindFragmentShaderATI (fFragmentShaderId);</div>\n\
<div class=\"line\">    glBeginFragmentShaderATI();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Place sample fragment shader code here ....</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEndFragmentShaderATI();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> pnTriangles::bind(<span class=\"keyword\">const</span> <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request, <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This bind demonstrates the usage of internal material</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      and texture properties. This shader must be connected</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      to the &quot;hardwareShader&quot; attribute of a lambert derived</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Setup the view</span></div>\n\
<div class=\"line\">    view.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\">    glPushAttrib( GL_ALL_ATTRIB_BITS );</div>\n\
<div class=\"line\">    glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> diffuse(1.0F, 1.0F, 0.0F, 1.0F);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> specular(1.0F, 1.0F, 1.0F, 1.0F);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> emission(0.0F, 0.0F, 0.0F, 1.0F);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> ambient(0.2F, 0.2F, 0.2F, 1.0F);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the diffuse and specular colors</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> shininess;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hasTransparency = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html\">MMaterial</a> material = request.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ad8d3426de607892e954c7698c52a8373\">material</a>();</div>\n\
<div class=\"line\">    fInTexturedMode = material.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#ab17b0e81e07f6b1683650ed86b2d634c\">materialIsTextured</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Setting this to true will get the default &quot;green&quot; material back</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// since it will try and evaluate this shader, which internally</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Maya does not understand -&gt; thus giving the &quot;green&quot; material back</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> useInternalMaterialSetting = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!useInternalMaterialSetting)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        material.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a5de28c9a4a1dd05888e01ff96e699cd4\">getEmission</a>( emission );</div>\n\
<div class=\"line\">        material.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a28d4e64c6e8426d1e0740042986e9bb4\">getSpecular</a>( specular );</div>\n\
<div class=\"line\">        shininess = 13.0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    material.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#aeffb187d35cd75bf7e28d7da40ea3b46\">getHasTransparency</a>( hasTransparency ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fInTexturedMode)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!fTestVertexProgram &amp;&amp; !useInternalMaterialSetting)</div>\n\
<div class=\"line\">            material.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a861059e539c057e505cb67a16e1bf4ab\">getDiffuse</a>( diffuse );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// In textured mode. Diffuse material is always white</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for texture blends</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!useInternalMaterialSetting)</div>\n\
<div class=\"line\">            diffuse.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> = diffuse.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a> = diffuse.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a> = diffuse.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4aec1a5be9d9a4a394a2e49e9744286e\">a</a> = 1.0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Use a vertex program to set up shading</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fTestVertexProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bindVertexProgram(diffuse, specular, emission, ambient);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (fTestFragmentProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bindFragmentProgram();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Don&#39;t use a vertex program to set up shading</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set up the material state</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glEnable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\">        glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT);</div>\n\
<div class=\"line\">        glColor4fv(&amp;ambient.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fInTexturedMode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnable( GL_TEXTURE_2D );</div>\n\
<div class=\"line\">            <a name=\"_a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html\">MDrawData</a> drawData = request.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a82892340b7bdce4fae2bd8d2a0feacaf\">drawData</a>();</div>\n\
<div class=\"line\">            material.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#ae046db7d059bb8c89d9f97e6771814e3\">applyTexture</a>( view, drawData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> scaleS, scaleT, translateS, translateT, rotate;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            material.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a2f964909d78491cfbcbe41682a9d842a\">getTextureTransformation</a>(scaleS, scaleT, translateS,</div>\n\
<div class=\"line\">                                              translateT, rotate);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            rotate = DEG_TO_RAD(-rotate);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> c = cosf(rotate);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> s = sinf(rotate);</div>\n\
<div class=\"line\">            translateS += ((c+s)/2.0F);</div>\n\
<div class=\"line\">            translateT += ((c-s)/2.0F);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glMatrixMode(GL_TEXTURE);</div>\n\
<div class=\"line\">            glPushMatrix();</div>\n\
<div class=\"line\">            glLoadIdentity();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(scaleS != 1.0f || scaleT != 1.0f)</div>\n\
<div class=\"line\">                glScalef(1.0f/scaleS, 1.0f/scaleT, 1.0f);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(translateS != 0.0f || translateT != 0.0f)</div>\n\
<div class=\"line\">                glTranslatef(0.5f-translateS, 0.5f-translateT, 0.0f);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                glTranslatef(0.5f, 0.5f, 0.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(rotate != 0.0f)</div>\n\
<div class=\"line\">                glRotatef(-rotate, 0.0f, 0.0f, 1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!useInternalMaterialSetting)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE);</div>\n\
<div class=\"line\">            glColor4fv(&amp;diffuse.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>);</div>\n\
<div class=\"line\">            glColorMaterial(GL_FRONT_AND_BACK, GL_SPECULAR);</div>\n\
<div class=\"line\">            glColor4fv(&amp;specular.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>);</div>\n\
<div class=\"line\">            glColorMaterial(GL_FRONT_AND_BACK, GL_EMISSION);</div>\n\
<div class=\"line\">            glColor4fv(&amp;emission.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>);</div>\n\
<div class=\"line\">            glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, shininess);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> dagPath =  request.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>();</div>\n\
<div class=\"line\">            material.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a6d63e4963e97825dc4aff1990173ac62\">evaluateMaterial</a>( view, dagPath );</div>\n\
<div class=\"line\">            material.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a5dd0244ce46c3c8593aa06e390f1cd19\">setMaterial</a>(dagPath, hasTransparency);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Do PN triangles in hardware, or do nothing</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// if LOD = 0</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExtensionSupported[kPNTriangesEXT] || (fSubdivisions == 0))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fSubdivisions != 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnable( GL_PN_TRIANGLES_ATI );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Set point mode</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fPointMode == kPointLinear)</div>\n\
<div class=\"line\">                glPNTrianglesiATI( GL_PN_TRIANGLES_POINT_MODE_ATI, </div>\n\
<div class=\"line\">                                   GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                glPNTrianglesiATI( GL_PN_TRIANGLES_POINT_MODE_ATI, </div>\n\
<div class=\"line\">                                   GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Set normal mode</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fNormalMode == kNormalLinear)</div>\n\
<div class=\"line\">                glPNTrianglesiATI( GL_PN_TRIANGLES_NORMAL_MODE_ATI, </div>\n\
<div class=\"line\">                                   GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                glPNTrianglesiATI( GL_PN_TRIANGLES_NORMAL_MODE_ATI, </div>\n\
<div class=\"line\">                                   GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Set tessellation level</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            glPNTrianglesiATI( GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI,</div>\n\
<div class=\"line\">                              fSubdivisions );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> pnTriangles::unbind(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Disable vertex shader</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fTestVertexProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable(GL_VERTEX_SHADER_EXT);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Disable fragment shader</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (fTestFragmentProgram)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable(GL_FRAGMENT_SHADER_ATI);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Disable regular material state</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable( GL_TEXTURE_2D );</div>\n\
<div class=\"line\">        glDisable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fInTexturedMode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glMatrixMode(GL_TEXTURE);</div>\n\
<div class=\"line\">            glPopMatrix();</div>\n\
<div class=\"line\">            glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Disable PN triangles extension if needed</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fExtensionSupported[kPNTriangesEXT] || (fSubdivisions == 0))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fSubdivisions != 0)</div>\n\
<div class=\"line\">            glDisable( GL_PN_TRIANGLES_ATI );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    glPopClientAttrib();</div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> pnTriangles:: computePNTriangles(<span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                      <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * normalArray,</div>\n\
<div class=\"line\">                                      <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * texCoordArray,</div>\n\
<div class=\"line\">                                      <span class=\"keywordtype\">float</span> * pnVertexArray,</div>\n\
<div class=\"line\">                                      <span class=\"keywordtype\">float</span> * pnNormalArray,</div>\n\
<div class=\"line\">                                      <span class=\"keywordtype\">float</span> * pnTexCoordArray,</div>\n\
<div class=\"line\">                                      <span class=\"keywordtype\">float</span> * pnColorArray)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> triangleCount = 0;</div>\n\
<div class=\"line\">    <span class=\"comment\">// Software implementation left to the user...</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> triangleCount;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> pnTriangles::geometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// We assume triangles here.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (prim != GL_TRIANGLES)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;    <span class=\"comment\">// Should call parent class here !</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fWireframe)</div>\n\
<div class=\"line\">        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> needColors = (fNumColors &amp;&amp; colorCount);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> needTexCoords = (fNumTextureCoords &amp;&amp; texCoordCount);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> needNormals = (fNumNormals &amp;&amp; normalCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fExtensionSupported[kPNTriangesEXT])</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Write code here to support PN-triangles in software...</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glVertexPointer(3, GL_FLOAT, 0, vertexArray);</div>\n\
<div class=\"line\">    glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (needNormals)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glNormalPointer(GL_FLOAT, 0, normalArrays[0]);</div>\n\
<div class=\"line\">        glEnableClientState(GL_NORMAL_ARRAY);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (needTexCoords)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glTexCoordPointer(2, GL_FLOAT, 0, texCoordArrays[0]);</div>\n\
<div class=\"line\">        glEnableClientState(GL_TEXTURE_COORD_ARRAY);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (needColors)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Override material color</span></div>\n\
<div class=\"line\">        glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE);</div>\n\
<div class=\"line\">        glColorPointer(4, GL_FLOAT, 0, colorArrays[0]);</div>\n\
<div class=\"line\">        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glDrawElements(prim, indexCount, GL_UNSIGNED_INT, indexArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fWireframe)</div>\n\
<div class=\"line\">        glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> pnTriangles::normalsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fNumNormals;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> pnTriangles::texCoordsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fInTexturedMode)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> fNumTextureCoords;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> pnTriangles::colorsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fNumColors;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Main plugin interface</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Initialize plugin</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      obj - a handle to the plug-in object (use MFnPlugin to access it)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;shader/surface/utility&quot;</span> );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.5&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;pnTriangles&quot;</span>, pnTriangles::id, pnTriangles::creator,</div>\n\
<div class=\"line\">                                  pnTriangles::initialize, <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee2b86760284068eef3c463f9de9babc\">MPxNode::kHwShaderNode</a>, &amp;UserClassify  );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Deregister node</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      obj - a handle to the plug-in object (use MFnPlugin to access it)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( pnTriangles::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";