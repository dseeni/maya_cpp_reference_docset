var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>apiMeshShape/apiMeshSubSceneOverride.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>apiMeshShape/apiMeshSubSceneOverride.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">apiMeshShape/apiMeshSubSceneOverride.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// apiMeshSubSceneOverride.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshSubSceneOverride.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshShape.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshGeom.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPathArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGLFunctionTable.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometryUtilities.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHardwareRenderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObject.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObjectArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlugArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxComponentConverter.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MShaderManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MUserData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MViewport2Renderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;vector&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;assert.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WINDOWS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;d3d11.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">namespace </span>apiMeshSubSceneOverrideHelpers</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Helper class for link lost callback</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>ShadedItemUserData : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        ShadedItemUserData(apiMeshSubSceneOverride* ov)</div>\n\
<div class=\"line\">        : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>(<span class=\"keyword\">false</span>), fOverride(ov) {}</div>\n\
<div class=\"line\">        ~ShadedItemUserData() { fOverride = NULL; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        apiMeshSubSceneOverride* fOverride;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Custom user data class to attach to render items</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// to help with viewport 2.0 selection</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>apiMeshHWSelectionUserData : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\">        : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>(<span class=\"keyword\">true</span>) <span class=\"comment\">// let Maya clean up</span></div>\n\
<div class=\"line\">        , fMeshGeom(NULL)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> ~apiMeshHWSelectionUserData()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        apiMeshGeom* fMeshGeom;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Custom component converter to select components</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Attached to the vertex, edge and face selection render items</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// respectively apiMeshSubSceneOverride::sVertexSelectionName, apiMeshSubSceneOverride::sEdgeSelectionName</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and apiMeshSubSceneOverride::sFaceSelectionName</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">class </span>simpleComponentConverter : <span class=\"keyword\">public</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html\">MHWRender::MPxComponentConverter</a></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">        simpleComponentConverter(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a> componentType, <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> selectionType)</div>\n\
<div class=\"line\">        : <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_component_converter.html\">MHWRender::MPxComponentConverter</a>()</div>\n\
<div class=\"line\">        , fComponentType(componentType)</div>\n\
<div class=\"line\">        , fSelectionType(selectionType) {}</div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> ~simpleComponentConverter() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> initialize(<span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>&amp; renderItem)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Create the component selection object</span></div>\n\
<div class=\"line\">            fComponentObject = fComponent.create( fComponentType );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// For face selection, </span></div>\n\
<div class=\"line\">            <span class=\"comment\">// create a lookup table to match triangle intersection with face id :</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// One face may contains more than one triangle</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fComponentType == <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>) {</div>\n\
<div class=\"line\">                apiMeshHWSelectionUserData* selectionData = <span class=\"keyword\">dynamic_cast&lt;</span>apiMeshHWSelectionUserData*<span class=\"keyword\">&gt;</span>(renderItem.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#afd8b782f19e9508747c851a990d8f5db\">customData</a>());</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(selectionData) {</div>\n\
<div class=\"line\">                    apiMeshGeom* meshGeom = selectionData-&gt;fMeshGeom;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Allocate faces lookup table</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles = 0;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; ++i) {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (numVerts &gt; 2) {</div>\n\
<div class=\"line\">                            numTriangles += numVerts - 2;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    fLookupTable.resize(numTriangles);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Fill faces lookup table</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; ++faceIdx) {</div>\n\
<div class=\"line\">                        <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (numVerts &gt; 2) {</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; ++v) {</div>\n\
<div class=\"line\">                                fLookupTable[idx++] = faceIdx;</div>\n\
<div class=\"line\">                            }</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span> addIntersection(<a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html\">MHWRender::MIntersection</a>&amp; intersection)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Convert the intersection index, which represent the primitive position in the</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// index buffer, to the correct component id</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// For vertex and edge: the primitive index value is the same as the component id</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// For face: get the face id that matches the triangle index from the lookup table</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fComponentType == <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a>) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Only accept edge selection intersection on draw instance #2 -- scaled by 2</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// and instance #-1 (when useDrawInstancingOnEdgeSelectionItem is false)</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (intersection.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#a35ab9f5cd2b7e3c46d5c661d9cd73571\">instanceID</a>() == 1 || intersection.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#a35ab9f5cd2b7e3c46d5c661d9cd73571\">instanceID</a>() == 3)</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> idx = intersection.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_intersection.html#ae85767d1d26fc7491279d1f2c277b499\">index</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fComponentType == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>) {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (idx &gt;= 0 &amp;&amp; idx &lt; (<span class=\"keywordtype\">int</span>)fLookupTable.size()) {</div>\n\
<div class=\"line\">                    idx = fLookupTable[idx];</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fComponent.addElement(idx);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> component()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Return the component object that contains the ids of the selected components</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> fComponentObject;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">virtual</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> selectionMask()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\">        </span>{</div>\n\
<div class=\"line\">            <span class=\"comment\">// This converter is only valid for specified selection type</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> fSelectionType;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> MPxComponentConverter* creatorVertexSelection()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// creator function to instanciate a component converter for vertex selection</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> mask;</div>\n\
<div class=\"line\">            mask.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#a786c24d1df83aa7a454c3a9b305f225c\">setMask</a>(<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">            mask.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#ab2205ed8ba273131fea652a106524bda\">addMask</a>(<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> simpleComponentConverter(<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>, mask);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> MPxComponentConverter* creatorEdgeSelection()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// creator function to instanciate a component converter for edge selection</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> simpleComponentConverter(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a>, <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> MPxComponentConverter* creatorFaceSelection()</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// creator function to instanciate a component converter for face selection</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> simpleComponentConverter(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>, <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a> fComponentType;</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> fSelectionType;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fComponent;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> fComponentObject;</div>\n\
<div class=\"line\">        std::vector&lt;int&gt; fLookupTable;</div>\n\
<div class=\"line\">    };</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>apiMeshSubSceneOverrideHelpers;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Compile time switching for regular MVertexBuffer management vs. custom</span></div>\n\
<div class=\"line\"><span class=\"comment\">// user buffer management. Just an example to show</span></div>\n\
<div class=\"line\"><span class=\"comment\">// how custom buffers can be used. See the bounding box code below.     </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Note this now works for both OpenGL and DirectX11 Viewport 2.0</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> sUseCustomUserBuffersForBoundingBox = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49\">MHWRender::DrawAPI</a> sDrawAPI = <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a634ee767a8e90ff4d56e140459cca31f\">MHWRender::kNone</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> useSelectHighlight(<span class=\"keyword\">const</span> <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a>&amp; selectedList, <span class=\"keyword\">const</span> <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path);</div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> floatApproxEqual(<span class=\"keywordtype\">float</span> left, <span class=\"keywordtype\">float</span> right);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sWireName(<span class=\"stringliteral\">&quot;apiMeshWire&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sSelectName(<span class=\"stringliteral\">&quot;apiMeshSelection&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sBoxName(<span class=\"stringliteral\">&quot;apiMeshBox&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sSelectedBoxName(<span class=\"stringliteral\">&quot;apiMeshBoxSelection&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sShadedName(<span class=\"stringliteral\">&quot;apiMeshShaded&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sVertexSelectionName(<span class=\"stringliteral\">&quot;apiMeshVertexSelection&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sEdgeSelectionName(<span class=\"stringliteral\">&quot;apiMeshEdgeSelection&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sFaceSelectionName(<span class=\"stringliteral\">&quot;apiMeshFaceSelection&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sActiveVertexName(<span class=\"stringliteral\">&quot;apiMeshActiveVertex&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sActiveEdgeName(<span class=\"stringliteral\">&quot;apiMeshActiveEdge&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> apiMeshSubSceneOverride::sActiveFaceName(<span class=\"stringliteral\">&quot;apiMeshActiveFace&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiMeshSubSceneOverride::apiMeshSubSceneOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">: MPxSubSceneOverride(obj)</div>\n\
<div class=\"line\">, fObject(obj)</div>\n\
<div class=\"line\">, fMesh(NULL)</div>\n\
<div class=\"line\">, fWireShader(NULL)</div>\n\
<div class=\"line\">, fThickWireShader(NULL)</div>\n\
<div class=\"line\">, fSelectShader(NULL)</div>\n\
<div class=\"line\">, fThickSelectShader(NULL)</div>\n\
<div class=\"line\">, fShadedShader(NULL)</div>\n\
<div class=\"line\">, fVertexComponentShader(NULL)</div>\n\
<div class=\"line\">, fEdgeComponentShader(NULL)</div>\n\
<div class=\"line\">, fFaceComponentShader(NULL)</div>\n\
<div class=\"line\">, fPositionBuffer(NULL)</div>\n\
<div class=\"line\">, fNormalBuffer(NULL)</div>\n\
<div class=\"line\">, fBoxPositionBuffer(NULL)</div>\n\
<div class=\"line\">, fBoxPositionBufferId(0)</div>\n\
<div class=\"line\">, fBoxPositionBufferDX(NULL)</div>\n\
<div class=\"line\">, fBoxIndexBufferId(0)</div>\n\
<div class=\"line\">, fBoxIndexBufferDX(NULL)</div>\n\
<div class=\"line\">, fWireIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fVertexIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fBoxIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fShadedIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fActiveVerticesIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fActiveEdgesIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fActiveFacesIndexBuffer(NULL)</div>\n\
<div class=\"line\">, fThickLineWidth(-1.0)</div>\n\
<div class=\"line\">, fQueuedLineWidth(-1.0)</div>\n\
<div class=\"line\">, fNumInstances(0)</div>\n\
<div class=\"line\">, fIsInstanceMode(false)</div>\n\
<div class=\"line\">, fQueueUpdate(false)</div>\n\
<div class=\"line\">, fUseQueuedLineUpdate(false) <span class=\"comment\">// Set to true to run sample line width update code</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// get the real apiMesh object from the MObject</span></div>\n\
<div class=\"line\">    <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> node(obj, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fMesh = <span class=\"keyword\">dynamic_cast&lt;</span>apiMesh*<span class=\"keyword\">&gt;</span>(node.userNode());</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">apiMeshSubSceneOverride::~apiMeshSubSceneOverride()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fMesh = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Clear out LinkLost callbacks still in flight:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// They might get triggered if the shader are destroyed before</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the render items, and at this point the fOverride member is clearly invalid.</span></div>\n\
<div class=\"line\">    std::vector&lt;ShadedItemUserData*&gt;::iterator it;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (it = fLinkLostCallbackData.begin(); it != fLinkLostCallbackData.end(); ++it)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        ShadedItemUserData* cbData = *it;</div>\n\
<div class=\"line\">        cbData-&gt;fOverride = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    fLinkLostCallbackData.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (renderer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MHWRender::MShaderManager</a>* shaderMgr =</div>\n\
<div class=\"line\">            renderer-&gt;<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (shaderMgr)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fWireShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fWireShader);</div>\n\
<div class=\"line\">                fWireShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fThickWireShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fThickWireShader);</div>\n\
<div class=\"line\">                fThickWireShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fSelectShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fSelectShader);</div>\n\
<div class=\"line\">                fSelectShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fThickSelectShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fThickSelectShader);</div>\n\
<div class=\"line\">                fThickSelectShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fShadedShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fShadedShader);</div>\n\
<div class=\"line\">                fShadedShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fVertexComponentShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fVertexComponentShader);</div>\n\
<div class=\"line\">                fVertexComponentShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fEdgeComponentShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fEdgeComponentShader);</div>\n\
<div class=\"line\">                fEdgeComponentShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fFaceComponentShader) {</div>\n\
<div class=\"line\">                shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a0c7deb55edc231cbb2365b271ecd55f8\">releaseShader</a>(fFaceComponentShader);</div>\n\
<div class=\"line\">                fFaceComponentShader = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    deleteBuffers();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::untrackLinkLostData(ShadedItemUserData* data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">size_t</span> i = 0; i &lt; fLinkLostCallbackData.size(); ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fLinkLostCallbackData[i] == data)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fLinkLostCallbackData[i] = fLinkLostCallbackData.back();</div>\n\
<div class=\"line\">            fLinkLostCallbackData.pop_back();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49\">MHWRender::DrawAPI</a> apiMeshSubSceneOverride::supportedDrawAPIs()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// this plugin supports both GL and DX</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a72361be679c1aca1c1be5f9b500a3315\">MHWRender::kOpenGL</a> | <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a90bc0a1678af7ac4d1e62e2e954be4e5\">MHWRender::kDirectX11</a> | <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49aaebf48c70b63878eff38483392f19fb7\">MHWRender::kOpenGLCoreProfile</a>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshSubSceneOverride::requiresUpdate(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp; container,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Nothing in the container, definitely need to update</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (container.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab1eb6de2bf3aa228929ab4b40c73507c\">count</a>() == 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update always. This could be optimized to only update when the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// actual shape node detects a change.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::update(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp; container,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Update render items based on current set of instances</span></div>\n\
<div class=\"line\">    manageRenderItems(container, frameContext,</div>\n\
<div class=\"line\">        fMesh-&gt;shapeDirty() || container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab1eb6de2bf3aa228929ab4b40c73507c\">count</a>() == 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Always reset shape dirty flag</span></div>\n\
<div class=\"line\">    fMesh-&gt;resetShapeDirty();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshSubSceneOverride::furtherUpdateRequired(</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fUseQueuedLineUpdate)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!frameContext.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#ae814ee8697336ed8a1f43182c3a43fd6\">inUserInteraction</a>()</div>\n\
<div class=\"line\">            &amp;&amp; !frameContext.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acae6b9f8aa6589912296983df9f1aca8\">userChangingViewContext</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> fQueueUpdate;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::manageRenderItems(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html\">MHWRender::MSubSceneContainer</a>&amp; container,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext,</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> updateGeometry)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Preamble</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fMesh || fObject.isNull()) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MRenderer</a>* renderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!renderer) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MShaderManager</a>* shaderMgr = renderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shaderMgr) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> node(fObject, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <a name=\"_a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html\">MDagPathArray</a> instances;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!node.getAllPaths(instances) || instances.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Constants</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> sRed[]   = {1.0f, 0.0f, 0.0f, 1.0f};</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> sGreen[] = {0.0f, 1.0f, 0.0f, 1.0f};</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> sWhite[] = {1.0f, 1.0f, 1.0f, 1.0f};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up shared shaders if needed</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fWireShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fWireShader = shaderMgr-&gt;<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MShaderManager::k3dSolidShader</a>);</div>\n\
<div class=\"line\">        fWireShader-&gt;<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sRed);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fThickWireShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fThickWireShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MShaderManager::k3dThickLineShader</a>);</div>\n\
<div class=\"line\">        fThickWireShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sRed);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fSelectShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fSelectShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MShaderManager::k3dSolidShader</a>);</div>\n\
<div class=\"line\">        fSelectShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sGreen);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fThickSelectShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fThickSelectShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MShaderManager::k3dThickLineShader</a>);</div>\n\
<div class=\"line\">        fThickSelectShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sGreen);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fVertexComponentShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fVertexComponentShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a6790e2efa2fa44e937ae5f9986c27e38\">MShaderManager::k3dFatPointShader</a>);</div>\n\
<div class=\"line\">        fVertexComponentShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite);</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> pointSize[2] = {5.0, 5.0};</div>\n\
<div class=\"line\">        fVertexComponentShader-&gt;setParameter(<span class=\"stringliteral\">&quot;pointSize&quot;</span>, pointSize);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fEdgeComponentShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fEdgeComponentShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a542ec98bf64acd6bf2618143efd63687\">MShaderManager::k3dThickLineShader</a>);</div>\n\
<div class=\"line\">        fEdgeComponentShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite);</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> lineWidth[2] = {2.0, 2.0};</div>\n\
<div class=\"line\">        fEdgeComponentShader-&gt;setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, lineWidth);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fFaceComponentShader)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fFaceComponentShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a7a0eb28b48e8f9ed6f666b52a27a45f5\">MShaderManager::k3dSolidShader</a>);</div>\n\
<div class=\"line\">        fFaceComponentShader-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html#aa17e2c9a17b86064950103066fa307ef\">setParameter</a>(<span class=\"stringliteral\">&quot;solidColor&quot;</span>, sWhite);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up shared geometry if necessary</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (updateGeometry) rebuildGeometryBuffers();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fPositionBuffer || !fNormalBuffer || !fBoxPositionBuffer ||</div>\n\
<div class=\"line\">        !fWireIndexBuffer || !fBoxIndexBuffer || !fShadedIndexBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> selectedList;</div>\n\
<div class=\"line\">    <a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a6d81d38246555884897fb153c93aaf42\">MGlobal::getActiveSelectionList</a>(selectedList);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> anyMatrixChanged = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> itemsChanged = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> instanceArrayLength = instances.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numInstanceSelected = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numInstanceUnselected = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numInstances = 0;</div>\n\
<div class=\"line\">    <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> instanceMatrixArray(instanceArrayLength);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> selectedInstanceMatrixArray(instanceArrayLength);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> unselectedInstanceMatrixArray(instanceArrayLength);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> instIdx=0; instIdx&lt;instanceArrayLength; instIdx++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If expecting large numbers of instances, then walking through the whole</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// list of instances every time to look for changes is not efficient</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// enough.  Watching for change events and changing only the required</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// instances should be done instead.  This method of checking for selection</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// status is also not fast.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!instances[instIdx].isValid()  || !instances[instIdx].isVisible())</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> instanceNum = instances[instIdx].instanceNumber();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        InstanceInfo instanceInfo(instances[instIdx].inclusiveMatrix(),</div>\n\
<div class=\"line\">                                  useSelectHighlight(selectedList, instances[instIdx]));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        InstanceInfoMap::iterator iter = fInstanceInfoCache.find(instanceNum);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (iter == fInstanceInfoCache.end() ||</div>\n\
<div class=\"line\">            iter-&gt;second.fIsSelected != instanceInfo.fIsSelected ||</div>\n\
<div class=\"line\">            !iter-&gt;second.fTransform.isEquivalent(instanceInfo.fTransform))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fInstanceInfoCache[instanceNum] = instanceInfo;</div>\n\
<div class=\"line\">            anyMatrixChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        instanceMatrixArray[numInstances++] = instanceInfo.fTransform;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (instanceInfo.fIsSelected)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            selectedInstanceMatrixArray[numInstanceSelected++] = instanceInfo.fTransform;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            unselectedInstanceMatrixArray[numInstanceUnselected++] = instanceInfo.fTransform;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    instanceMatrixArray.setLength(numInstances);  <span class=\"comment\">//collapse to correct length</span></div>\n\
<div class=\"line\">    selectedInstanceMatrixArray.setLength(numInstanceSelected);</div>\n\
<div class=\"line\">    unselectedInstanceMatrixArray.setLength(numInstanceUnselected);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fNumInstances != numInstances)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        anyMatrixChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        fNumInstances = numInstances;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> anyInstanceSelected = numInstanceSelected &gt; 0;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> anyInstanceUnselected = numInstanceUnselected &gt; 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    std::set&lt;int&gt; activeVerticesSet;</div>\n\
<div class=\"line\">    std::set&lt;int&gt; activeEdgesSet;</div>\n\
<div class=\"line\">    std::set&lt;int&gt; activeFacesSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fMesh-&gt;hasActiveComponents())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> activeComponents = fMesh-&gt;activeComponents();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeComponents.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent( activeComponents[0] );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fnComponent.elementCount())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> activeIds;</div>\n\
<div class=\"line\">                fnComponent.getElements( activeIds );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                        activeVerticesSet.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a95aaff2c93e48e4da000d79e8324c714\">insert</a>( activeIds[i] );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a18f788d50a75ca81a0dc5a2538f364ae\">MFn::kMeshEdgeComponent</a>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                        activeEdgesSet.insert( activeIds[i] );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>(fnComponent.componentType() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a>)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;activeIds.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); ++i)</div>\n\
<div class=\"line\">                        activeFacesSet.insert( activeIds[i] );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update index buffer of active items if necessary</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> updateActiveItems =</div>\n\
<div class=\"line\">        updateGeometry ||</div>\n\
<div class=\"line\">        fActiveVerticesSet != activeVerticesSet ||</div>\n\
<div class=\"line\">        fActiveEdgesSet != activeEdgesSet ||</div>\n\
<div class=\"line\">        fActiveFacesSet != activeFacesSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fActiveVerticesSet = activeVerticesSet;</div>\n\
<div class=\"line\">    fActiveEdgesSet = activeEdgesSet;</div>\n\
<div class=\"line\">    fActiveFacesSet = activeFacesSet;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (updateActiveItems)</div>\n\
<div class=\"line\">        rebuildActiveComponentIndexBuffers();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> anyVertexSelected = !fActiveVerticesSet.empty();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> anyEdgeSelected = !fActiveEdgesSet.empty();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> anyFaceSelected = !fActiveFacesSet.empty();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( (anyVertexSelected &amp;&amp; fActiveVerticesIndexBuffer == NULL) ||</div>\n\
<div class=\"line\">        (anyEdgeSelected &amp;&amp; fActiveEdgesIndexBuffer == NULL) ||</div>\n\
<div class=\"line\">        (anyFaceSelected &amp;&amp; fActiveFacesIndexBuffer == NULL) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add render items if necessary.  Remove any pre-existing render items</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// that are no longer needed.</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* wireItem = container.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sWireName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!wireItem &amp;&amp; anyInstanceUnselected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        wireItem = <a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sWireName,</div>\n\
<div class=\"line\">            <a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        wireItem-&gt;<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a62a997a862929eb62b0273d1db9e8e0d\">MGeometry::kWireframe</a>);</div>\n\
<div class=\"line\">        wireItem-&gt;<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MRenderItem::sActiveWireDepthPriority</a>);</div>\n\
<div class=\"line\">        wireItem-&gt;<a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fWireShader);</div>\n\
<div class=\"line\">        container.<a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(wireItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (wireItem &amp;&amp; !anyInstanceUnselected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sWireName);</div>\n\
<div class=\"line\">        wireItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* selectItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sSelectName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!selectItem &amp;&amp; anyInstanceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sSelectName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>((<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MGeometry::DrawMode</a>)(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a62a997a862929eb62b0273d1db9e8e0d\">MGeometry::kWireframe</a> | <a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MGeometry::kShaded</a> | <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MGeometry::kTextured</a>));</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MRenderItem::sActiveWireDepthPriority</a>);</div>\n\
<div class=\"line\">        selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fSelectShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(selectItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (selectItem &amp;&amp; !anyInstanceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sSelectName);</div>\n\
<div class=\"line\">        selectItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* boxItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sBoxName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!boxItem &amp;&amp; anyInstanceUnselected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        boxItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sBoxName,</div>\n\
<div class=\"line\">            <a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea051cc5c371043b627d1d7bee0d06e030\">MRenderItem::NonMaterialSceneItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        boxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a74c3784e844e54dab272e794fa6bcaa9\">MGeometry::kBoundingBox</a>);</div>\n\
<div class=\"line\">        boxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fWireShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(boxItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (boxItem &amp;&amp; !anyInstanceUnselected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sBoxName);</div>\n\
<div class=\"line\">        boxItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* selectedBoxItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sSelectedBoxName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!selectedBoxItem &amp;&amp; anyInstanceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectedBoxItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sSelectedBoxName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea051cc5c371043b627d1d7bee0d06e030\">MRenderItem::NonMaterialSceneItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        selectedBoxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a74c3784e844e54dab272e794fa6bcaa9\">MGeometry::kBoundingBox</a>);</div>\n\
<div class=\"line\">        selectedBoxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fSelectShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(selectedBoxItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (selectedBoxItem &amp;&amp; !anyInstanceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sSelectedBoxName);</div>\n\
<div class=\"line\">        selectedBoxItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* shadedItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sShadedName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!shadedItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// We always want a shaded item</span></div>\n\
<div class=\"line\">        shadedItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sShadedName,</div>\n\
<div class=\"line\">            <a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49ea9990000c1137c9606135fe45d6b0ef50\">MRenderItem::MaterialSceneItem</a>,</div>\n\
<div class=\"line\">            <a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MGeometry::kTriangles</a>);</div>\n\
<div class=\"line\">        shadedItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>((<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MGeometry::DrawMode</a>)(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3ba47eb2caff6eea24d37de5f572f769\">MGeometry::kShaded</a> | <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a17e882561d8db0dedc215d0d4978e887\">MGeometry::kTextured</a>));</div>\n\
<div class=\"line\">        shadedItem-&gt;<a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a634faadbe865d745bc8ed447efe671da\">setExcludedFromPostEffects</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">        shadedItem-&gt;<a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a4679f5dfcf97d7470561e4adc1cbe21c\">castsShadows</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        shadedItem-&gt;<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a84fc76ef02716b725765f6de1ff3a8c6\">receivesShadows</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(shadedItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update shader for shaded item</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fMesh-&gt;materialDirty() || (!fShadedShader &amp;&amp; !shadedItem-&gt;<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2d1a4a42bc868748d574acbe644677a1\">isShaderFromNode</a>()))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> hasSetShaderFromNode = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Grab shading node from first component of first instance of the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// object and use it to get an MShaderInstance. This could be expanded</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to support full instancing and components if necessary.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> sets, comps;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (node.getConnectedSetsAndMembers(0, sets, comps, <span class=\"keyword\">true</span>))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;sets.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(); i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> fnSet(sets[i], &amp;status);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a name=\"_a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> shaderPlug = fnSet.findPlug(<span class=\"stringliteral\">&quot;surfaceShader&quot;</span>);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!shaderPlug.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a1c18142e8f09680711f472aa2ddf8ac6\">isNull</a>())</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a name=\"_a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html\">MPlugArray</a> connectedPlugs;</div>\n\
<div class=\"line\">                        shaderPlug.<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a3727c18c58fc5ba8be5fb2582b5d06f1\">connectedTo</a>(connectedPlugs, <span class=\"keyword\">true</span>, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">                        fLinkLostCallbackData.push_back(<span class=\"keyword\">new</span> ShadedItemUserData(<span class=\"keyword\">this</span>));</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (connectedPlugs.<a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt;= 1 &amp;&amp;</div>\n\
<div class=\"line\">                            shadedItem-&gt;<a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a024fdece2791544da917fff64e60cb13\">setShaderFromNode</a>(</div>\n\
<div class=\"line\">                                connectedPlugs[0].node(),</div>\n\
<div class=\"line\">                                instances[0],</div>\n\
<div class=\"line\">                                shadedItemLinkLost,</div>\n\
<div class=\"line\">                                fLinkLostCallbackData.back()))</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            assert(shadedItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2d1a4a42bc868748d574acbe644677a1\">isShaderFromNode</a>());</div>\n\
<div class=\"line\">                            hasSetShaderFromNode = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!hasSetShaderFromNode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!fShadedShader)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fShadedShader = shaderMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a8e4ad27d691969622af2b05d8c6213d9\">getStockShader</a>(</div>\n\
<div class=\"line\">                    <a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html#a1f7c5db8a3b5804c6ffce5f305bf51a8a56de0b4dccd3a1c52e8ddd11aac3e0e2\">MShaderManager::k3dBlinnShader</a>);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            shadedItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fShadedShader);</div>\n\
<div class=\"line\">            assert(!shadedItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2d1a4a42bc868748d574acbe644677a1\">isShaderFromNode</a>());</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        fMesh-&gt;setMaterialDirty(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item for vertex selection</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* vertexSelectionItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sVertexSelectionName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!vertexSelectionItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        vertexSelectionItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sVertexSelectionName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\">        vertexSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3b28d66a728ec358f3aae323b2c24fa9\">MHWRender::MGeometry::kSelectionOnly</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// set the selection mask to kSelectMeshVerts : we want the render item to be used for Vertex Components selection</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> mask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">        mask.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\">        vertexSelectionItem-&gt;<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( mask );</div>\n\
<div class=\"line\">        <span class=\"comment\">// set selection priority : on top</span></div>\n\
<div class=\"line\">        vertexSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#abf0686a71845159b7a473312fe05044a\">MRenderItem::sSelectionDepthPriority</a>);</div>\n\
<div class=\"line\">        vertexSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fVertexComponentShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(vertexSelectionItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// change this value to enable item instancing : same item will be rendered multiple times</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the edge selection item will be visible in the viewport and rendered 3 times (with different scaling)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// only the second instance (scale 1.5) will be selectable (see simpleComponentConverter)</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> useDrawInstancingOnEdgeSelectionItem = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item for edge selection</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* edgeSelectionItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sEdgeSelectionName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!edgeSelectionItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> drawMode = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3b28d66a728ec358f3aae323b2c24fa9\">MHWRender::MGeometry::kSelectionOnly</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> depthPriority = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#abf0686a71845159b7a473312fe05044a\">MRenderItem::sSelectionDepthPriority</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (useDrawInstancingOnEdgeSelectionItem) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// display in viewport and in selection</span></div>\n\
<div class=\"line\">            drawMode = <a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MHWRender::MGeometry::kAll</a>;</div>\n\
<div class=\"line\">            <span class=\"comment\">// reduce priority so we can see the active item</span></div>\n\
<div class=\"line\">            depthPriority = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#adb484c507442ebce56eac38bd07cac07\">MRenderItem::sActiveWireDepthPriority</a>-1;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        edgeSelectionItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sEdgeSelectionName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>( (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3\">MGeometry::DrawMode</a>)drawMode);</div>\n\
<div class=\"line\">        <span class=\"comment\">// set the selection mask to kSelectMeshEdges : we want the render item to be used for Edge Components selection</span></div>\n\
<div class=\"line\">        edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a> );</div>\n\
<div class=\"line\">        edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(depthPriority);</div>\n\
<div class=\"line\">        edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fWireShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(edgeSelectionItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item for face selection</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* faceSelectionItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sFaceSelectionName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!faceSelectionItem)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        faceSelectionItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sFaceSelectionName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MGeometry::kTriangles</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// use for selection only : not visible in viewport</span></div>\n\
<div class=\"line\">        faceSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a3b28d66a728ec358f3aae323b2c24fa9\">MHWRender::MGeometry::kSelectionOnly</a>);</div>\n\
<div class=\"line\">        <span class=\"comment\">// set the selection mask to kSelectMeshFaces : we want the render item to be used for Face Components selection</span></div>\n\
<div class=\"line\">        faceSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a793ce3d41d7f13aea020b811379a3ef3\">setSelectionMask</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a> );</div>\n\
<div class=\"line\">        <span class=\"comment\">// set selection priority : on top</span></div>\n\
<div class=\"line\">        faceSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#abf0686a71845159b7a473312fe05044a\">MRenderItem::sSelectionDepthPriority</a>);</div>\n\
<div class=\"line\">        faceSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fFaceComponentShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(faceSelectionItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// create and add a custom data to help the face component converter</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (updateGeometry)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        apiMeshHWSelectionUserData* mySelectionData = <span class=\"keyword\">new</span> apiMeshHWSelectionUserData();</div>\n\
<div class=\"line\">        mySelectionData-&gt;fMeshGeom = fMesh-&gt;meshGeom();</div>\n\
<div class=\"line\">        faceSelectionItem-&gt;<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a1c029ea3297c266381dce0c7b042b793\">setCustomData</a>(mySelectionData);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item to display active (selected) vertices</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* activeVertexItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sActiveVertexName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!activeVertexItem &amp;&amp; anyVertexSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        activeVertexItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sActiveVertexName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MGeometry::kPoints</a>);</div>\n\
<div class=\"line\">        activeVertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        activeVertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac0ade2503ccc47f3bd487b9ae7bf53e4\">MRenderItem::sActivePointDepthPriority</a>);</div>\n\
<div class=\"line\">        activeVertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fVertexComponentShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(activeVertexItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (activeVertexItem &amp;&amp; !anyVertexSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sActiveVertexName);</div>\n\
<div class=\"line\">        activeVertexItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item to display active (selected) edges</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* activeEdgeItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sActiveEdgeName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!activeEdgeItem &amp;&amp; anyEdgeSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        activeEdgeItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sActiveEdgeName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MGeometry::kLines</a>);</div>\n\
<div class=\"line\">        activeEdgeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        activeEdgeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2ef0afa87b031ef0f0091e79eb81313a\">MRenderItem::sActiveLineDepthPriority</a>);</div>\n\
<div class=\"line\">        activeEdgeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fEdgeComponentShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(activeEdgeItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (activeEdgeItem &amp;&amp; !anyEdgeSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sActiveEdgeName);</div>\n\
<div class=\"line\">        activeEdgeItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// render item to display active (selected) faces</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MRenderItem</a>* activeFaceItem = container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#aa96c3d709fe8ea2325d20c2423bb8f23\">find</a>(sActiveFaceName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!activeFaceItem &amp;&amp; anyFaceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        activeFaceItem = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ac74a014f3346d8ddac693b7f034fa228\">MRenderItem::Create</a>(</div>\n\
<div class=\"line\">            sActiveFaceName,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a688a4360e982358b90610f58d4eef49eab87ea4b9433d4e99398728f2cf29b881\">MRenderItem::DecorationItem</a>,</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MGeometry::kTriangles</a>);</div>\n\
<div class=\"line\">        activeFaceItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a8e28487092f00765128c2ffdd43d0fe4\">setDrawMode</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a9a325db332d24e6105fe3b48a94604c3a8d857bf5569760ac7306382a558cb092\">MGeometry::kAll</a>);</div>\n\
<div class=\"line\">        activeFaceItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a6e865e2cf5c9d818b1cbb99af2360c47\">depthPriority</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a2ef0afa87b031ef0f0091e79eb81313a\">MRenderItem::sActiveLineDepthPriority</a>);</div>\n\
<div class=\"line\">        activeFaceItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fFaceComponentShader);</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#a3868473990e1902a2929a48acd2746d8\">add</a>(activeFaceItem);</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (activeFaceItem &amp;&amp; !anyFaceSelected)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        container.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_sub_scene_container.html#ab8634382a216e26abb0b47c55d5eb4b6\">remove</a>(sActiveFaceName);</div>\n\
<div class=\"line\">        activeFaceItem = NULL;</div>\n\
<div class=\"line\">        itemsChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// update the line width on the shader for our wire items if it changed</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> lineWidth = frameContext.<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#a273487acee9e1ffaa4e56d5c25940c2c\">getGlobalLineWidth</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> userWidthChange = !floatApproxEqual(lineWidth, fThickLineWidth);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> doUpdate = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> targetRefinedLineWidth = 50.0f;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (userWidthChange)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fThickLineWidth = lineWidth;</div>\n\
<div class=\"line\">        doUpdate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// First user change will trigger an update requirement</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fUseQueuedLineUpdate)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fQueuedLineWidth = lineWidth;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fQueuedLineWidth &lt; targetRefinedLineWidth)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fQueueUpdate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Increment by 1 until we reach the target width.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// If we haven&#39;t reached it yet then queue another update</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// so we can increment and retest against the target width.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fUseQueuedLineUpdate &amp;&amp; fQueueUpdate)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fQueuedLineWidth &lt; targetRefinedLineWidth)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                lineWidth = fQueuedLineWidth;</div>\n\
<div class=\"line\">                fQueuedLineWidth++;</div>\n\
<div class=\"line\">                fQueueUpdate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                doUpdate = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Reached target. Stop asking for more refinement</span></div>\n\
<div class=\"line\">                fQueueUpdate = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (doUpdate)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!floatApproxEqual(lineWidth, 1.0f))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Only set the shader if the line width changes (or the first time)</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> lineWidthArray[2] = {0};</div>\n\
<div class=\"line\">            lineWidthArray[0] = lineWidth;</div>\n\
<div class=\"line\">            lineWidthArray[1] = lineWidth;</div>\n\
<div class=\"line\">            fThickWireShader-&gt;setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, lineWidthArray);</div>\n\
<div class=\"line\">            fThickSelectShader-&gt;setParameter(<span class=\"stringliteral\">&quot;lineWidth&quot;</span>, lineWidthArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (wireItem)</div>\n\
<div class=\"line\">                wireItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fThickWireShader);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">                selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fThickSelectShader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (wireItem)</div>\n\
<div class=\"line\">                wireItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fWireShader);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">                selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#ad283b157fa4f6c40bceb9d398c53a72a\">setShader</a>(fSelectShader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update geometry if required</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (itemsChanged || updateGeometry)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> bounds = fMesh-&gt;boundingBox();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> wireBuffers;</div>\n\
<div class=\"line\">        wireBuffers.<a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html#acd36fdd49c7d45faff08163ae776c5b2\">addBuffer</a>(<span class=\"stringliteral\">&quot;positions&quot;</span>, fPositionBuffer);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (wireItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*wireItem, wireBuffers, *fWireIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*selectItem, wireBuffers, *fWireIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        setGeometryForRenderItem(*edgeSelectionItem, wireBuffers, *fWireIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> boxBuffers;</div>\n\
<div class=\"line\">        boxBuffers.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html#acd36fdd49c7d45faff08163ae776c5b2\">addBuffer</a>(<span class=\"stringliteral\">&quot;positions&quot;</span>, fBoxPositionBuffer);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (boxItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*boxItem, boxBuffers, *fBoxIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (selectedBoxItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*selectedBoxItem, boxBuffers, *fBoxIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> shadedBuffers;</div>\n\
<div class=\"line\">        shadedBuffers.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html#acd36fdd49c7d45faff08163ae776c5b2\">addBuffer</a>(<span class=\"stringliteral\">&quot;positions&quot;</span>, fPositionBuffer);</div>\n\
<div class=\"line\">        shadedBuffers.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html#acd36fdd49c7d45faff08163ae776c5b2\">addBuffer</a>(<span class=\"stringliteral\">&quot;normals&quot;</span>, fNormalBuffer);</div>\n\
<div class=\"line\">        setGeometryForRenderItem(*shadedItem, shadedBuffers, *fShadedIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        setGeometryForRenderItem(*vertexSelectionItem, wireBuffers, *fVertexIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        setGeometryForRenderItem(*edgeSelectionItem, wireBuffers, *fWireIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        setGeometryForRenderItem(*faceSelectionItem, wireBuffers, *fShadedIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update active component items if required</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (itemsChanged || updateActiveItems)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> bounds = fMesh-&gt;boundingBox();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html\">MVertexBufferArray</a> vertexBuffer;</div>\n\
<div class=\"line\">        vertexBuffer.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_array.html#acd36fdd49c7d45faff08163ae776c5b2\">addBuffer</a>(<span class=\"stringliteral\">&quot;positions&quot;</span>, fPositionBuffer);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeVertexItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*activeVertexItem, vertexBuffer, *fActiveVerticesIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeEdgeItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*activeEdgeItem, vertexBuffer, *fActiveEdgesIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeFaceItem)</div>\n\
<div class=\"line\">            setGeometryForRenderItem(*activeFaceItem, vertexBuffer, *fActiveFacesIndexBuffer, &amp;bounds);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Update render item matrices if necessary</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (itemsChanged || anyMatrixChanged)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (!fIsInstanceMode &amp;&amp; numInstances == 1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// When not dealing with multiple instances, don&#39;t convert the render items into instanced</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// mode.  Set the matrices on them directly.</span></div>\n\
<div class=\"line\">            <a name=\"_a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a>&amp; objToWorld = instanceMatrixArray[0];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (wireItem)</div>\n\
<div class=\"line\">                wireItem-&gt;<a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">                selectItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (boxItem)</div>\n\
<div class=\"line\">                boxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectedBoxItem)</div>\n\
<div class=\"line\">                selectedBoxItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            shadedItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            vertexSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            edgeSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            faceSelectionItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (useDrawInstancingOnEdgeSelectionItem) {</div>\n\
<div class=\"line\">                <span class=\"comment\">// create/update draw instances</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// first instance : no scaling - won&#39;t be selectable see simpleComponentConverter::addIntersection</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform1 = objToWorld;</div>\n\
<div class=\"line\">                transform1[3][3] = 1;  <span class=\"comment\">// make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// second instance : scaled by 2</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform2 = objToWorld * 2;</div>\n\
<div class=\"line\">                transform2[3][3] = 1;  <span class=\"comment\">// make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\">                <span class=\"comment\">// third instance : scaled by 3 - won&#39;t be selectable see simpleComponentConverter::addIntersection</span></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform3 = objToWorld * 3;</div>\n\
<div class=\"line\">                transform3[3][3] = 1;  <span class=\"comment\">// make sure we don&#39;t scale the w</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (<span class=\"keyword\">true</span>) {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html\">MMatrixArray</a> transforms;</div>\n\
<div class=\"line\">                    transforms.<a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html#a9336f30aa141a15a691d8ab9e60108f2\">append</a>(transform1);</div>\n\
<div class=\"line\">                    transforms.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html#a9336f30aa141a15a691d8ab9e60108f2\">append</a>(transform2);</div>\n\
<div class=\"line\">                    transforms.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix_array.html#a9336f30aa141a15a691d8ab9e60108f2\">append</a>(transform3);</div>\n\
<div class=\"line\">                    setInstanceTransformArray(*edgeSelectionItem, transforms);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// another way to set up the instances</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// useful to get the instance ID</span></div>\n\
<div class=\"line\">                    removeAllInstances(*edgeSelectionItem);</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> newInstanceId = addInstanceTransform(*edgeSelectionItem, transform1);</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;newInstanceId %u\\n&quot;</span>, newInstanceId);</div>\n\
<div class=\"line\">                    newInstanceId = addInstanceTransform(*edgeSelectionItem, transform2);</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;newInstanceId %u\\n&quot;</span>, newInstanceId);</div>\n\
<div class=\"line\">                    newInstanceId = addInstanceTransform(*edgeSelectionItem, transform3);</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;newInstanceId %u\\n&quot;</span>, newInstanceId);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeVertexItem)</div>\n\
<div class=\"line\">                activeVertexItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeEdgeItem)</div>\n\
<div class=\"line\">                activeEdgeItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeFaceItem)</div>\n\
<div class=\"line\">                activeFaceItem-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#a32cf944375530a37382f8ff49045ddf6\">setMatrix</a>(&amp;objToWorld);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// If we have DAG instances of this shape then use the MPxSubSceneOverride instance</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// transform API to set up instance copies of the render items.  This will be faster</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// to render than creating render items for each instance, especially for large numbers</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of instances.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// Note: for simplicity, this code is not tracking the actual shaded material binding</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// of the shape.  MPxSubSceneOverride render item instances require that the shader</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// and other properties of the instances all match.  So if we were to bind a shader based</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// on the DAG shape material binding, then we would need one render item per material. We</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// could then group up the instance transforms based matching materials.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Note this has to happen after the geometry and shaders are set, otherwise it will fail.</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (wireItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*wireItem, unselectedInstanceMatrixArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*selectItem, selectedInstanceMatrixArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (boxItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*boxItem, unselectedInstanceMatrixArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectedBoxItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*selectedBoxItem, selectedInstanceMatrixArray);</div>\n\
<div class=\"line\">            setInstanceTransformArray(*edgeSelectionItem, instanceMatrixArray);</div>\n\
<div class=\"line\">            setInstanceTransformArray(*shadedItem, instanceMatrixArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            setInstanceTransformArray(*vertexSelectionItem, instanceMatrixArray);</div>\n\
<div class=\"line\">            setInstanceTransformArray(*edgeSelectionItem, instanceMatrixArray);</div>\n\
<div class=\"line\">            setInstanceTransformArray(*faceSelectionItem, instanceMatrixArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeVertexItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*activeVertexItem, instanceMatrixArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeEdgeItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*activeEdgeItem, instanceMatrixArray);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (activeFaceItem)</div>\n\
<div class=\"line\">                setInstanceTransformArray(*activeFaceItem, instanceMatrixArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Once we change the render items into instance rendering they can&#39;t be changed back without</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// being deleted and re-created.  So if instances are deleted to leave only one remaining,</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// just keep treating them the instance way.</span></div>\n\
<div class=\"line\">            fIsInstanceMode = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (itemsChanged || anyMatrixChanged || updateGeometry)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// On transform or geometry change, force recalculation of shadow maps</span></div>\n\
<div class=\"line\">        <a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a06b742a8850af64d01e3fcbd9450916f\">MRenderer::setLightsAndShadowsDirty</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::rebuildGeometryBuffers()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MHWRender::MRenderer</a>* renderer = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sDrawAPI == <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a634ee767a8e90ff4d56e140459cca31f\">MHWRender::kNone</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (renderer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            sDrawAPI = renderer-&gt;<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae2d5ce57991bca16f525728e8d9d399e\">drawAPI</a>();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Preamble</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>;</div>\n\
<div class=\"line\">    apiMeshGeom* meshGeom = fMesh-&gt;meshGeom();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!meshGeom) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> bounds = fMesh-&gt;boundingBox();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Clear old</span></div>\n\
<div class=\"line\">    deleteGeometryBuffers();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute mesh data size</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numTriangles = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> totalVerts = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            numTriangles += numVerts - 2;</div>\n\
<div class=\"line\">            totalVerts += numVerts;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Acquire vertex buffer resources</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MVertexBufferDescriptor</a> posDesc(<span class=\"stringliteral\">&quot;&quot;</span>, <a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MGeometry::kPosition</a>, <a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6a5686197bafb177bdc82550848416a1ad\">MGeometry::kFloat</a>, 3);</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MVertexBufferDescriptor</a> normalDesc(<span class=\"stringliteral\">&quot;&quot;</span>, <a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4a227e8416235cd3b43077ca91504a463f\">MGeometry::kNormal</a>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6a5686197bafb177bdc82550848416a1ad\">MGeometry::kFloat</a>, 3);</div>\n\
<div class=\"line\">    fPositionBuffer = <span class=\"keyword\">new</span> <a name=\"_a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MVertexBuffer</a>(posDesc);</div>\n\
<div class=\"line\">    fNormalBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MVertexBuffer</a>(normalDesc);</div>\n\
<div class=\"line\">    fBoxPositionBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MVertexBuffer</a>(posDesc);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Generating a compact position buffer will reduce the data size transferred to the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// video card by leveraging the index buffer capabilities. It will also help with</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// component selection since the vertex ID from the hit record will match one to one with</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the position in the vertices array.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* positions = (<span class=\"keywordtype\">float</span>*)fPositionBuffer-&gt;acquire(meshGeom-&gt;vertices.length(), <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* normals = (<span class=\"keywordtype\">float</span>*)fNormalBuffer-&gt;acquire(meshGeom-&gt;vertices.length(), <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>* boxPositions = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* boxIndices = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sUseCustomUserBuffersForBoundingBox)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Just for demo of custom user buffers make box custom</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">float</span> sBoxPositions[8*3];</div>\n\
<div class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sBoxIndices[24];</div>\n\
<div class=\"line\">        boxPositions = sBoxPositions;</div>\n\
<div class=\"line\">        boxIndices = sBoxIndices;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        boxPositions = (<span class=\"keywordtype\">float</span>*)fBoxPositionBuffer-&gt;acquire(8, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        boxIndices = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fBoxIndexBuffer-&gt;acquire(24, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Acquire index buffer resources</span></div>\n\
<div class=\"line\">    fWireIndexBuffer = <span class=\"keyword\">new</span> <a name=\"_a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    fVertexIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    fBoxIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">    fShadedIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* wireBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fWireIndexBuffer-&gt;acquire(2*totalVerts, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* vertexBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fVertexIndexBuffer-&gt;acquire(meshGeom-&gt;vertices.length(), <span class=\"keyword\">true</span>); </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* shadedBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fShadedIndexBuffer-&gt;acquire(3*numTriangles, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Sanity check</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!positions || !boxPositions || !normals || !wireBuffer || !vertexBuffer || !boxIndices || !shadedBuffer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        deleteGeometryBuffers();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>; <span class=\"comment\">// FAIL</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill vertex data for shaded/wireframe</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> pid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> nid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;vertices.length(); i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> position = meshGeom-&gt;vertices[i];</div>\n\
<div class=\"line\">        positions[pid++] = (float)position[0];</div>\n\
<div class=\"line\">        positions[pid++] = (float)position[1];</div>\n\
<div class=\"line\">        positions[pid++] = (float)position[2];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> normal = meshGeom-&gt;normals[i];</div>\n\
<div class=\"line\">        normals[nid++] = (float)normal[0];</div>\n\
<div class=\"line\">        normals[nid++] = (float)normal[1];</div>\n\
<div class=\"line\">        normals[nid++] = (float)normal[2];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    fPositionBuffer-&gt;commit(positions); positions = NULL;</div>\n\
<div class=\"line\">    fNormalBuffer-&gt;commit(normals); normals = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill vertex and index data for bounding box</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> bbmin = bounds.<a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afb3213b98f3a6b4bda9759511e9b79a1\">min</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> bbmax = bounds.<a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a1dfdbea9d5560e4aa09d34bdbd82480c\">max</a>();</div>\n\
<div class=\"line\">    boxPositions[0]  = (float)bbmin.<a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[1]  = (<span class=\"keywordtype\">float</span>)bbmin.<a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[2]  = (float)bbmin.<a name=\"a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[3]  = (<span class=\"keywordtype\">float</span>)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[4]  = (float)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[5]  = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[6]  = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[7]  = (<span class=\"keywordtype\">float</span>)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[8]  = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[9]  = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[10] = (float)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[11] = (<span class=\"keywordtype\">float</span>)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[12] = (float)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[13] = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[14] = (float)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[15] = (<span class=\"keywordtype\">float</span>)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[16] = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[17] = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[18] = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[19] = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[20] = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxPositions[21] = (<span class=\"keywordtype\">float</span>)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>; boxPositions[22] = (float)bbmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>; boxPositions[23] = (<span class=\"keywordtype\">float</span>)bbmin.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">    boxIndices[0]  = 0; boxIndices[1]  = 1;</div>\n\
<div class=\"line\">    boxIndices[2]  = 1; boxIndices[3]  = 2;</div>\n\
<div class=\"line\">    boxIndices[4]  = 2; boxIndices[5]  = 3;</div>\n\
<div class=\"line\">    boxIndices[6]  = 3; boxIndices[7]  = 0;</div>\n\
<div class=\"line\">    boxIndices[8]  = 4; boxIndices[9]  = 5;</div>\n\
<div class=\"line\">    boxIndices[10] = 5; boxIndices[11] = 6;</div>\n\
<div class=\"line\">    boxIndices[12] = 6; boxIndices[13] = 7;</div>\n\
<div class=\"line\">    boxIndices[14] = 7; boxIndices[15] = 4;</div>\n\
<div class=\"line\">    boxIndices[16] = 0; boxIndices[17] = 4;</div>\n\
<div class=\"line\">    boxIndices[18] = 1; boxIndices[19] = 5;</div>\n\
<div class=\"line\">    boxIndices[20] = 2; boxIndices[21] = 6;</div>\n\
<div class=\"line\">    boxIndices[22] = 3; boxIndices[23] = 7;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sUseCustomUserBuffersForBoundingBox)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (sDrawAPI == <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a72361be679c1aca1c1be5f9b500a3315\">MHWRender::kOpenGL</a>)</div>\n\
<div class=\"line\">        {       </div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <a name=\"_a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a>* gGLFT = NULL;</div>\n\
<div class=\"line\">            <a name=\"_a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a>* pRenderer = MHardwareRenderer::theRenderer();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!gGLFT &amp;&amp; pRenderer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                gGLFT = pRenderer-&gt;<a name=\"a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">glFunctionTable</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (gGLFT)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                gGLFT-&gt;<a name=\"a116\"></a>glGenBuffersARB(1, &amp;fBoxPositionBufferId);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fBoxPositionBufferId != 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a117\"></a>glBindBufferARB(MGL_ARRAY_BUFFER_ARB, fBoxPositionBufferId);</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a118\"></a>glBufferDataARB(MGL_ARRAY_BUFFER_ARB, 8*3*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">float</span>), boxPositions, MGL_STATIC_DRAW_ARB);</div>\n\
<div class=\"line\">                    gGLFT-&gt;glBindBufferARB(MGL_ARRAY_BUFFER_ARB, 0);</div>\n\
<div class=\"line\">                    fBoxPositionBuffer-&gt;resourceHandle(&amp;fBoxPositionBufferId, 8*3);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                gGLFT-&gt;glGenBuffersARB(1, &amp;fBoxIndexBufferId);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fBoxIndexBufferId != 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;glBindBufferARB(MGL_ELEMENT_ARRAY_BUFFER_ARB, fBoxIndexBufferId);</div>\n\
<div class=\"line\">                    gGLFT-&gt;glBufferDataARB(MGL_ELEMENT_ARRAY_BUFFER_ARB, 24*<span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>), boxIndices, MGL_STATIC_DRAW_ARB);</div>\n\
<div class=\"line\">                    gGLFT-&gt;glBindBufferARB(MGL_ELEMENT_ARRAY_BUFFER_ARB, 0);</div>\n\
<div class=\"line\">                    fBoxIndexBuffer-&gt;resourceHandle(&amp;fBoxIndexBufferId, 24);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WINDOWS</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (sDrawAPI == <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a90bc0a1678af7ac4d1e62e2e954be4e5\">MHWRender::kDirectX11</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (renderer)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                ID3D11Device* pDevice = (ID3D11Device*)renderer-&gt;<a name=\"a119\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a637ec8cc3cc0e631f1d134f6891f89f0\">GPUDeviceHandle</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Fill in a buffer description.</span></div>\n\
<div class=\"line\">                D3D11_BUFFER_DESC bufferDesc;</div>\n\
<div class=\"line\">                bufferDesc.Usage            = D3D11_USAGE_DEFAULT;</div>\n\
<div class=\"line\">                bufferDesc.ByteWidth        = <span class=\"keyword\">sizeof</span>(float) * 3 * 8;</div>\n\
<div class=\"line\">                bufferDesc.BindFlags        = D3D11_BIND_VERTEX_BUFFER;</div>\n\
<div class=\"line\">                bufferDesc.CPUAccessFlags   = 0;</div>\n\
<div class=\"line\">                bufferDesc.MiscFlags        = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Fill in the sub-resource data.</span></div>\n\
<div class=\"line\">                D3D11_SUBRESOURCE_DATA InitData;</div>\n\
<div class=\"line\">                InitData.pSysMem = boxPositions;</div>\n\
<div class=\"line\">                InitData.SysMemPitch = 0;</div>\n\
<div class=\"line\">                InitData.SysMemSlicePitch = 0;</div>\n\
<div class=\"line\">                </div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (pDevice)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    pDevice-&gt;CreateBuffer( &amp;bufferDesc, &amp;InitData, &amp;fBoxPositionBufferDX );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fBoxPositionBufferDX)</div>\n\
<div class=\"line\">                        fBoxPositionBuffer-&gt;resourceHandle((<span class=\"keywordtype\">void</span>*)fBoxPositionBufferDX, 8*3);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Index buffer</span></div>\n\
<div class=\"line\">                bufferDesc.ByteWidth = <span class=\"keyword\">sizeof</span>(<span class=\"keywordtype\">unsigned</span> int) * 24;</div>\n\
<div class=\"line\">                bufferDesc.BindFlags = D3D11_BIND_INDEX_BUFFER;</div>\n\
<div class=\"line\">                InitData.pSysMem = boxIndices;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (pDevice)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    pDevice-&gt;CreateBuffer( &amp;bufferDesc, &amp;InitData, &amp;fBoxIndexBufferDX);</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fBoxIndexBufferDX)</div>\n\
<div class=\"line\">                        fBoxIndexBuffer-&gt;resourceHandle((<span class=\"keywordtype\">void</span>*)fBoxIndexBufferDX, 24);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fBoxPositionBuffer-&gt;commit(boxPositions);</div>\n\
<div class=\"line\">        fBoxIndexBuffer-&gt;commit(boxIndices);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    boxPositions = NULL;</div>\n\
<div class=\"line\">    boxIndices = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill index data for wireframe</span></div>\n\
<div class=\"line\">    vid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> first = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// ignore degenerate faces</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            first = vid;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                wireBuffer[idx++] = meshGeom-&gt;face_connects[vid++];</div>\n\
<div class=\"line\">                wireBuffer[idx++] = meshGeom-&gt;face_connects[vid];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            wireBuffer[idx++] = meshGeom-&gt;face_connects[vid++];</div>\n\
<div class=\"line\">            wireBuffer[idx++] = meshGeom-&gt;face_connects[first];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            vid += numVerts;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    fWireIndexBuffer-&gt;commit(wireBuffer); wireBuffer = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill index data for vertices</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;vertices.length(); ++i)</div>\n\
<div class=\"line\">        vertexBuffer[i] = i;</div>\n\
<div class=\"line\">    fVertexIndexBuffer-&gt;commit(vertexBuffer); vertexBuffer = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fill index data for shaded</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> base = 0;</div>\n\
<div class=\"line\">    idx = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> faceIdx=0; faceIdx&lt;meshGeom-&gt;faceCount; faceIdx++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Ignore degenerate faces</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[faceIdx];</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; v++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                shadedBuffer[idx++] = meshGeom-&gt;face_connects[base];</div>\n\
<div class=\"line\">                shadedBuffer[idx++] = meshGeom-&gt;face_connects[base+v];</div>\n\
<div class=\"line\">                shadedBuffer[idx++] = meshGeom-&gt;face_connects[base+v+1];</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            base += numVerts;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    fShadedIndexBuffer-&gt;commit(shadedBuffer); shadedBuffer = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::rebuildActiveComponentIndexBuffers()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Preamble</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">using namespace </span><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>;</div>\n\
<div class=\"line\">    apiMeshGeom* meshGeom = fMesh-&gt;meshGeom();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!meshGeom) <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Clear old</span></div>\n\
<div class=\"line\">    deleteActiveComponentIndexBuffers();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Acquire and fill index buffer for active vertices</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numActiveVertices = fActiveVerticesSet.size();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numActiveVertices &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fActiveVerticesIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* activeVerticesBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fActiveVerticesIndexBuffer-&gt;acquire(numActiveVertices, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeVerticesBuffer) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator it = fActiveVerticesSet.begin();</div>\n\
<div class=\"line\">            std::set&lt;int&gt;::const_iterator itEnd = fActiveVerticesSet.end();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span>(; it != itEnd; ++it)</div>\n\
<div class=\"line\">                activeVerticesBuffer[idx++] = *it;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fActiveVerticesIndexBuffer-&gt;commit(activeVerticesBuffer);</div>\n\
<div class=\"line\">            activeVerticesBuffer = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Acquire and fill index buffer for active edges</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numActiveEdges = fActiveEdgesSet.size();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numActiveEdges &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fActiveEdgesIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* activeEdgesBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fActiveEdgesIndexBuffer-&gt;acquire(2*numActiveEdges, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeEdgesBuffer) {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> eid = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> first = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; ++i)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    first = vid;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=0; v&lt;numVerts-1; ++v)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (fActiveEdgesSet.count(eid) &gt; 0)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            activeEdgesBuffer[idx++] = meshGeom-&gt;face_connects[vid];</div>\n\
<div class=\"line\">                            activeEdgesBuffer[idx++] = meshGeom-&gt;face_connects[vid + 1];</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        ++vid;</div>\n\
<div class=\"line\">                        ++eid;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fActiveEdgesSet.count(eid) &gt; 0)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        activeEdgesBuffer[idx++] = meshGeom-&gt;face_connects[vid];</div>\n\
<div class=\"line\">                        activeEdgesBuffer[idx++] = meshGeom-&gt;face_connects[first];</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    ++vid;</div>\n\
<div class=\"line\">                    ++eid;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                    vid += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fActiveEdgesIndexBuffer-&gt;commit(activeEdgesBuffer);</div>\n\
<div class=\"line\">            activeEdgesBuffer = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Acquire and fill index buffer for active faces</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numActiveFaces = fActiveFacesSet.size();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numActiveFaces &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numActiveFacesTriangles = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (fActiveFacesSet.count(i) &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                    numActiveFacesTriangles += numVerts - 2;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        fActiveFacesIndexBuffer = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MIndexBuffer</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MGeometry::kUnsignedInt32</a>);</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* activeFacesBuffer = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>*)fActiveFacesIndexBuffer-&gt;acquire(3*numActiveFacesTriangles, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (activeFacesBuffer)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> idx = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;meshGeom-&gt;faceCount; ++i)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Ignore degenerate faces</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">int</span> numVerts = meshGeom-&gt;face_counts[i];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (numVerts &gt; 2)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (fActiveFacesSet.count(i) &gt; 0)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> v=1; v&lt;numVerts-1; ++v)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            activeFacesBuffer[idx++] = meshGeom-&gt;face_connects[vid];</div>\n\
<div class=\"line\">                            activeFacesBuffer[idx++] = meshGeom-&gt;face_connects[vid+v];</div>\n\
<div class=\"line\">                            activeFacesBuffer[idx++] = meshGeom-&gt;face_connects[vid+v+1];</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    vid += numVerts;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fActiveFacesIndexBuffer-&gt;commit(activeFacesBuffer);</div>\n\
<div class=\"line\">            activeFacesBuffer = NULL;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::deleteBuffers()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    deleteGeometryBuffers();</div>\n\
<div class=\"line\">    deleteActiveComponentIndexBuffers();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::deleteGeometryBuffers()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fPositionBuffer; fPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fNormalBuffer; fNormalBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fBoxPositionBuffer; fBoxPositionBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fWireIndexBuffer; fWireIndexBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fBoxIndexBuffer; fBoxIndexBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fShadedIndexBuffer; fShadedIndexBuffer = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Delete client buffers</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (sUseCustomUserBuffersForBoundingBox)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (sDrawAPI == <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a72361be679c1aca1c1be5f9b500a3315\">MHWRender::kOpenGL</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a>* gGLFT = NULL;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a>* pRenderer = MHardwareRenderer::theRenderer();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pRenderer &amp;&amp; !gGLFT)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                gGLFT = pRenderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">glFunctionTable</a>();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (gGLFT)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fBoxPositionBufferId != 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a120\"></a>glDeleteBuffersARB(1, &amp;fBoxPositionBufferId);</div>\n\
<div class=\"line\">                    fBoxPositionBufferId = 0;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (fBoxIndexBufferId != 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;glDeleteBuffersARB(1, &amp;fBoxIndexBufferId);</div>\n\
<div class=\"line\">                    fBoxIndexBufferId = 0;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _WINDOWS</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (sDrawAPI == <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a90bc0a1678af7ac4d1e62e2e954be4e5\">MHWRender::kDirectX11</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (NULL != fBoxPositionBufferDX)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fBoxPositionBufferDX-&gt;Release();</div>\n\
<div class=\"line\">                fBoxPositionBufferDX = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (NULL != fBoxIndexBufferDX)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                fBoxIndexBufferDX-&gt;Release();</div>\n\
<div class=\"line\">                fBoxIndexBufferDX = NULL;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::deleteActiveComponentIndexBuffers()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fActiveVerticesIndexBuffer; fActiveVerticesIndexBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fActiveEdgesIndexBuffer; fActiveEdgesIndexBuffer = NULL;</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> fActiveFacesIndexBuffer; fActiveFacesIndexBuffer = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">    This is method is called during the pre-filtering phase of the viewport 2.0 selection</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and is used to setup the selection context of the given DAG object.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    We want the whole shape to be selectable, so we set the selection level to kObject so that the shape</span></div>\n\
<div class=\"line\"><span class=\"comment\">    will be processed by the selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">    In case we are currently in component selection mode (vertex, edge or face),</span></div>\n\
<div class=\"line\"><span class=\"comment\">    since we have created render items that can be use in the selection phase (kSelectionOnly draw mode)</span></div>\n\
<div class=\"line\"><span class=\"comment\">    and we also registered component converters to handle this render items,</span></div>\n\
<div class=\"line\"><span class=\"comment\">    we can set the selection level to kComponent so that the shape will also be processed by the selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::updateSelectionGranularity(</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">    <a name=\"_a121\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html\">MHWRender::MSelectionContext</a>&amp; selectionContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad9c34c5373567566950642c16a7c4bca\">MHWRender::DisplayStatus</a> displayStatus = <a name=\"a122\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#af2f27b52377c28d25d76853a7a75785c\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(displayStatus == <a name=\"a123\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">MHWRender::kHilite</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> globalComponentMask = <a name=\"a124\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a2166afd9d082dd5952bcd361f0a3abb5\">MGlobal::selectionMode</a>() == <a name=\"a125\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a5b78971d76a21fe10e157bbb39983cfcad27a906a7906e3bca506b9cf5dc98d9f\">MGlobal::kSelectComponentMode</a> ? <a name=\"a126\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a1da385dcfc2718a595d4d008c56e7dc6\">MGlobal::componentSelectionMask</a>() : <a name=\"_a127\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html\">MGlobal</a>::objectSelectionMask();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> supportedComponents(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da705847d327f5166f435cb6ed017ead15\">MSelectionMask::kSelectMeshVerts</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da865581859e2396d43e835facc4807ebc\">MSelectionMask::kSelectMeshEdges</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da22bda3732b520fcd2aa70d5d422f10fa\">MSelectionMask::kSelectMeshFaces</a>);</div>\n\
<div class=\"line\">        supportedComponents.addMask(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da973e7813e5ba338103dc014a3037bc7a\">MSelectionMask::kSelectPointsForGravity</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(globalComponentMask.<a name=\"a128\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#ab0107f35df7fbf5b2b293ae20cdd2670\">intersects</a>(supportedComponents))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            selectionContext.<a name=\"a129\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#ab1ead3c2bb71ebaaaa7b94b8a1dcaa3b\">setSelectionLevel</a>(<a name=\"a130\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\">MHWRender::MSelectionContext::kComponent</a>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (pointSnappingActive())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        selectionContext.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#ab1ead3c2bb71ebaaaa7b94b8a1dcaa3b\">setSelectionLevel</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#a9bf800a895c6bfc0ef3fce84fb30625da02fee4c0e0e6f1b7ab7a678d61627461\">MHWRender::MSelectionContext::kComponent</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshSubSceneOverride::hasUIDrawables()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshSubSceneOverride::areUIDrawablesDirty()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// For performance, the cached UI drawables need not be re-newed.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::addUIDrawables(</div>\n\
<div class=\"line\">    <a name=\"_a131\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html\">MHWRender::MUIDrawManager</a>&amp; drawManager,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html\">MHWRender::MFrameContext</a>&amp; frameContext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw a text &quot;subSceneUIDraw&quot;</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> pos( 0.0, 0.0, 0.0 ); <span class=\"comment\">// Position of the text</span></div>\n\
<div class=\"line\">    <a name=\"_a132\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> textColor( 0.1f, 0.8f, 0.8f, 1.0f ); <span class=\"comment\">// Text color</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a133\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#aa3e12e98018e4dfda0e166d9ec8094b0\">beginDrawable</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    drawManager.<a name=\"a134\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a9baede3e37abe9551e50a8c6be65ec4d\">setColor</a>( textColor );</div>\n\
<div class=\"line\">    drawManager.<a name=\"a135\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#adfd0cfdd2cc781dba3987f64cb638a67\">setFontSize</a>( <a name=\"a136\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a88cff078229df1c0803a690e4826b5f1a7218bb69173cb216cb619effff1055ea\">MHWRender::MUIDrawManager::kSmallFontSize</a> );</div>\n\
<div class=\"line\">    drawManager.<a name=\"a137\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a334e4280e5ddd4653c69f9703b5dd3b4\">text</a>( pos,  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;subSceneUIDraw&quot;</span>), <a name=\"a138\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#aa56f1a82069b5feeadbb4591cb3e474fae006401ce2987367501dd62b12f1396d\">MHWRender::MUIDrawManager::kCenter</a> );</div>\n\
<div class=\"line\">    drawManager.<a name=\"a139\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#a78c343c25a05be7e46dd4b7ebab82ff6\">endDrawable</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">   Register our component converters to the draw registry</span></div>\n\
<div class=\"line\"><span class=\"comment\">   This should be done only once, when the plugin is initialized</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshSubSceneOverride::registerComponentConverters()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a140\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshSubSceneOverride::sVertexSelectionName, simpleComponentConverter::creatorVertexSelection);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">        status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshSubSceneOverride::sEdgeSelectionName, simpleComponentConverter::creatorEdgeSelection);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#ac76651be69e4645ee8e741049dd183ed\">MHWRender::MDrawRegistry::registerComponentConverter</a>(apiMeshSubSceneOverride::sFaceSelectionName, simpleComponentConverter::creatorFaceSelection);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*</span></div>\n\
<div class=\"line\"><span class=\"comment\">   Deregister our component converters from the draw registry</span></div>\n\
<div class=\"line\"><span class=\"comment\">   This should be done only once, when the plugin is uninitialized</span></div>\n\
<div class=\"line\"><span class=\"comment\">*/</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> apiMeshSubSceneOverride::deregisterComponentConverters()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a141\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshSubSceneOverride::sVertexSelectionName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">        status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshSubSceneOverride::sEdgeSelectionName);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(status) {</div>\n\
<div class=\"line\">            status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a56780f99f287625aef1d60eb5c6a0e03\">MHWRender::MDrawRegistry::deregisterComponentConverter</a>(apiMeshSubSceneOverride::sFaceSelectionName);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*static*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshSubSceneOverride::shadedItemLinkLost(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_user_data.html\">MUserData</a>* userData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    ShadedItemUserData* data = <span class=\"keyword\">dynamic_cast&lt;</span>ShadedItemUserData*<span class=\"keyword\">&gt;</span>(userData);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (data &amp;&amp; data-&gt;fOverride)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (data-&gt;fOverride-&gt;fMesh)</div>\n\
<div class=\"line\">            data-&gt;fOverride-&gt;fMesh-&gt;setMaterialDirty(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        data-&gt;fOverride-&gt;untrackLinkLostData(data);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keyword\">delete</span> userData;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// helper function</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> useSelectHighlight(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a>&amp; selectedList, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a142\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad9c34c5373567566950642c16a7c4bca\">MHWRender::DisplayStatus</a> displayStatus = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry_utilities.html#af2f27b52377c28d25d76853a7a75785c\">MHWRender::MGeometryUtilities::displayStatus</a>(path);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((displayStatus &amp; (<a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">MHWRender::kHilite</a> | <a name=\"a143\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad9c34c5373567566950642c16a7c4bcaa1d8e358d420ca7c9f6888faf51f4ec75\">MHWRender::kActiveComponent</a>)) != 0)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> pathCopy = path;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">do</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (selectedList.<a name=\"a144\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a8ccfcfbdcebf501f9667ee617419892c\">hasItem</a>(pathCopy))</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        status = pathCopy.<a name=\"a145\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ac71eca2b78b8cfc088adc9af6f851dfd\">pop</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span> (status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">bool</span> floatApproxEqual(<span class=\"keywordtype\">float</span> left, <span class=\"keywordtype\">float</span> right)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> fabs(left - right) &lt; 0.0001f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";