var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>meshReorder/meshRemapCmd.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'mesh_reorder_2mesh_remap_cmd_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>meshReorder/meshRemapCmd.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">meshReorder/meshRemapCmd.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 1995,2006,2008 Autodesk, Inc. All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;meshMapUtils.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;meshRemapCmd.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArgList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPathArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItSelectionList.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItMeshPolygon.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObjectArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStatus.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// CONSTRUCTOR DEFINITION:</span></div>\n\
<div class=\"line\">meshRemapCommand::meshRemapCommand()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fColorArrays = NULL;</div>\n\
<div class=\"line\">    fRepArray = NULL;</div>\n\
<div class=\"line\">    fClampedArray = NULL;</div>\n\
<div class=\"line\">    fUArrays = NULL;</div>\n\
<div class=\"line\">    fVArrays = NULL;</div>\n\
<div class=\"line\">    fUVCountsArrays = NULL;</div>\n\
<div class=\"line\">    fUVIdsArrays = NULL;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESTRUCTOR DEFINITION:</span></div>\n\
<div class=\"line\">meshRemapCommand::~meshRemapCommand()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    reset();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// METHOD FOR CREATING AN INSTANCE OF THIS COMMAND:</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* meshRemapCommand::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> meshRemapCommand;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> meshRemapCommand::parseArgs(<span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> list;</div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> err;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( args.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#a99dd6a54b909ede1d11702fe58977e2a\">length</a>() != 6 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot;6 vertices must be specified&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> argIdx = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; 2; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> selectedComponent(3);</div>\n\
<div class=\"line\">        <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html\">MDagPathArray</a> selectedPath;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        selectedPath.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path_array.html#a8c66dfa06f3736b2a214c5aed58bd216\">setLength</a>(3);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; 3; j++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> arg;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( ( stat = args.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html#adc169cdc872457a2664c3d66c29cf504\">get</a>( argIdx, arg )) != <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                displayError( <span class=\"stringliteral\">&quot;Can&#39;t parse arg&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            list.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#ad5522f028dde0080b753279426415a4a\">clear</a>();   </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (! list.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a>( arg ) )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                err = arg + <span class=\"stringliteral\">&quot;: no such component&quot;</span>;</div>\n\
<div class=\"line\">                displayError(err);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>; <span class=\"comment\">// no such component</span></div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_selection_list.html\">MItSelectionList</a> selectionIt (list, <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a02fee4c0e0e6f1b7ab7a678d61627461\">MFn::kComponent</a>);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (selectionIt.isDone ())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                err = arg + <span class=\"stringliteral\">&quot;: not a component&quot;</span>;</div>\n\
<div class=\"line\">                displayError (err);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( selectionIt.getDagPath (selectedPath[j], selectedComponent[j]) != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                displayError( <span class=\"stringliteral\">&quot;Can&#39;t get path for&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!selectedPath[j].node().hasFn(<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>) &amp;&amp; !(selectedPath[j].node().hasFn(<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7adafa274206df602835f0f22ae887e126\">MFn::kTransform</a>) &amp;&amp; selectedPath[j].hasFn(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>)))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                err = arg + <span class=\"stringliteral\">&quot;: Invalid type!  Only a mesh or its transform can be specified!&quot;</span>;</div>\n\
<div class=\"line\">                displayError (err);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            argIdx++;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( i == 0 )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( ( stat = meshMapUtils::validateFaceSelection( selectedPath, selectedComponent, &amp;fFaceIdxSrc, &amp;fFaceVtxSrc ) ) != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                displayError(<span class=\"stringliteral\">&quot;Selected vertices don&#39;t define a unique face on source mesh&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fDagPathSrc = selectedPath[0];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( ( stat = meshMapUtils::validateFaceSelection( selectedPath, selectedComponent, &amp;fFaceIdxDst, &amp;fFaceVtxDst ) ) != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                displayError(<span class=\"stringliteral\">&quot;Selected vertices don&#39;t define a unique face on target mesh&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            fDagPathDst = selectedPath[0];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( fDagPathSrc == fDagPathDst )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot;Cannot use one mesh for both source and target&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// FIRST INVOKED WHEN COMMAND IS CALLED, PARSING THE COMMAND ARGUMENTS, INITIALIZING DEFAULT PARAMETERS, THEN CALLING redoIt():</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> meshRemapCommand::doIt(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_arg_list.html\">MArgList</a>&amp; args)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>  stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ( stat = parseArgs( args ) ) != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError (<span class=\"stringliteral\">&quot;Error parsing arguments&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> redoIt();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> meshRemapCommand::redoIt()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>  stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    fDagPathDst.extendToShape();</div>\n\
<div class=\"line\">    <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> theMeshDst( fDagPathDst, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; MFnMesh creation&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//  The destination mesh cannot have history or else this won&#39;t work.</span></div>\n\
<div class=\"line\">    <a name=\"_a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   historyPlug = theMeshDst.findPlug(<span class=\"stringliteral\">&quot;inMesh&quot;</span>, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (historyPlug.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a2914a42ceb556760af045852f1f57a08\">isDestination</a>()) {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot;The destination mesh has history. Its geometry cannot be modified.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af8c5f748892ec74b32719c8fba7767e1\">MS::kInvalidParameter</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fDagPathSrc.extendToShape();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> theMeshSrc( fDagPathSrc, &amp;stat );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; MFnMesh creation&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>    origVertices;</div>\n\
<div class=\"line\">    stat = theMeshSrc.getPoints (origVertices, <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; MFnMesh getPoints&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Traverse the source</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize the traversal flags and CV mappings for this shape </span></div>\n\
<div class=\"line\">    <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           faceTraversal( theMeshSrc.numPolygons(), false );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           cvMapping( theMeshSrc.numVertices(), -1 );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           cvMappingInverse( theMeshSrc.numVertices(), -1 ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Starting with the user selected face, recursively rebuild the entire mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           newPolygonCounts;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           newPolygonConnects;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>    newVertices;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = meshMapUtils::traverseFace( fDagPathSrc, fFaceIdxSrc, fFaceVtxSrc[0], fFaceVtxSrc[1], faceTraversal,</div>\n\
<div class=\"line\">                    cvMapping, cvMappingInverse, </div>\n\
<div class=\"line\">                    newPolygonCounts, newPolygonConnects, </div>\n\
<div class=\"line\">                    origVertices, newVertices );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; could not process all the mesh faces.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// reuse newPolygonCounts and newPolygonConnects for the src mesh.</span></div>\n\
<div class=\"line\">    newPolygonCounts.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">    newPolygonConnects.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_polygon.html\">MItMeshPolygon</a> polyIter(fDagPathSrc.node());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>(!polyIter.isDone()) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        newPolygonCounts.append(polyIter.polygonVertexCount());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(i = 0; i &lt; (int) polyIter.polygonVertexCount(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            newPolygonConnects.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a11568087ac2ca16f4106cee62f65afd7\">append</a>(polyIter.vertexIndex(i));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        polyIter.next();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Now, traverse the destination</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>    origVerticesDst;</div>\n\
<div class=\"line\">    stat = theMeshDst.getPoints (origVerticesDst, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; MFnMesh getPoints&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize the traversal flags and CV mappings for this shape </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           faceTraversalDst( theMeshDst.numPolygons(), false );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           cvMappingDst( theMeshDst.numVertices(), -1 );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           cvMappingInverseDst( theMeshDst.numVertices(), -1 ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Starting with the user selected face, recursively rebuild the entire mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           newPolygonCountsDst;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>           newPolygonConnectsDst;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html\">MFloatPointArray</a>    newVerticesDst;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = meshMapUtils::traverseFace( fDagPathDst, fFaceIdxDst, fFaceVtxDst[0], fFaceVtxDst[1], faceTraversalDst,</div>\n\
<div class=\"line\">                    cvMappingDst, cvMappingInverseDst, </div>\n\
<div class=\"line\">                    newPolygonCountsDst, newPolygonConnectsDst, </div>\n\
<div class=\"line\">                    origVerticesDst, newVerticesDst );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; could not process all the mesh faces.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Use the generated maps to build a new CV list that will remap</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the destination to the source topology</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span>( i = 0; i &lt; theMeshDst.numVertices(); i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        newVerticesDst[cvMappingInverse[i]] = origVerticesDst[cvMappingInverseDst[i]];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Prepare for undo. Must collect the mesh information here before it is modified by createInPlace() call.</span></div>\n\
<div class=\"line\">    fVertices.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a8f5d4395b360d005e75b33c67c0894a6\">copy</a>(origVerticesDst);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_polygon.html\">MItMeshPolygon</a> polyIterDst(fDagPathDst.node());</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>(!polyIterDst.isDone()) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fPolygonCounts.append(polyIterDst.polygonVertexCount());</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(i = 0; i &lt; (int)polyIterDst.polygonVertexCount(); i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fPolygonConnects.append(polyIterDst.vertexIndex(i));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        polyIterDst.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_mesh_polygon.html#a73616f002814b8abe6d921db72d7a496\">next</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Store Colors for undo</span></div>\n\
<div class=\"line\">    fColorSetNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">    theMeshDst.getColorSetNames(fColorSetNames);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numColorSets = fColorSetNames.length();</div>\n\
<div class=\"line\">    fClampedArray = <span class=\"keyword\">new</span> <span class=\"keywordtype\">bool</span>[numColorSets];</div>\n\
<div class=\"line\">    fRepArray = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#a80dc8673cdbdbb813c71dfa32e0643f2\">MFnMesh::MColorRepresentation</a>[numColorSets];</div>\n\
<div class=\"line\">    fColorArrays = <span class=\"keyword\">new</span> <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color_array.html\">MColorArray</a>[numColorSets];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; numColorSets; i++ ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        fClampedArray[i] = theMeshDst.isColorClamped(fColorSetNames[i]);</div>\n\
<div class=\"line\">        fRepArray[i] = theMeshDst.getColorRepresentation(fColorSetNames[i]);</div>\n\
<div class=\"line\">        theMeshDst.getVertexColors(fColorArrays[i], &amp;(fColorSetNames[i]));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Store UVs for undo</span></div>\n\
<div class=\"line\">    fUVSetNames.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color_array.html#ad5522f028dde0080b753279426415a4a\">clear</a>();</div>\n\
<div class=\"line\">    theMeshDst.getUVSetNames(fUVSetNames);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numUVSets = fUVSetNames.length();</div>\n\
<div class=\"line\">    fUArrays = <span class=\"keyword\">new</span> <a name=\"_a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>[numUVSets];</div>\n\
<div class=\"line\">    fVArrays = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a>[numUVSets];</div>\n\
<div class=\"line\">    fUVIdsArrays = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>[numUVSets];</div>\n\
<div class=\"line\">    fUVCountsArrays = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>[numUVSets];</div>\n\
<div class=\"line\">    fUVIdsArrays = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a>[numUVSets];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; numUVSets; i++ ) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        theMeshDst.getAssignedUVs(fUVCountsArrays[i], fUVIdsArrays[i], &amp;(fUVSetNames[i]));</div>\n\
<div class=\"line\">        theMeshDst.getUVs(fUArrays[i], fVArrays[i], &amp;(fUVSetNames[i]));</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  Create the mesh. The old approach of using copyInPlace is doing referenced counting of the mesh, which is</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  not what we want and has caused strange problem, i.e. reorder not working on a remapped mesh.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    stat = theMeshDst.createInPlace( newVerticesDst.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>(), newPolygonCounts.length(), newVerticesDst, newPolygonCounts, newPolygonConnects );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( stat != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a> )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        displayError(<span class=\"stringliteral\">&quot; mesh copy failed.&quot;</span>);</div>\n\
<div class=\"line\">        reset();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Copy Colors from src to dst mesh</span></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> colorSetNamesSrc;</div>\n\
<div class=\"line\">    theMeshSrc.getColorSetNames(colorSetNamesSrc);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numColorSetsSrc = colorSetNamesSrc.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numColorSetsSrc; i++) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> mapping(fVertices.length());;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (i == 0) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> j = 0; j &lt; fVertices.length(); j++) </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                mapping[j] = j;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color_array.html\">MColorArray</a> colorArraySrc;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span>        clampedSrc;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#a80dc8673cdbdbb813c71dfa32e0643f2\">MFnMesh::MColorRepresentation</a> repSrc;</div>\n\
<div class=\"line\">        clampedSrc = theMeshSrc.isColorClamped(colorSetNamesSrc[i]);</div>\n\
<div class=\"line\">        repSrc = theMeshSrc.getColorRepresentation(colorSetNamesSrc[i]);</div>\n\
<div class=\"line\">        theMeshSrc.getVertexColors(colorArraySrc, &amp;(colorSetNamesSrc[i]));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        theMeshDst.createColorSet(colorSetNamesSrc[i], NULL, clampedSrc, repSrc);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (colorArraySrc.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0 &amp;&amp; colorArraySrc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == fVertices.length())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMeshDst.setVertexColors(colorArraySrc, mapping, NULL, repSrc);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Copy UVs from src to dst mesh</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> uvSetNamesSrc;</div>\n\
<div class=\"line\">    theMeshSrc.getUVSetNames(uvSetNamesSrc);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numUVSetsSrc = uvSetNamesSrc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> defaultUVSetName;</div>\n\
<div class=\"line\">    theMeshDst.getCurrentUVSetName(defaultUVSetName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numUVSetsSrc; i++) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> uArraySrc;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html\">MFloatArray</a> vArraySrc;</div>\n\
<div class=\"line\">        theMeshSrc.getUVs(uArraySrc, vArraySrc, &amp;(uvSetNamesSrc[i]));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (uvSetNamesSrc[i] != defaultUVSetName) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMeshDst.createUVSet(uvSetNamesSrc[i]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (uArraySrc.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() &gt; 0 &amp;&amp; uArraySrc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == vArraySrc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMeshDst.setUVs(uArraySrc, vArraySrc, &amp;(uvSetNamesSrc[i]));</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> uvCounts;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> uvIds;</div>\n\
<div class=\"line\">            theMeshSrc.getAssignedUVs(uvCounts, uvIds, &amp;(uvSetNamesSrc[i]));</div>\n\
<div class=\"line\">            theMeshDst.assignUVs(uvCounts, uvIds, &amp;(uvSetNamesSrc[i]));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> meshRemapCommand::undoIt()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>  stat = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> theMesh( fDagPathDst );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    stat = theMesh.createInPlace( fVertices.length(), fPolygonCounts.length(), fVertices, fPolygonCounts, fPolygonConnects );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore Colors from cached data for undo</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numColorSets = fColorSetNames.length();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numColorSets; i++) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html\">MIntArray</a> mapping(fVertices.length());;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (i == 0) </div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> j = 0; j &lt; fVertices.length(); j++) </div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                mapping[j] = j;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        theMesh.createColorSet(fColorSetNames[i], NULL, fClampedArray[i], fRepArray[i]);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fColorArrays[i].length() &gt; 0 &amp;&amp; fColorArrays[i].length() == fVertices.length())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMesh.setVertexColors(fColorArrays[i], mapping, NULL, fRepArray[i]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore UVs from cached data for undo</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numUVSets = fUVSetNames.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_int_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> defaultUVSetName;</div>\n\
<div class=\"line\">    theMesh.getCurrentUVSetName(defaultUVSetName);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (i = 0; i &lt; numUVSets; i++) </div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fUVSetNames[i] != defaultUVSetName)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMesh.createUVSet(fUVSetNames[i]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fUArrays[i].length() &gt; 0 &amp;&amp; fUArrays[i].length() == fVArrays[i].length())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            theMesh.setUVs(fUArrays[i], fVArrays[i], &amp;(fUVSetNames[i]));</div>\n\
<div class=\"line\">            theMesh.assignUVs(fUVCountsArrays[i], fUVIdsArrays[i], &amp;(fUVSetNames[i]));</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    reset();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> stat;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> meshRemapCommand::reset()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fVertices.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#ac8bb3912a3ce86b15842e79d0b421204\">clear</a>();</div>\n\
<div class=\"line\">    fPolygonCounts.clear();</div>\n\
<div class=\"line\">    fPolygonConnects.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fColorSetNames.clear();</div>\n\
<div class=\"line\">    fUVSetNames.clear();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fClampedArray != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fClampedArray;</div>\n\
<div class=\"line\">        fClampedArray = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fRepArray != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fRepArray;</div>\n\
<div class=\"line\">        fRepArray = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fUArrays != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fUArrays;</div>\n\
<div class=\"line\">        fUArrays = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fVArrays != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fVArrays;</div>\n\
<div class=\"line\">        fVArrays = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fColorArrays != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fColorArrays;</div>\n\
<div class=\"line\">        fColorArrays = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fUVCountsArrays != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fUVCountsArrays;</div>\n\
<div class=\"line\">        fUVCountsArrays = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fUVIdsArrays != NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> [] fUVIdsArrays;</div>\n\
<div class=\"line\">        fUVIdsArrays = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";