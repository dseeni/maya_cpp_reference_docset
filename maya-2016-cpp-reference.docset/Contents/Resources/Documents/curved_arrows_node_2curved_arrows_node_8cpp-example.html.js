var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>curvedArrowsNode/curvedArrowsNode.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'curved_arrows_node_2curved_arrows_node_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>curvedArrowsNode/curvedArrowsNode.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">curvedArrowsNode/curvedArrowsNode.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  A simple locator node that demonstrates the transparency flag on</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  locator nodes. Transparent objects must be drawn in a special draw</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  pass by Maya because the rendered output is dependent on the draw</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  order of objects.  The isTransparent() method tells the API that</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  this locator should be placed in this special transparency queue </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  for rendering.  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  API programmers can see the effects of this draw operation by</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  toggling the &#39;transparencySort&#39; attribute on this node.  When the</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  attribute is set to true the locator will be drawn in sorted order</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  with all transparent objects in the scene.  When it is set to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  false it will be drawn with all opaque objects in the scene.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This also demonstrates the related drawLast() flag.  This flag allows</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  a locator to be specified as the last object to be drawn in a given</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  refresh pass.  This flag a very specialized purpose, but it can be</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  important when using the isTransparent flag in crucial situations.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxLocatorNode.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTypeId.h&gt;</span> </div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/M3dView.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;arrowData.h&quot;</span> </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>curvedArrows : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html\">MPxLocatorNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    curvedArrows();</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> ~curvedArrows(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span>            <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a5c13a6c88a839b5356861d1d09e820d9\">postConstructor</a>(); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a5cb7edfa1f67c75588bec1c38b7bf5f8\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span>            <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#a999efab3ad8289b53bc370aaeb7d6146\">draw</a>( <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view, <span class=\"keyword\">const</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; path, </div>\n\
<div class=\"line\">                                  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8a\">M3dView::DisplayStyle</a> style,</div>\n\
<div class=\"line\">                                  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> status );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">void</span>            drawEdgeLoop( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span>            <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#a4254418493ef1ab6847b9e5f395fa3de\">isBounded</a>() <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>    <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#a762dab569a9d88aa731f3c7229803e1e\">boundingBox</a>() <span class=\"keyword\">const</span>; </div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span>            <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#a9af8d1d3490a3fa7779927df11c7c039\">isTransparent</a>() <span class=\"keyword\">const</span>; </div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span>            <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_locator_node.html#ac1d501f86fcb9b848add708368d69d86\">drawLast</a>() <span class=\"keyword\">const</span>; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *          creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>         initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         aEnableTransparencySort; </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         aEnableDrawLast; </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         aTheColor; </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>         aTransparency; </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a>     id;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> curvedArrows::id( 0x08102B );</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> curvedArrows::aEnableTransparencySort; </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> curvedArrows::aEnableDrawLast;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> curvedArrows::aTheColor; </div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> curvedArrows::aTransparency; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">curvedArrows::curvedArrows() {}</div>\n\
<div class=\"line\">curvedArrows::~curvedArrows() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span></div>\n\
<div class=\"line\">curvedArrows::postConstructor() </div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> curvedArrows::compute( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; <span class=\"comment\">/*plug*/</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; <span class=\"comment\">/*data*/</span> )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a7f858db05022c8bc860d685e13bab6ae\">MS::kUnknownParameter</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> curvedArrows::drawEdgeLoop( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> status )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    glPushAttrib( GL_CURRENT_BIT ); </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( status == <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaab6a8784b4cf96692e0d71d19c44ce732\">M3dView::kActive</a> ) {</div>\n\
<div class=\"line\">        view.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#aaf6fd568acc50d57be00639f773c1d73\">setDrawColor</a>( 13, <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa18362fb06caee77a9bae15aa90e06d1c\">M3dView::kActiveColors</a> );</div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#aaf6fd568acc50d57be00639f773c1d73\">setDrawColor</a>( 13, <a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa466739773561fe25487724d1b7a16234\">M3dView::kDormantColors</a> );</div>\n\
<div class=\"line\">    }  </div>\n\
<div class=\"line\">    glBegin( GL_LINE_LOOP ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i; </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; fsEdgeLoopSize; i ++ ) { </div>\n\
<div class=\"line\">        glVertex3d( fsVertexList[fsEdgeLoop[i]][0], </div>\n\
<div class=\"line\">                    fsVertexList[fsEdgeLoop[i]][1],</div>\n\
<div class=\"line\">                    fsVertexList[fsEdgeLoop[i]][2]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glEnd(); </div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> curvedArrows::draw( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; <span class=\"comment\">/*path*/</span>, </div>\n\
<div class=\"line\">                             <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8a\">M3dView::DisplayStyle</a> style,</div>\n\
<div class=\"line\">                             <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> status )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the size</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisNode = thisMObject();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> tPlug = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>( thisNode, aTransparency ); </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> cPlug = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>( thisNode, aTheColor ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> r, g, b, a; </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> color; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cPlug.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>( color ); </div>\n\
<div class=\"line\">    <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html\">MFnNumericData</a> data( color ); </div>\n\
<div class=\"line\">    data.getData( r, g, b ); </div>\n\
<div class=\"line\">    tPlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>( a ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( (style == <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa7914d385424ca72fdf84654b735a5a50\">M3dView::kFlatShaded</a>) ||</div>\n\
<div class=\"line\">        (style == <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">M3dView::kGouraudShaded</a>) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Push the color settings</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// </span></div>\n\
<div class=\"line\">        glPushAttrib( GL_COLOR_BUFFER_BIT | GL_CURRENT_BIT | GL_ENABLE_BIT | </div>\n\
<div class=\"line\">                      GL_PIXEL_MODE_BIT ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( a &lt; 1.0f ) { </div>\n\
<div class=\"line\">            glEnable( GL_BLEND );</div>\n\
<div class=\"line\">            glBlendFunc( GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glColor4f( r, g, b, a );            </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        glBegin( GL_TRIANGLES ); </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( i = 0; i &lt; fsFaceListSize; i ++ ) { </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *vid = fsFaceList[i];</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *nid = fsFaceVertexNormalList[i]; </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; 3; j ++ ) { </div>\n\
<div class=\"line\">                glNormal3d( fsNormalList[nid[j]-1][0], </div>\n\
<div class=\"line\">                            fsNormalList[nid[j]-1][1], </div>\n\
<div class=\"line\">                            fsNormalList[nid[j]-1][2] );</div>\n\
<div class=\"line\">                glVertex3d( fsVertexList[vid[j]-1][0], </div>\n\
<div class=\"line\">                            fsVertexList[vid[j]-1][1],</div>\n\
<div class=\"line\">                            fsVertexList[vid[j]-1][2] ); </div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glEnd(); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        glPopAttrib(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        drawEdgeLoop( view, status ); </div>\n\
<div class=\"line\">    } <span class=\"keywordflow\">else</span> { </div>\n\
<div class=\"line\">        drawEdgeLoop( view, status ); </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> curvedArrows::isTransparent( )<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisNode = thisMObject(); </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug( thisNode, aEnableTransparencySort ); </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> value; </div>\n\
<div class=\"line\">    plug.getValue( value ); </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> value; </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> curvedArrows::drawLast()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> thisNode = thisMObject();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> plug( thisNode, aEnableDrawLast );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> value;</div>\n\
<div class=\"line\">    plug.getValue( value );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> value;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> curvedArrows::isBounded()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{ </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> curvedArrows::boundingBox()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{   </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> bbox; </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( i = 0; i &lt; fsVertexListSize; i ++ ) { </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> *pt = fsVertexList[i]; </div>\n\
<div class=\"line\">        bbox.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#aee704d46278fb5925a7bd814a5773ccd\">expand</a>( <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( pt[0], pt[1], pt[2] ) ); </div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> bbox; </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* curvedArrows::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> curvedArrows();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> curvedArrows::initialize()</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTheColor = nAttr.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;theColor&quot;</span>, <span class=\"stringliteral\">&quot;tc&quot;</span> ); </div>\n\
<div class=\"line\">    nAttr.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( 0.1, 0.1, 0.8 ); </div>\n\
<div class=\"line\">    nAttr.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    aTransparency = nAttr.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;transparency&quot;</span>, <span class=\"stringliteral\">&quot;t&quot;</span>, <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( 0.5 ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aEnableTransparencySort = </div>\n\
<div class=\"line\">        nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;transparencySort&quot;</span>, <span class=\"stringliteral\">&quot;ts&quot;</span>, <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>( <span class=\"keyword\">true</span> ); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aEnableDrawLast =</div>\n\
<div class=\"line\">        nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;drawLast&quot;</span>, <span class=\"stringliteral\">&quot;dL&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">                                                                                                                                                    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat1, stat2, stat3, stat4;</div>\n\
<div class=\"line\">    stat1 = addAttribute( aTheColor );</div>\n\
<div class=\"line\">    stat2 = addAttribute( aEnableTransparencySort );</div>\n\
<div class=\"line\">    stat3 = addAttribute( aEnableDrawLast );</div>\n\
<div class=\"line\">    stat4 = addAttribute( aTransparency );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !stat1 || !stat2 || !stat3  || !stat4) {</div>\n\
<div class=\"line\">        stat1.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        stat2.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        stat3.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        stat4.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;addAttribute&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a name=\"_a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;6.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;curvedArrows&quot;</span>, curvedArrows::id, </div>\n\
<div class=\"line\">                         &amp;curvedArrows::creator, &amp;curvedArrows::initialize,</div>\n\
<div class=\"line\">                         <a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee1b06f2f9885d7d4fd4fda48926f94b\">MPxNode::kLocatorNode</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( curvedArrows::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";