var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>MRenderer Class Reference</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'class_m_h_w_render_1_1_m_renderer.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>MRenderer Class Reference</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li class=\"current\"><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
  <div id=\"navrow2\" class=\"tabs2\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Class&#160;List</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/classes.html\"><span>Class&#160;Index</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/hierarchy.html\"><span>Class&#160;Hierarchy</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/functions.html\"><span>Class&#160;Members</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  \n\
  <div class=\"headertitle\">\n\
<div class=\"title\">MRenderer Class Reference<div class=\"ingroups\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/group___open_maya_render.html\">OpenMayaRender - API module for rendering</a></div></div>  </div>\n\
<div id=\"OverviewLinksDiv\"><div id=\"dynsection-overview\" onclick=\"return toggleVisibility(this)\" class=\"dynheader closed\" style=\"cursor:pointer;\"><img id=\"dynsection-overview-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> Related help topics: </div><div id=\"dynsection-overview-content\" class=\"dyncontent\" style=\"display:none;\"><ul class=\"overviewLinks\">\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-6644CF46-6648-45B8-A3D8-76EDD7712571.htm\">What\'s New / What\'s Changed? &gt; What\'s New in API in Maya 2016</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-1BB599DB-D637-4D95-AD35-9F85AA5A35ED.htm\">What\'s New / What\'s Changed? &gt; What\'s New in API in Maya 2016 &gt; C++ API Changes in Maya 2016</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-DBDCB848-B0A5-4256-912C-6FCE25D12984.htm\">What\'s New / What\'s Changed? &gt; Autodesk Maya 2015</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-9DBD7E49-7A17-4CEB-89AF-A3B509AD91E2.htm\">What\'s New / What\'s Changed? &gt; Autodesk Maya 2014</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-F0CA7A2C-EE99-4A95-9E5E-C187F000092C.htm\">What\'s New / What\'s Changed? &gt; Extension for Autodesk Maya 2013</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-24BAA64A-DAEA-43DB-8FF0-5625F371AE67.htm\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Framework Classes</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-9A5432D0-FA89-4E64-8277-22DC81680B20.htm\">Viewport 2.0 API &gt; Overview of the Viewport 2.0 API &gt; Developer Kit Samples</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-DF09606A-B690-4FD3-8AA6-22889BA577CF.htm\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; The Renderer</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-99836B89-9F16-4AA1-AB47-92A45F3CEEA2.htm\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Geometry Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-32D46A07-2FEA-4D19-8782-DF4C5C8AAB1B.htm\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Plug-in Entry Points &gt; Render Loop Overrides</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-D1853655-D22D-4B1C-8CBD-528CD1903B0E.htm\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Advanced Topics &gt; Lighting Interfaces</a></li>\n\
<li class=\"overviewLink\"><a href=\"#!/url=./files/GUID-A315D8E2-3D86-46BB-97DF-45E3ABE1A0AA.htm\">Viewport 2.0 API &gt; Maya Viewport 2.0 API Guide &gt; Devices and Draw APIs &gt; Accessing Resource Handles and Device Handle</a></li>\n\
</ul></div></div>\n\
<div class=\"summary\">\n\
<a href=\"class_m_h_w_render_1_1_m_renderer.html#pub-types\">Public Types</a> &#124;\n\
<a href=\"class_m_h_w_render_1_1_m_renderer.html#pub-methods\">Public Member Functions</a> &#124;\n\
<a href=\"class_m_h_w_render_1_1_m_renderer.html#pub-static-methods\">Static Public Member Functions</a>  </div></div><!--header-->\n\
<div class=\"contents\">\n\
\n\
<p><code>#include &lt;MViewport2Renderer.h&gt;</code></p>\n\
<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Class Description</h2>\n\
<div class=\"textblock\"><p>Main interface class to the Viewport 2.0 renderer. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example0\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example0-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example0-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8cpp-example.html#_a43\">apiMeshShape/apiMeshGeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#_a25\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#_a22\">blast2Cmd/blast2Cmd.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/brick_shader_2brick_shader_8cpp-example.html#_a29\">brickShader/brickShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/cg_fx_2cgfx_shader_node_8cpp-example.html#_a10\">cgFx/cgfxShaderNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/checker_shader_2checker_shader_8cpp-example.html#_a33\">checkerShader/checkerShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/contrast_shader_2contrast_shader_8cpp-example.html#_a25\">contrastShader/contrastShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/custom_texture_shader_2custom_texture_shader_override_8cpp-example.html#_a1\">customTextureShader/customTextureShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/depth_shader_2depth_shader_8cpp-example.html#_a32\">depthShader/depthShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#_a155\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_override_8cpp-example.html#_a8\">dx11Shader/dx11ShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/file_texture_2file_texture_8cpp-example.html#_a46\">fileTexture/fileTexture.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#_a41\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/fragment_dumper_2fragment_dumper_8cpp-example.html#_a5\">fragmentDumper/fragmentDumper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gamma_shader_2gamma_shader_8cpp-example.html#_a26\">gammaShader/gammaShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/geometry_replicator_2geometry_replicator_8cpp-example.html#_a28\">geometryReplicator/geometryReplicator.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#_a133\">glslShader/GLSLShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_draw_override_8cpp-example.html#_a38\">gpuCache/gpuCacheDrawOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_sub_scene_override_8cpp-example.html#_a20\">gpuCache/gpuCacheSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_api_texture_test_8cpp-example.html#_a19\">hwApiTextureTest/hwApiTextureTest.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_8cpp-example.html#_a0\">hwApiTextureTest/hwRendererHelper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_8h-example.html#_a1\">hwApiTextureTest/hwRendererHelper.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_d_x_8cpp-example.html#_a0\">hwApiTextureTest/hwRendererHelperDX.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_d_x_8h-example.html#_a0\">hwApiTextureTest/hwRendererHelperDX.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_g_l_8cpp-example.html#_a0\">hwApiTextureTest/hwRendererHelperGL.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_g_l_8h-example.html#_a0\">hwApiTextureTest/hwRendererHelperGL.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_8cpp-example.html#_a16\">hwPhongShader/hwPhongShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mixture_shader_2mixture_shader_8cpp-example.html#_a25\">mixtureShader/mixtureShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#_a43\">rawfootPrintNode/rawfootPrintNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/simple_noise_shader_2simple_noise_shader_override_8cpp-example.html#_a5\">simpleNoiseShader/simpleNoiseShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#_a13\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8cpp-example.html#_a1\">viewImageBlitOverride/viewImageBlitOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8h-example.html#_a4\">viewImageBlitOverride/viewImageBlitOverride.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_main_8cpp-example.html#_a7\">viewImageBlitOverride/viewImageBlitOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#_a12\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_object_set_override_2view_object_set_override_8cpp-example.html#_a17\">viewObjectSetOverride/viewObjectSetOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_8cpp-example.html#_a4\">viewOverrideSimple/viewOverrideSimple.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_main_8cpp-example.html#_a3\">viewOverrideSimple/viewOverrideSimpleMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_8cpp-example.html#_a4\">viewRenderOverride/viewRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_main_8cpp-example.html#_a3\">viewRenderOverride/viewRenderOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_operations_8cpp-example.html#_a65\">viewRenderOverride/viewRenderOverrideOperations.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_user_operation_8cpp-example.html#_a48\">viewRenderOverride/viewRenderOverrideUserOperation.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_8cpp-example.html#_a1\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCache.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_main_8cpp-example.html#_a23\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCacheMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html#_a3\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8h-example.html#_a11\">viewRenderOverrideMRT/viewRenderOverrideMRT.h</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_main_8cpp-example.html#_a3\">viewRenderOverrideMRT/viewRenderOverrideMRTMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_8cpp-example.html#_a1\">viewRenderOverrideShadows/viewRenderOverrideShadows.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_main_8cpp-example.html#_a3\">viewRenderOverrideShadows/viewRenderOverrideShadowsMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#_a1\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_main_8cpp-example.html#_a3\">viewRenderOverrideTargets/viewRenderOverrideTargetsMain.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/vp2_blinn_shader_2vp2_blinn_shader_8cpp-example.html#_a26\">vp2BlinnShader/vp2BlinnShader.cpp</a>.</dd></div>\n\
</dl></div><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-types\"></a>\n\
Public Types</h2></td></tr>\n\
<tr class=\"memitem:a18e66af17b74186ceb66ff3ba3a216ef\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"anchor\" id=\"a18e66af17b74186ceb66ff3ba3a216ef\"></a>\n\
typedef void(*&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a18e66af17b74186ceb66ff3ba3a216ef\">NotificationCallback</a>) (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MDrawContext</a> &amp;context, void *clientData)</td></tr>\n\
<tr class=\"memdesc:a18e66af17b74186ceb66ff3ba3a216ef\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Definition for callback function for <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\" title=\"Add a notification callback to the rendering pipeline. \">addNotification()</a> <br></td></tr>\n\
<tr class=\"separator:a18e66af17b74186ceb66ff3ba3a216ef\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-methods\"></a>\n\
Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:ae2d5ce57991bca16f525728e8d9d399e\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49\">MHWRender::DrawAPI</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae2d5ce57991bca16f525728e8d9d399e\">drawAPI</a> () const </td></tr>\n\
<tr class=\"memdesc:ae2d5ce57991bca16f525728e8d9d399e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the current drawing API.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ae2d5ce57991bca16f525728e8d9d399e\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae2d5ce57991bca16f525728e8d9d399e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aac2a5827e6a0ce3333e62ffa7751ba5e\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aac2a5827e6a0ce3333e62ffa7751ba5e\">drawAPIIsOpenGL</a> () const </td></tr>\n\
<tr class=\"memdesc:aac2a5827e6a0ce3333e62ffa7751ba5e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Method will indicate whether the current drawing API is OpenGL or not.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#aac2a5827e6a0ce3333e62ffa7751ba5e\">More...</a><br></td></tr>\n\
<tr class=\"separator:aac2a5827e6a0ce3333e62ffa7751ba5e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9239bd7ad4e2067c0798fb48a135cfe8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a9239bd7ad4e2067c0798fb48a135cfe8\">drawAPIVersion</a> () const </td></tr>\n\
<tr class=\"memdesc:a9239bd7ad4e2067c0798fb48a135cfe8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Method will return the version of drawing API.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a9239bd7ad4e2067c0798fb48a135cfe8\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9239bd7ad4e2067c0798fb48a135cfe8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a637ec8cc3cc0e631f1d134f6891f89f0\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a637ec8cc3cc0e631f1d134f6891f89f0\">GPUDeviceHandle</a> () const </td></tr>\n\
<tr class=\"memdesc:a637ec8cc3cc0e631f1d134f6891f89f0\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Method will return a pointer to the GPU \"device\".  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a637ec8cc3cc0e631f1d134f6891f89f0\">More...</a><br></td></tr>\n\
<tr class=\"separator:a637ec8cc3cc0e631f1d134f6891f89f0\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a6f0ed9231f8c663fee43ed2e666e3859\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a6f0ed9231f8c663fee43ed2e666e3859\">GPUmaximumVertexBufferSize</a> () const </td></tr>\n\
<tr class=\"memdesc:a6f0ed9231f8c663fee43ed2e666e3859\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Method to return the maximum number of vertices allowed in a vertex buffer by the GPU device.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a6f0ed9231f8c663fee43ed2e666e3859\">More...</a><br></td></tr>\n\
<tr class=\"separator:a6f0ed9231f8c663fee43ed2e666e3859\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa02cef952777de065c653a1ce85dbee8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aa02cef952777de065c653a1ce85dbee8\">GPUmaximumPrimitiveCount</a> () const </td></tr>\n\
<tr class=\"memdesc:aa02cef952777de065c653a1ce85dbee8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Method to return the maximum number of primitives that can be drawn per draw call by the GPU device.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#aa02cef952777de065c653a1ce85dbee8\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa02cef952777de065c653a1ce85dbee8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4d996ca99ed8fe1e8f122cdbd20308dc\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4d996ca99ed8fe1e8f122cdbd20308dc\">GPUmaximumOutputTargetSize</a> (unsigned int &amp;w, unsigned int &amp;h) const </td></tr>\n\
<tr class=\"memdesc:a4d996ca99ed8fe1e8f122cdbd20308dc\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Retrieve the maximum allowable dimensions for output target by the GPU device.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a4d996ca99ed8fe1e8f122cdbd20308dc\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4d996ca99ed8fe1e8f122cdbd20308dc\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0f42783e8eee6f472d6bbb2acb6b2f2d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\">MFragmentManager</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a0f42783e8eee6f472d6bbb2acb6b2f2d\">getFragmentManager</a> () const </td></tr>\n\
<tr class=\"memdesc:a0f42783e8eee6f472d6bbb2acb6b2f2d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Access the fragment manager.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a0f42783e8eee6f472d6bbb2acb6b2f2d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0f42783e8eee6f472d6bbb2acb6b2f2d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a4603e18a1b89b798a2e4a4f36d9b5125\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MShaderManager</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">getShaderManager</a> () const </td></tr>\n\
<tr class=\"memdesc:a4603e18a1b89b798a2e4a4f36d9b5125\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Access the shader manager.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a4603e18a1b89b798a2e4a4f36d9b5125\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4603e18a1b89b798a2e4a4f36d9b5125\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a2228b9005f574393fbe87a4477161dc3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html\">MRenderTargetManager</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a2228b9005f574393fbe87a4477161dc3\">getRenderTargetManager</a> () const </td></tr>\n\
<tr class=\"memdesc:a2228b9005f574393fbe87a4477161dc3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Access the render target manager.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a2228b9005f574393fbe87a4477161dc3\">More...</a><br></td></tr>\n\
<tr class=\"separator:a2228b9005f574393fbe87a4477161dc3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9ffad84154d02f19ddcbea345591326c\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a9ffad84154d02f19ddcbea345591326c\">copyTargetToScreen</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MRenderTarget</a> *renderTarget)</td></tr>\n\
<tr class=\"memdesc:a9ffad84154d02f19ddcbea345591326c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Copy a render target to the screen.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a9ffad84154d02f19ddcbea345591326c\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9ffad84154d02f19ddcbea345591326c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa3f2ec2984800e2cd8ea09b4ad9f072e\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html\">MTextureManager</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aa3f2ec2984800e2cd8ea09b4ad9f072e\">getTextureManager</a> () const </td></tr>\n\
<tr class=\"memdesc:aa3f2ec2984800e2cd8ea09b4ad9f072e\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Access the texture manager.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#aa3f2ec2984800e2cd8ea09b4ad9f072e\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa3f2ec2984800e2cd8ea09b4ad9f072e\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae677d98e2300e2f9c69abb576539ac37\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae677d98e2300e2f9c69abb576539ac37\">registerOverride</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> *roverride)</td></tr>\n\
<tr class=\"memdesc:ae677d98e2300e2f9c69abb576539ac37\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Register the override as being usable by the renderer.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ae677d98e2300e2f9c69abb576539ac37\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae677d98e2300e2f9c69abb576539ac37\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a98edf29a485507737ea8f0523408296b\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a98edf29a485507737ea8f0523408296b\">deregisterOverride</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> *roverride)</td></tr>\n\
<tr class=\"memdesc:a98edf29a485507737ea8f0523408296b\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Deregister an existing render override on the renderer.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a98edf29a485507737ea8f0523408296b\">More...</a><br></td></tr>\n\
<tr class=\"separator:a98edf29a485507737ea8f0523408296b\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aa0cb03754b054ca048e0b9e6265b5e82\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aa0cb03754b054ca048e0b9e6265b5e82\">findRenderOverride</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</td></tr>\n\
<tr class=\"memdesc:aa0cb03754b054ca048e0b9e6265b5e82\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return a reference to an existing render override registered with the renderer.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#aa0cb03754b054ca048e0b9e6265b5e82\">More...</a><br></td></tr>\n\
<tr class=\"separator:aa0cb03754b054ca048e0b9e6265b5e82\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a68d4388b5455cb5f8eaa7913d6f8e2d6\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a68d4388b5455cb5f8eaa7913d6f8e2d6\">activeRenderOverride</a> () const </td></tr>\n\
<tr class=\"memdesc:a68d4388b5455cb5f8eaa7913d6f8e2d6\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the name of the active override.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a68d4388b5455cb5f8eaa7913d6f8e2d6\">More...</a><br></td></tr>\n\
<tr class=\"separator:a68d4388b5455cb5f8eaa7913d6f8e2d6\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac63658518caf950cf8c5ed412a0bac95\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ac63658518caf950cf8c5ed412a0bac95\">renderOverrideCount</a> ()</td></tr>\n\
<tr class=\"memdesc:ac63658518caf950cf8c5ed412a0bac95\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the number of registered render overrides.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ac63658518caf950cf8c5ed412a0bac95\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac63658518caf950cf8c5ed412a0bac95\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ae232fffec940aa3a48c6cff3326ab6c3\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ae232fffec940aa3a48c6cff3326ab6c3\">setRenderOverrideName</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name)</td></tr>\n\
<tr class=\"memdesc:ae232fffec940aa3a48c6cff3326ab6c3\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set the name of a render override (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a>) for batch rendering.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ae232fffec940aa3a48c6cff3326ab6c3\">More...</a><br></td></tr>\n\
<tr class=\"separator:ae232fffec940aa3a48c6cff3326ab6c3\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ad11c63f3dfb2c7c1ce54b7ae558bd0bb\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ad11c63f3dfb2c7c1ce54b7ae558bd0bb\">renderOverrideName</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *ReturnStatus=NULL) const </td></tr>\n\
<tr class=\"memdesc:ad11c63f3dfb2c7c1ce54b7ae558bd0bb\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the current render override name used for batch rendering.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ad11c63f3dfb2c7c1ce54b7ae558bd0bb\">More...</a><br></td></tr>\n\
<tr class=\"separator:ad11c63f3dfb2c7c1ce54b7ae558bd0bb\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a589ed2a8ecd1f4bf2d7e53932ddd032d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a589ed2a8ecd1f4bf2d7e53932ddd032d\">setOutputTargetOverrideSize</a> (unsigned int w, unsigned int h)</td></tr>\n\
<tr class=\"memdesc:a589ed2a8ecd1f4bf2d7e53932ddd032d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">This method allows rendering to occur to an offscreen target which differs from the interactive 3d viewport size.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a589ed2a8ecd1f4bf2d7e53932ddd032d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a589ed2a8ecd1f4bf2d7e53932ddd032d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a129e2e81ea6aa772ece17aaa98204c56\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a129e2e81ea6aa772ece17aaa98204c56\">getOutputTargetOverrideSize</a> (int &amp;w, int &amp;h)</td></tr>\n\
<tr class=\"memdesc:a129e2e81ea6aa772ece17aaa98204c56\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Get the override dimensions set for the final output target.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a129e2e81ea6aa772ece17aaa98204c56\">More...</a><br></td></tr>\n\
<tr class=\"separator:a129e2e81ea6aa772ece17aaa98204c56\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:af25fd0c611b5d859d7461de32f248f8c\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#af25fd0c611b5d859d7461de32f248f8c\">unsetOutputTargetOverrideSize</a> ()</td></tr>\n\
<tr class=\"memdesc:af25fd0c611b5d859d7461de32f248f8c\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Will unset any override dimensions set fot the final output target.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#af25fd0c611b5d859d7461de32f248f8c\">More...</a><br></td></tr>\n\
<tr class=\"separator:af25fd0c611b5d859d7461de32f248f8c\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:aef186014d5c44ba270308a00286f75fd\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#aef186014d5c44ba270308a00286f75fd\">outputTargetSize</a> (unsigned int &amp;w, unsigned int &amp;h) const </td></tr>\n\
<tr class=\"memdesc:aef186014d5c44ba270308a00286f75fd\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return the current dimensions for the output target.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#aef186014d5c44ba270308a00286f75fd\">More...</a><br></td></tr>\n\
<tr class=\"separator:aef186014d5c44ba270308a00286f75fd\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ac777540ab7b1bca5d51f7d03e62b4643\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ac777540ab7b1bca5d51f7d03e62b4643\">setLightRequiresShadows</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj, bool flag)</td></tr>\n\
<tr class=\"memdesc:ac777540ab7b1bca5d51f7d03e62b4643\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">The Viewport 2.0 renderer has a light limit option which is used to determine the number of lights used for computing illumination.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ac777540ab7b1bca5d51f7d03e62b4643\">More...</a><br></td></tr>\n\
<tr class=\"separator:ac777540ab7b1bca5d51f7d03e62b4643\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a837772824ffc712480bbd5e1d6fc355d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\">addNotification</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a18e66af17b74186ceb66ff3ba3a216ef\">NotificationCallback</a> notification, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> semanticLocation, void *clientData)</td></tr>\n\
<tr class=\"memdesc:a837772824ffc712480bbd5e1d6fc355d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Add a notification callback to the rendering pipeline.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a837772824ffc712480bbd5e1d6fc355d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a77e2edb6cc80c86ac9531161ba7fbeec\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a77e2edb6cc80c86ac9531161ba7fbeec\">removeNotification</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;name, const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;semanticLocation)</td></tr>\n\
<tr class=\"memdesc:a77e2edb6cc80c86ac9531161ba7fbeec\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Remove a notification operation from the rendering pipeline.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a77e2edb6cc80c86ac9531161ba7fbeec\">More...</a><br></td></tr>\n\
<tr class=\"separator:a77e2edb6cc80c86ac9531161ba7fbeec\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9b70d56be167875329139c9e10a1b706\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">unsigned int&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a9b70d56be167875329139c9e10a1b706\">notificationCount</a> (const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;semanticLocation) const </td></tr>\n\
<tr class=\"memdesc:a9b70d56be167875329139c9e10a1b706\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the number of notifications that have been set for a given semantic location.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a9b70d56be167875329139c9e10a1b706\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9b70d56be167875329139c9e10a1b706\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a9506cd979adc61c78966a30b90e3928d\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a9506cd979adc61c78966a30b90e3928d\">presentOnScreen</a> () const </td></tr>\n\
<tr class=\"memdesc:a9506cd979adc61c78966a30b90e3928d\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns whether the contents rendered by VP2 will be presented to on-screen buffers when running Maya in interactive mode.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a9506cd979adc61c78966a30b90e3928d\">More...</a><br></td></tr>\n\
<tr class=\"separator:a9506cd979adc61c78966a30b90e3928d\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a7c573fb11faf512577e6f4e64893f026\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a7c573fb11faf512577e6f4e64893f026\">setPresentOnScreen</a> (bool val)</td></tr>\n\
<tr class=\"memdesc:a7c573fb11faf512577e6f4e64893f026\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Set whether the contents rendered by VP2 will be presented to on-screen buffers when running Maya in interactive mode.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a7c573fb11faf512577e6f4e64893f026\">More...</a><br></td></tr>\n\
<tr class=\"separator:a7c573fb11faf512577e6f4e64893f026\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a0a37f5441ac2ecc2683c434a77e93234\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">bool&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a0a37f5441ac2ecc2683c434a77e93234\">useGradient</a> () const </td></tr>\n\
<tr class=\"memdesc:a0a37f5441ac2ecc2683c434a77e93234\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns whether a gradient is being used to clear the background color.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a0a37f5441ac2ecc2683c434a77e93234\">More...</a><br></td></tr>\n\
<tr class=\"separator:a0a37f5441ac2ecc2683c434a77e93234\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a1f60fa4b3321b445538ed712fa85f493\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a1f60fa4b3321b445538ed712fa85f493\">clearColor</a> () const </td></tr>\n\
<tr class=\"memdesc:a1f60fa4b3321b445538ed712fa85f493\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns the first clear color.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a1f60fa4b3321b445538ed712fa85f493\">More...</a><br></td></tr>\n\
<tr class=\"separator:a1f60fa4b3321b445538ed712fa85f493\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:acd95ff3a7742eccf81c361a2a57761f8\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#acd95ff3a7742eccf81c361a2a57761f8\">clearColor2</a> () const </td></tr>\n\
<tr class=\"memdesc:acd95ff3a7742eccf81c361a2a57761f8\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Return the second clear color.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#acd95ff3a7742eccf81c361a2a57761f8\">More...</a><br></td></tr>\n\
<tr class=\"separator:acd95ff3a7742eccf81c361a2a57761f8\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table><table class=\"memberdecls\">\n\
<tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"pub-static-methods\"></a>\n\
Static Public Member Functions</h2></td></tr>\n\
<tr class=\"memitem:a4678a72ac6959ed21d422d27928d0343\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MRenderer</a> *&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">theRenderer</a> (bool initializeRenderer=true)</td></tr>\n\
<tr class=\"memdesc:a4678a72ac6959ed21d422d27928d0343\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Returns a static pointer to the renderer.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">More...</a><br></td></tr>\n\
<tr class=\"separator:a4678a72ac6959ed21d422d27928d0343\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a36396613f85279a61dde9946bf5b9844\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a36396613f85279a61dde9946bf5b9844\">disableChangeManagementUntilNextRefresh</a> ()</td></tr>\n\
<tr class=\"memdesc:a36396613f85279a61dde9946bf5b9844\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Calling this method will cause Viewport 2.0 to stop processing all changes to the Maya scene until the next viewport refresh.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a36396613f85279a61dde9946bf5b9844\">More...</a><br></td></tr>\n\
<tr class=\"separator:a36396613f85279a61dde9946bf5b9844\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:ab2843a350b76cdcbf16dd70d884f9766\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\">setGeometryDrawDirty</a> (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj, bool topologyChanged=true)</td></tr>\n\
<tr class=\"memdesc:ab2843a350b76cdcbf16dd70d884f9766\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Notify the Viewport 2.0 renderer that the geometry (size, shape, etc.) of obj has changed, causing the object to be updated in the viewport.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#ab2843a350b76cdcbf16dd70d884f9766\">More...</a><br></td></tr>\n\
<tr class=\"separator:ab2843a350b76cdcbf16dd70d884f9766\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
<tr class=\"memitem:a06b742a8850af64d01e3fcbd9450916f\"><td class=\"memItemLeft\" translate=\"no\" align=\"right\" valign=\"top\">static void&#160;</td><td class=\"memItemRight\" translate=\"no\" valign=\"bottom\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a06b742a8850af64d01e3fcbd9450916f\">setLightsAndShadowsDirty</a> ()</td></tr>\n\
<tr class=\"memdesc:a06b742a8850af64d01e3fcbd9450916f\"><td class=\"mdescLeft\">&#160;</td><td class=\"mdescRight\">Notify the Viewport 2.0 renderer that something has changed which requires re-evaluation of lighting and shadows.  <a href=\"class_m_h_w_render_1_1_m_renderer.html#a06b742a8850af64d01e3fcbd9450916f\">More...</a><br></td></tr>\n\
<tr class=\"separator:a06b742a8850af64d01e3fcbd9450916f\"><td class=\"memSeparator\" colspan=\"2\">&#160;</td></tr>\n\
</table>\n\
<h2 class=\"groupheader\">Member Function Documentation</h2>\n\
<a class=\"anchor\" id=\"a4678a72ac6959ed21d422d27928d0343\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html\">MRenderer</a> * theRenderer </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>initializeRenderer</em> = <code>true</code></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns a static pointer to the renderer. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">initializeRenderer</td><td>Fully initialize the renderer.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<p>When requesting the renderer to fully initialize, the internal renderer will be created and initialized. In certain condition, a plugin may want to only get an access to the renderer without having to intialize it. This can be useful for plugins that are auto-loaded when Maya start, and only need an access to the renderer to register their render overrides.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Pointer to the renderer. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example1\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example1-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example1-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8cpp-example.html#a44\">apiMeshShape/apiMeshGeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#a26\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a23\">blast2Cmd/blast2Cmd.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/brick_shader_2brick_shader_8cpp-example.html#a30\">brickShader/brickShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/cg_fx_2cgfx_shader_node_8cpp-example.html#a11\">cgFx/cgfxShaderNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/checker_shader_2checker_shader_8cpp-example.html#a34\">checkerShader/checkerShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/contrast_shader_2contrast_shader_8cpp-example.html#a26\">contrastShader/contrastShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/custom_texture_shader_2custom_texture_shader_override_8cpp-example.html#a2\">customTextureShader/customTextureShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/depth_shader_2depth_shader_8cpp-example.html#a33\">depthShader/depthShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a156\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_override_8cpp-example.html#a9\">dx11Shader/dx11ShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/file_texture_2file_texture_8cpp-example.html#a47\">fileTexture/fileTexture.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#a42\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/fragment_dumper_2fragment_dumper_8cpp-example.html#a6\">fragmentDumper/fragmentDumper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gamma_shader_2gamma_shader_8cpp-example.html#a27\">gammaShader/gammaShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#a134\">glslShader/GLSLShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_api_texture_test_8cpp-example.html#a20\">hwApiTextureTest/hwApiTextureTest.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_color_per_vertex_shader_2hw_color_per_vertex_shader_8cpp-example.html#a80\">hwColorPerVertexShader/hwColorPerVertexShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_8cpp-example.html#a17\">hwPhongShader/hwPhongShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mixture_shader_2mixture_shader_8cpp-example.html#a26\">mixtureShader/mixtureShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_override_8cpp-example.html#a8\">onbShader/onbShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a44\">rawfootPrintNode/rawfootPrintNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/simple_noise_shader_2simple_noise_shader_override_8cpp-example.html#a6\">simpleNoiseShader/simpleNoiseShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a14\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8cpp-example.html#a2\">viewImageBlitOverride/viewImageBlitOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_main_8cpp-example.html#a8\">viewImageBlitOverride/viewImageBlitOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a13\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_object_set_override_2view_object_set_override_8cpp-example.html#a18\">viewObjectSetOverride/viewObjectSetOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_8cpp-example.html#a5\">viewOverrideSimple/viewOverrideSimple.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_main_8cpp-example.html#a4\">viewOverrideSimple/viewOverrideSimpleMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_8cpp-example.html#a5\">viewRenderOverride/viewRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_main_8cpp-example.html#a4\">viewRenderOverride/viewRenderOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_operations_8cpp-example.html#a66\">viewRenderOverride/viewRenderOverrideOperations.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_user_operation_8cpp-example.html#a49\">viewRenderOverride/viewRenderOverrideUserOperation.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_8cpp-example.html#a2\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCache.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_main_8cpp-example.html#a24\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCacheMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html#a4\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_main_8cpp-example.html#a4\">viewRenderOverrideMRT/viewRenderOverrideMRTMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_8cpp-example.html#a2\">viewRenderOverrideShadows/viewRenderOverrideShadows.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_main_8cpp-example.html#a4\">viewRenderOverrideShadows/viewRenderOverrideShadowsMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#a2\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_main_8cpp-example.html#a4\">viewRenderOverrideTargets/viewRenderOverrideTargetsMain.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/vp2_blinn_shader_2vp2_blinn_shader_8cpp-example.html#a27\">vp2BlinnShader/vp2BlinnShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae2d5ce57991bca16f525728e8d9d399e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49\">MHWRender::DrawAPI</a> drawAPI </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the current drawing API. </p>\n\
<p>Returns \'kNone\' if the renderer is not initialized.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>The current drawing API </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example2\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example2-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example2-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#a98\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/depth_shader_2depth_shader_8cpp-example.html#a38\">depthShader/depthShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#a199\">glslShader/GLSLShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a200\">rawfootPrintNode/rawfootPrintNode.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_8cpp-example.html#a15\">viewRenderOverride/viewRenderOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aac2a5827e6a0ce3333e62ffa7751ba5e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool drawAPIIsOpenGL </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Method will indicate whether the current drawing API is OpenGL or not. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the API is OpenGL. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example3\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example3-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example3-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a202\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_draw_override_8cpp-example.html#a53\">gpuCache/gpuCacheDrawOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_sub_scene_override_8cpp-example.html#a88\">gpuCache/gpuCacheSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_8cpp-example.html#a1\">hwApiTextureTest/hwRendererHelper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_8cpp-example.html#a230\">hwPhongShader/hwPhongShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a199\">rawfootPrintNode/rawfootPrintNode.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a95\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9239bd7ad4e2067c0798fb48a135cfe8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned int drawAPIVersion </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Method will return the version of drawing API. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Draw API version, or 0 if the renderer is not initialized properly. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a637ec8cc3cc0e631f1d134f6891f89f0\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void * GPUDeviceHandle </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Method will return a pointer to the GPU \"device\". </p>\n\
<p>In the case that the drawing API is OpenGL then the \"device\" is a handle to an OpenGL context. In the case that the drawing API is DirectX then the \"device\" is a pointer to a DirectX device.</p>\n\
<p><b>It is imperative that when a programmer makes any modifications to the device or context that the pre-modified state always be restored after the changes are no longer required. If this is not done then Maya\'s internal state tracking system will become inconsistent. This can result in unpredictable rendering behaviour.</b></p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A void pointer to the device or context. The pointer must be cast to the correct data type depending on the draw API. For example a cast to an HGLRC would be required to get an OpenGL context on Windows platforms.</dd></dl>\n\
<p>If the renderer has not been initialized a NULL pointer will be returned. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example4\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example4-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example4-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#a119\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a203\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_override_8cpp-example.html#a10\">dx11Shader/dx11ShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_renderer_helper_8cpp-example.html#a2\">hwApiTextureTest/hwRendererHelper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a45\">rawfootPrintNode/rawfootPrintNode.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a15\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a6f0ed9231f8c663fee43ed2e666e3859\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned int GPUmaximumVertexBufferSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Method to return the maximum number of vertices allowed in a vertex buffer by the GPU device. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Maximum value. 0 if device has not been initialized. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa02cef952777de065c653a1ce85dbee8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned int GPUmaximumPrimitiveCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Method to return the maximum number of primitives that can be drawn per draw call by the GPU device. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Maximum value. 0 if device has not been initialized. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4d996ca99ed8fe1e8f122cdbd20308dc\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void GPUmaximumOutputTargetSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>h</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Retrieve the maximum allowable dimensions for output target by the GPU device. </p>\n\
<p>These dimensions are not directly tied to the on-screen display resolution.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">w</td><td>Maximum width </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">h</td><td>Maximum height </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0f42783e8eee6f472d6bbb2acb6b2f2d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_fragment_manager.html\">MFragmentManager</a> * getFragmentManager </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Access the fragment manager. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A pointer to the fragment manager or NULL if the renderer is not initialized properly. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example5\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example5-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example5-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/brick_shader_2brick_shader_8cpp-example.html#a32\">brickShader/brickShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/checker_shader_2checker_shader_8cpp-example.html#a36\">checkerShader/checkerShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/contrast_shader_2contrast_shader_8cpp-example.html#a28\">contrastShader/contrastShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/depth_shader_2depth_shader_8cpp-example.html#a35\">depthShader/depthShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/file_texture_2file_texture_8cpp-example.html#a49\">fileTexture/fileTexture.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/fragment_dumper_2fragment_dumper_8cpp-example.html#a9\">fragmentDumper/fragmentDumper.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gamma_shader_2gamma_shader_8cpp-example.html#a29\">gammaShader/gammaShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/mixture_shader_2mixture_shader_8cpp-example.html#a28\">mixtureShader/mixtureShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/onb_shader_2onb_shader_override_8cpp-example.html#a9\">onbShader/onbShaderOverride.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/simple_noise_shader_2simple_noise_shader_override_8cpp-example.html#a48\">simpleNoiseShader/simpleNoiseShaderOverride.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a4603e18a1b89b798a2e4a4f36d9b5125\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_manager.html\">MShaderManager</a> * getShaderManager </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Access the shader manager. </p>\n\
<p>The shader manager can be used to produce <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_shader_instance.html\" title=\"An instance of a shader that may be used with Viewport 2.0. \">MShaderInstance</a> objects which may be assigned to <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\" title=\"A single renderable entity. \">MRenderItem</a> objects by implementations of <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html\" title=\"Base for user-defined classes to prepare geometry for drawing. \">MPxGeometryOverride</a>.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A pointer to the shader manager or NULL if the renderer is not initialized properly. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example6\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example6-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example6-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8cpp-example.html#a157\">apiMeshShape/apiMeshGeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#a28\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/custom_texture_shader_2custom_texture_shader_override_8cpp-example.html#a4\">customTextureShader/customTextureShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/foot_print_node__geometry_override_2foot_print_node__geometry_override_8cpp-example.html#a44\">footPrintNode_GeometryOverride/footPrintNode_GeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/geometry_replicator_2geometry_replicator_8cpp-example.html#a30\">geometryReplicator/geometryReplicator.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#a140\">glslShader/GLSLShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_sub_scene_override_8cpp-example.html#a22\">gpuCache/gpuCacheSubSceneOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_8cpp-example.html#a22\">hwPhongShader/hwPhongShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/rawfoot_print_node_2rawfoot_print_node_8cpp-example.html#a204\">rawfootPrintNode/rawfootPrintNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8cpp-example.html#a35\">viewImageBlitOverride/viewImageBlitOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a62\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_operations_8cpp-example.html#a68\">viewRenderOverride/viewRenderOverrideOperations.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_8cpp-example.html#a4\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCache.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html#a6\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_8cpp-example.html#a4\">viewRenderOverrideShadows/viewRenderOverrideShadows.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#a4\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/vp2_blinn_shader_2vp2_blinn_shader_8cpp-example.html#a29\">vp2BlinnShader/vp2BlinnShader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a2228b9005f574393fbe87a4477161dc3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target_manager.html\">MRenderTargetManager</a> * getRenderTargetManager </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Access the render target manager. </p>\n\
<p>The render target manager can be used to produce <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\" title=\"An instance of a render target that may be used with Viewport 2.0. \">MRenderTarget</a> objects which may be assigned to <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_operation.html\" title=\"Class which defines a rendering operation. \">MRenderOperation</a> objects as output target overrides.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A pointer to the manager of NULL if the renderer is not initialized properly. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example7\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example7-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example7-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a42\">blast2Cmd/blast2Cmd.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a257\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a114\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_8cpp-example.html#a7\">viewRenderOverride/viewRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_8cpp-example.html#a25\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCache.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html#a9\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#a18\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9ffad84154d02f19ddcbea345591326c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool copyTargetToScreen </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_target.html\">MRenderTarget</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>renderTarget</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Copy a render target to the screen. </p>\n\
<p>If the target\'s dimensions are not the same as the active viewport it will be scaled up or down as necessary to fill the entire viewport.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">renderTarget</td><td>Render target to copy.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if copy was successful. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa3f2ec2984800e2cd8ea09b4ad9f072e\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_texture_manager.html\">MTextureManager</a> * getTextureManager </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Access the texture manager. </p>\n\
<p>The texture manager can be used to acquire texture</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>A pointer to the texture manager or NULL if the renderer is not initialized properly. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example8\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example8-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example8-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_geometry_override_8cpp-example.html#a46\">apiMeshShape/apiMeshGeometryOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a36\">blast2Cmd/blast2Cmd.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/cg_fx_2cgfx_shader_node_8cpp-example.html#a13\">cgFx/cgfxShaderNode.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/custom_texture_shader_2custom_texture_shader_override_8cpp-example.html#a28\">customTextureShader/customTextureShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a158\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/file_texture_2file_texture_8cpp-example.html#a69\">fileTexture/fileTexture.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#a137\">glslShader/GLSLShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_api_texture_test_2hw_api_texture_test_8cpp-example.html#a24\">hwApiTextureTest/hwApiTextureTest.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/hw_phong_shader_2hw_phong_shader_8cpp-example.html#a19\">hwPhongShader/hwPhongShader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/simple_noise_shader_2simple_noise_shader_override_8cpp-example.html#a8\">simpleNoiseShader/simpleNoiseShaderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a20\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8cpp-example.html#a4\">viewImageBlitOverride/viewImageBlitOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_operations_8cpp-example.html#a129\">viewRenderOverride/viewRenderOverrideOperations.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_8cpp-example.html#a7\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCache.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_8cpp-example.html#a62\">viewRenderOverrideShadows/viewRenderOverrideShadows.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#a36\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae677d98e2300e2f9c69abb576539ac37\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> registerOverride </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>roverride</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Register the override as being usable by the renderer. </p>\n\
<p>If the override is already registered it will not be registered again.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">roverride</td><td>Rendering override to be registered.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MS::kSuccess</a></b> Override was registered. </li>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MS::kFailure</a></b> Override failed to register. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example9\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example9-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example9-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a133\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_main_8cpp-example.html#a9\">viewImageBlitOverride/viewImageBlitOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a98\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_object_set_override_2view_object_set_override_8cpp-example.html#a20\">viewObjectSetOverride/viewObjectSetOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_main_8cpp-example.html#a5\">viewOverrideSimple/viewOverrideSimpleMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_main_8cpp-example.html#a5\">viewRenderOverride/viewRenderOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_main_8cpp-example.html#a25\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCacheMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_main_8cpp-example.html#a5\">viewRenderOverrideMRT/viewRenderOverrideMRTMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_main_8cpp-example.html#a5\">viewRenderOverrideShadows/viewRenderOverrideShadowsMain.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_main_8cpp-example.html#a5\">viewRenderOverrideTargets/viewRenderOverrideTargetsMain.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a98edf29a485507737ea8f0523408296b\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> deregisterOverride </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>roverride</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Deregister an existing render override on the renderer. </p>\n\
<p>The renderer will remove this override from it\'s list of registered overrides.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">roverride</td><td>Rendering override to be deregistered.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MS::kSuccess</a></b> Override was deregistered </li>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MS::kFailure</a></b> Override failed to be deregistered. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example10\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example10-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example10-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a135\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_main_8cpp-example.html#a10\">viewImageBlitOverride/viewImageBlitOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a100\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_object_set_override_2view_object_set_override_8cpp-example.html#a21\">viewObjectSetOverride/viewObjectSetOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_main_8cpp-example.html#a8\">viewOverrideSimple/viewOverrideSimpleMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_main_8cpp-example.html#a7\">viewRenderOverride/viewRenderOverrideMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_frame_cache_2view_render_override_frame_cache_main_8cpp-example.html#a26\">viewRenderOverrideFrameCache/viewRenderOverrideFrameCacheMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_main_8cpp-example.html#a6\">viewRenderOverrideMRT/viewRenderOverrideMRTMain.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_main_8cpp-example.html#a6\">viewRenderOverrideShadows/viewRenderOverrideShadowsMain.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_main_8cpp-example.html#a6\">viewRenderOverrideTargets/viewRenderOverrideTargetsMain.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aa0cb03754b054ca048e0b9e6265b5e82\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\">MRenderOverride</a> * findRenderOverride </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>name</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return a reference to an existing render override registered with the renderer. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Name of override to find</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MS::kSuccess</a></b> Override was found. </li>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MS::kFailure</a></b> Override was not found. </li>\n\
</ul>\n\
</dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example11\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example11-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example11-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a94\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a91\">viewMRenderOverride/viewMRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_object_set_override_2view_object_set_override_8cpp-example.html#a22\">viewObjectSetOverride/viewObjectSetOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_main_8cpp-example.html#a7\">viewOverrideSimple/viewOverrideSimpleMain.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_user_operation_8cpp-example.html#a52\">viewRenderOverride/viewRenderOverrideUserOperation.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a68d4388b5455cb5f8eaa7913d6f8e2d6\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> activeRenderOverride </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the name of the active override. </p>\n\
<p>There can only be on active override at any given time and that override must exist be registered with the renderer.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Name of active override. If none an empty string will be returned. </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example12\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example12-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example12-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a93\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_user_operation_8cpp-example.html#a51\">viewRenderOverride/viewRenderOverrideUserOperation.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac63658518caf950cf8c5ed412a0bac95\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned int renderOverrideCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the number of registered render overrides. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Number of registered overrides </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ae232fffec940aa3a48c6cff3326ab6c3\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> setRenderOverrideName </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>name</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set the name of a render override (<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MHWRender::MRenderOverride</a>) for batch rendering. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Name of the override.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Status code</dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes:</dt><dd><ul>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MS::kSuccess</a></b> The override was set. </li>\n\
<li><b><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MS::kFailure</a></b> The override could not be set. </li>\n\
</ul>\n\
</dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ad11c63f3dfb2c7c1ce54b7ae558bd0bb\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> renderOverrideName </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> *&#160;</td>\n\
          <td class=\"paramname\"><em>ReturnStatus</em> = <code>NULL</code></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the current render override name used for batch rendering. </p>\n\
<p>If there is no override then an empty string will be returned</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">ReturnStatus</td><td>return status. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Override name. </dd></dl>\n\
<dl class=\"section user\"><dt>Status Codes: Currently always returns MS::kSuccess.</dt><dd></dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a589ed2a8ecd1f4bf2d7e53932ddd032d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void setOutputTargetOverrideSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int&#160;</td>\n\
          <td class=\"paramname\"><em>h</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>This method allows rendering to occur to an offscreen target which differs from the interactive 3d viewport size. </p>\n\
<p>The general purpose for this method is usage in conjunction with target read-back used for capturing sequences of images to disk. The key additional option is the ability to explicitly set the output target size as opposed to relying on attempting to resize a viewport to get an appropriate size.</p>\n\
<p>For this purpose, it can be used in conjunction with a post render notification via the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\" title=\"Add a notification callback to the rendering pipeline. \">MRenderer::addNotification()</a> interface.</p>\n\
<p>For example the following can be done: </p><ul>\n\
<li>\n\
Call <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\" title=\"Add a notification callback to the rendering pipeline. \">MRenderer::addNotification()</a> to add in a post render callback. </li>\n\
<li>\n\
Call <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a589ed2a8ecd1f4bf2d7e53932ddd032d\" title=\"This method allows rendering to occur to an offscreen target which differs from the interactive 3d vi...\">MRenderer::setOutputTargetOverrideSize()</a> to set an override output target size </li>\n\
<li>\n\
Queue a refresh. A render will occur to a target with the override size. </li>\n\
<li>\n\
The callback will read back the contents of the output target. </li>\n\
<li>\n\
Call <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#af25fd0c611b5d859d7461de32f248f8c\" title=\"Will unset any override dimensions set fot the final output target. \">MRenderer::unsetOutputTargetOverrideSize()</a> to unset the override </li>\n\
<li>\n\
Call <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a77e2edb6cc80c86ac9531161ba7fbeec\" title=\"Remove a notification operation from the rendering pipeline. \">MRenderer::removeNotification()</a> to remove the callback. </li>\n\
</ul>\n\
<p>Note that when the override is no longer required the method <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#af25fd0c611b5d859d7461de32f248f8c\" title=\"Will unset any override dimensions set fot the final output target. \">MRenderer::unsetOutputTargetOverrideSize()</a> should be called.</p>\n\
<p>The maximum allowable target dimensions can be queried using the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4d996ca99ed8fe1e8f122cdbd20308dc\" title=\"Retrieve the maximum allowable dimensions for output target by the GPU device. \">MRenderer::GPUmaximumOutputTargetSize()</a> method.</p>\n\
<p>This override affects neither batch rendering nor playblast which have their own explicit output target size controls.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">w</td><td>Width of the output target </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">h</td><td>Height of the output target </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example13\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example13-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example13-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a49\">blast2Cmd/blast2Cmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a129e2e81ea6aa772ece17aaa98204c56\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void getOutputTargetOverrideSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>h</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Get the override dimensions set for the final output target. </p>\n\
<p>If the values have never been set or if <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#af25fd0c611b5d859d7461de32f248f8c\" title=\"Will unset any override dimensions set fot the final output target. \">MRenderer::unsetOutputTargetOverrideSize()</a> is used to clear the values then the dimensions returned with be (-1,-1) respectively for the width and height values.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">w</td><td>Width of the output target. -1 if not set. </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">h</td><td>Height of the output target. -1 if not set. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"af25fd0c611b5d859d7461de32f248f8c\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void unsetOutputTargetOverrideSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Will unset any override dimensions set fot the final output target. </p>\n\
<p>The values stored will be set to (-1,-1) respectively for width and height </p>\n\
<dl class=\"section \"><div id=\"dynsection-example14\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example14-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example14-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a54\">blast2Cmd/blast2Cmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"aef186014d5c44ba270308a00286f75fd\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> outputTargetSize </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>w</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">unsigned int &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>h</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return the current dimensions for the output target. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">w</td><td>Width of the output target </td></tr>\n\
    <tr><td class=\"paramdir\">[out]</td><td class=\"paramname\">h</td><td>Height of the output target</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\" title=\"The operation was successful. \">MStatus::kSuccess</a> method was successful </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example15\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example15-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example15-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_d_x11_device_access_2view_d_x11_device_access_8cpp-example.html#a124\">viewDX11DeviceAccess/viewDX11DeviceAccess.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_image_blit_override_2view_image_blit_override_8cpp-example.html#a9\">viewImageBlitOverride/viewImageBlitOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_2view_render_override_8cpp-example.html#a14\">viewRenderOverride/viewRenderOverride.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_m_r_t_2view_render_override_m_r_t_8cpp-example.html#a18\">viewRenderOverrideMRT/viewRenderOverrideMRT.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_targets_2view_render_override_targets_8cpp-example.html#a16\">viewRenderOverrideTargets/viewRenderOverrideTargets.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a36396613f85279a61dde9946bf5b9844\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void disableChangeManagementUntilNextRefresh </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Calling this method will cause Viewport 2.0 to stop processing all changes to the Maya scene until the next viewport refresh. </p>\n\
<p>Upon the next viewport refresh, all existing scene information (geometry, textures, shaders, etc.) stored for Viewport 2.0 will be deleted and then rebuilt.</p>\n\
<p>This method can be used to prevent overhead from Viewport 2.0 from affecting the performance of complex scene operations which change large parts of the scene without needing the viewport to update.</p>\n\
<p>This method may only be called from the main thread. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example16\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example16-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example16-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_cmd_8cpp-example.html#a52\">gpuCache/gpuCacheCmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ab2843a350b76cdcbf16dd70d884f9766\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void setGeometryDrawDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td>\n\
          <td class=\"paramname\"><em>obj</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>topologyChanged</em> = <code>true</code>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Notify the Viewport 2.0 renderer that the geometry (size, shape, etc.) of obj has changed, causing the object to be updated in the viewport. </p>\n\
<p>Note that this method does NOT perform any DG evaluation when it is called. This method is an extention of the dirty propagation system. It adds obj to the list of objects which must be updated before the next frame is rendered. The actual evaluation does not occur until the next viewport refresh. This method is threadsafe. The viewport refresh will occur asynchronously. Multiple calls to this method will get merged. It\'s not necessary to call this method when assigning new material, since Maya automatically tracks material assignment.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">obj</td><td>DAG object which has been modified. </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">topologyChanged</td><td>has the object topology changed </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example17\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example17-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example17-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_shape_8cpp-example.html#a116\">apiMeshShape/apiMeshShape.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/gpu_cache_2gpu_cache_shape_node_8cpp-example.html#a60\">gpuCache/gpuCacheShapeNode.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a06b742a8850af64d01e3fcbd9450916f\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
<table class=\"mlabels\">\n\
  <tr>\n\
  <td class=\"mlabels-left\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void setLightsAndShadowsDirty </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
  </td>\n\
  <td class=\"mlabels-right\">\n\
<span class=\"mlabels\"><span class=\"mlabel\">static</span></span>  </td>\n\
  </tr>\n\
</table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Notify the Viewport 2.0 renderer that something has changed which requires re-evaluation of lighting and shadows. </p>\n\
<p>This will trigger an update of all active lights in the scene which will also force a recomputation of all active shadow maps.</p>\n\
<p>Note that this method does NOT perform any DG evaluation when it is called. This method is an extention of the dirty propagation system. It simply marks all lights as needing to be updated before the next frame is rendered. The actual evaluation does not occur until the next viewport refresh. This method is threadsafe. The viewport refresh will occur asynchronously. Multiple calls to this method will get merged.</p>\n\
<p>An example use of this method would be for advanced shaders which alter the geometry of objects through displacement and thus would alter the shadowing caused by objects that use the shader. Since the geometry of the object itself is not changing Maya cannot automatically update the lights and shadows. Thus the plug-in must mark them dirty manually. </p>\n\
<dl class=\"section \"><div id=\"dynsection-example18\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example18-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example18-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/api_mesh_shape_2api_mesh_sub_scene_override_8cpp-example.html#a97\">apiMeshShape/apiMeshSubSceneOverride.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a404\">dx11Shader/dx11Shader.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"ac777540ab7b1bca5d51f7d03e62b4643\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool setLightRequiresShadows </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&#160;</td>\n\
          <td class=\"paramname\"><em>object</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>flag</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>The Viewport 2.0 renderer has a light limit option which is used to determine the number of lights used for computing illumination. </p>\n\
<p>If the light is not used for illuminaton then the associated shadow map contents will not be computed.</p>\n\
<p>This method allows for plug-in writers to indicate that the shadow map contents for a given light are required, regardless of the light limit.</p>\n\
<p>The method does not force a shadow map evaluation, nor does it mark the shadow map contents as being dirty. Instead, the next time that shadow maps require updating, the renderer will only ensure that the shadow maps for the given light are recomputed as necessary.</p>\n\
<p>The contents of the shadow map may not always require an update. For example the light contents may already be up-to-date, or renderer options may indicate to not render with shadows enabled. In cases like this no additional action will be performed.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">object</td><td>Light to request shadow update for </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">flag</td><td>Indicate if an update is requested. When set to true a request is added, and when set false any existing request is removed.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if the method added or removed the request successfully </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example19\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example19-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example19-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/dx11_shader_2dx11_shader_8cpp-example.html#a411\">dx11Shader/dx11Shader.cpp</a>, <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/glsl_shader_2_g_l_s_l_shader_8cpp-example.html#a370\">glslShader/GLSLShader.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_render_override_shadows_2view_render_override_shadows_8cpp-example.html#a74\">viewRenderOverrideShadows/viewRenderOverrideShadows.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a837772824ffc712480bbd5e1d6fc355d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> addNotification </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a18e66af17b74186ceb66ff3ba3a216ef\">NotificationCallback</a>&#160;</td>\n\
          <td class=\"paramname\"><em>notification</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>name</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&#160;</td>\n\
          <td class=\"paramname\"><em>semanticLocation</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">void *&#160;</td>\n\
          <td class=\"paramname\"><em>clientData</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Add a notification callback to the rendering pipeline. </p>\n\
<p>If a notification with the same name and location has already been specified then no new notification will be added.</p>\n\
<p>For the common case, when no <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_override.html\" title=\"Base class for defining a rendering override. \">MRenderOverride</a> is specified, there will be one scene pass per render. The basic order of rendering would be: </p><ul>\n\
<li>\n\
Begin rendering, and invoke any notifications specified. </li>\n\
<li>\n\
Begin scene pass rendering, and invoke any notifications specified. </li>\n\
<li>\n\
End scene pass rendering, and invoke any notifications specified. </li>\n\
<li>\n\
End rendering, and invoke any notifications specified. </li>\n\
</ul>\n\
<p>If there are multiple scene passes for a given render then notifications specified using the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ad934a68929f94a0353d31cf5037edebf\" title=\"Semantic to indicate the start of rendering. See MRenderer::addNotification() for usage...\">MPassContext::kBeginRenderSemantic</a> semantic will occur before the execution of the first scene pass. This would occur just before any notifications associated with the <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ac014667cd1015f6ed2723003b2a8573e\" title=\"Semantic to indicate the beginning of scene draw pass. See MRenderer::addNotification() for usage...\">MPassContext::kBeginSceneRenderSemantic</a> semantic. The basic order of rendering would be: </p><ul>\n\
<li>\n\
Begin rendering. </li>\n\
<li>\n\
Loop for the number of scene passes: <ul>\n\
<li>\n\
If this is the first scene pass then invoke any notifications associated with the beginning of rendering. </li>\n\
<li>\n\
Begin the current scene pass rendering, and invoke any notifications specified. </li>\n\
<li>\n\
End the current scene pass rendering, and invoke any notifications specified. </li>\n\
</ul>\n\
</li>\n\
<li>\n\
End rendering, and invoke any notifications specified. </li>\n\
</ul>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">notification</td><td>Notification callback </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Unique name for the notification </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">semanticLocation</td><td>Location in pipeline to invoke callback from. The only valid values are currently: <ul>\n\
<li>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ad934a68929f94a0353d31cf5037edebf\" title=\"Semantic to indicate the start of rendering. See MRenderer::addNotification() for usage...\">MPassContext::kBeginRenderSemantic</a> : Indicates that the callback should be invoked before any rendering has occurred. </li>\n\
<li>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#ac014667cd1015f6ed2723003b2a8573e\" title=\"Semantic to indicate the beginning of scene draw pass. See MRenderer::addNotification() for usage...\">MPassContext::kBeginSceneRenderSemantic</a> : Indicates that the callback should be invoked before each scene render pass </li>\n\
<li>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a73be45b2fb0d7ad17652f9a0f98baa67\" title=\"Semantic to indicate the end of a scene draw pass. See MRenderer::addNotification() for usage...\">MPassContext::kEndSceneRenderSemantic</a> : Indicates that the callback should be invoked after each scene render pass </li>\n\
<li>\n\
<a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_pass_context.html#a780076ccaa2af55f6023c67eaed79fae\" title=\"Semantic to indicate the end of rendering. See MRenderer::addNotification() for usage. \">MPassContext::kEndRenderSemantic</a> : Indicates that the callback should be invoked after a render is completed but before displaying to an on-screen viewport. </li>\n\
</ul>\n\
</td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">clientData</td><td>Optional client data. The caller is responsible for maintaining this data.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a> if addition could not be performed </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example20\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example20-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example20-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a48\">blast2Cmd/blast2Cmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a77e2edb6cc80c86ac9531161ba7fbeec\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> removeNotification </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>name</em>, </td>\n\
        </tr>\n\
        <tr>\n\
          <td class=\"paramkey\"></td>\n\
          <td></td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>semanticLocation</em>&#160;</td>\n\
        </tr>\n\
        <tr>\n\
          <td></td>\n\
          <td>)</td>\n\
          <td></td><td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Remove a notification operation from the rendering pipeline. </p>\n\
<p>If a notification with the same name and semantic location exists then the notification will be removed.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">name</td><td>Name of the notification </td></tr>\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">semanticLocation</td><td>Location in the pipeline that the notification was added to. See <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\" title=\"Add a notification callback to the rendering pipeline. \">addNotification()</a>.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\" title=\"The operation failed. \">MStatus::kFailure</a> if removal could not be performed </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example21\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example21-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example21-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a53\">blast2Cmd/blast2Cmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9b70d56be167875329139c9e10a1b706\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">unsigned int notificationCount </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">const <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;&#160;</td>\n\
          <td class=\"paramname\"><em>semanticLocation</em></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the number of notifications that have been set for a given semantic location. </p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">semanticLocation</td><td>Location in the pipeline that the notification was added to. See <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a837772824ffc712480bbd5e1d6fc355d\" title=\"Add a notification callback to the rendering pipeline. \">addNotification()</a>.</td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Notification count </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a9506cd979adc61c78966a30b90e3928d\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool presentOnScreen </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns whether the contents rendered by VP2 will be presented to on-screen buffers when running Maya in interactive mode. </p>\n\
<p>By default Maya will always update on-screen buffers when in interactive mode.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Whether presentation is enabled. </dd></dl>\n\
\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a7c573fb11faf512577e6f4e64893f026\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">void setPresentOnScreen </td>\n\
          <td>(</td>\n\
          <td class=\"paramtype\">bool&#160;</td>\n\
          <td class=\"paramname\"><em>val</em></td><td>)</td>\n\
          <td></td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Set whether the contents rendered by VP2 will be presented to on-screen buffers when running Maya in interactive mode. </p>\n\
<p>This option will take effect on the next refresh of an on-screen buffer.</p>\n\
<dl class=\"params\"><dt>Parameters</dt><dd>\n\
  <table class=\"params\">\n\
    <tr><td class=\"paramdir\">[in]</td><td class=\"paramname\">val</td><td>Presentation option. </td></tr>\n\
  </table>\n\
  </dd>\n\
</dl>\n\
<dl class=\"section \"><div id=\"dynsection-example22\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example22-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example22-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/blast2_cmd_2blast2_cmd_8cpp-example.html#a50\">blast2Cmd/blast2Cmd.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a0a37f5441ac2ecc2683c434a77e93234\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\">bool useGradient </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns whether a gradient is being used to clear the background color. </p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>True if using gradient </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example23\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example23-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example23-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a14\">viewMRenderOverride/viewMRenderOverride.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_8cpp-example.html#a11\">viewOverrideSimple/viewOverrideSimple.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"a1f60fa4b3321b445538ed712fa85f493\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> clearColor </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Returns the first clear color. </p>\n\
<p>This will be the color used at the top of the background gradient if a color gradient is specified.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Clear color </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example24\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example24-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example24-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a16\">viewMRenderOverride/viewMRenderOverride.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_8cpp-example.html#a13\">viewOverrideSimple/viewOverrideSimple.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<a class=\"anchor\" id=\"acd95ff3a7742eccf81c361a2a57761f8\"></a>\n\
<div class=\"memitem\">\n\
<div class=\"memproto\">\n\
      <table class=\"memname\">\n\
        <tr>\n\
          <td class=\"memname\" translate=\"no\"><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> clearColor2 </td>\n\
          <td>(</td>\n\
          <td class=\"paramname\"></td><td>)</td>\n\
          <td> const</td>\n\
        </tr>\n\
      </table>\n\
</div><div class=\"memdoc\">\n\
\n\
<p>Return the second clear color. </p>\n\
<p>This will be the color used at the botom of the background gradient if a color gradient is specified.</p>\n\
<dl class=\"section return\"><dt>Returns</dt><dd>Clear color </dd></dl>\n\
<dl class=\"section \"><div id=\"dynsection-example25\" class=\"dynheader closed\" onclick=\"return toggleVisibility(this)\" style=\"cursor:pointer;\"><dt><img id=\"dynsection-example25-trigger\" src=\"cpp_ref/closed.png\" alt=\"+\"> <b>Examples: </b></dt></div><div id=\"dynsection-example25-content\" class=\"dyncontent\" style=\"display:none;\"><dd><a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_m_render_override_2view_m_render_override_8cpp-example.html#a17\">viewMRenderOverride/viewMRenderOverride.cpp</a>, and <a class=\"el\" translate=\"no\" href=\"#!/url=./cpp_ref/view_override_simple_2view_override_simple_8cpp-example.html#a14\">viewOverrideSimple/viewOverrideSimple.cpp</a>.</dd></div>\n\
</dl>\n\
</div>\n\
</div>\n\
<hr>The documentation for this class was generated from the following files:<ul>\n\
<li>MViewport2Renderer.h</li>\n\
<li>MViewport2Renderer.cpp</li>\n\
</ul>\n\
</div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";