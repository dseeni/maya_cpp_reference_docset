var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2016\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2015-10-14\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>hwToonShader_NV20/hwToonShader_NV20.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'hw_toon_shader__n_v20_2hw_toon_shader__n_v20_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?siteData=y5CYlxTRD0znCzRLDwX0Wy7-g1EdC1XA4dSC-Y1LtaeScyli8_Ps5jPKqTr4xKxMI0OOUfkDplvX3uxN0JnPclebSYW8_J1HBzf4VLQEzQ8M4PsYXF_cMyp1Oumaetky&category=5297189e-446b-459e-ae1d-9d0360400781_tech&ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'position:absolute;right:20px;top:5px;z-index:100;color:white;background-color:#555555;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>hwToonShader_NV20/hwToonShader_NV20.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">hwToonShader_NV20/hwToonShader_NV20.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All </span></div>\n\
<div class=\"line\"><span class=\"comment\">// rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The coded instructions, statements, computer programs, and/or related </span></div>\n\
<div class=\"line\"><span class=\"comment\">// material (collectively the &quot;Data&quot;) in these files contain unpublished </span></div>\n\
<div class=\"line\"><span class=\"comment\">// information proprietary to Autodesk, Inc. (&quot;Autodesk&quot;) and/or its </span></div>\n\
<div class=\"line\"><span class=\"comment\">// licensors, which is protected by U.S. and Canadian federal copyright </span></div>\n\
<div class=\"line\"><span class=\"comment\">// law and by international treaties.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The Data is provided for use exclusively by You. You have the right </span></div>\n\
<div class=\"line\"><span class=\"comment\">// to use, modify, and incorporate this Data into other products for </span></div>\n\
<div class=\"line\"><span class=\"comment\">// purposes authorized by the Autodesk software license agreement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// without fee.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The copyright notices in the Software and this entire statement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// including the above license grant, this restriction and the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// following disclaimer, must be included in all copies of the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Software, in whole or in part, and all derivative works of </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the Software, unless such copies or derivative works are solely </span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the form of machine-executable object code generated by a </span></div>\n\
<div class=\"line\"><span class=\"comment\">// source language processor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED </span></div>\n\
<div class=\"line\"><span class=\"comment\">// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF </span></div>\n\
<div class=\"line\"><span class=\"comment\">// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS </span></div>\n\
<div class=\"line\"><span class=\"comment\">// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY </span></div>\n\
<div class=\"line\"><span class=\"comment\">// OR PROBABILITY OF SUCH DAMAGES.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// NOTE: PLEASE READ THE README.TXT FILE FOR INSTRUCTIONS ON</span></div>\n\
<div class=\"line\"><span class=\"comment\">// COMPILING AND USAGE REQUIREMENTS.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: NV20-specific (Geforce3) sample shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              This shader is meant to allow cartoon-like effects.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              It allows the user to specify a base decal texture,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              and a lighting look-up texture.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This shader builds on the foundation demonstrated in the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  hwUnlitShader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Uncomment the #ifdef below if you want to debug the vertex program by</span></div>\n\
<div class=\"line\"><span class=\"comment\">// output a COL0 value that corresponds to an intermediate calculation.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The only sane way we could find to debug that thing.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//#define DEBUGGING_VERTEX_PROGRAM 1</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable : 4786 )       // Disable STL warnings.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArrayDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLightDataAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLight.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnStringData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSceneMessage.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEulerRotation.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNonAmbientLight.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Include NVIDIA&#39;s helper libraries.  These libraries have</span></div>\n\
<div class=\"line\"><span class=\"comment\">// copyright info in them so we cannot release them but we</span></div>\n\
<div class=\"line\"><span class=\"comment\">// can use them to verify that the API works correctly.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/gl.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/glu.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/glext.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GLH_EXT_SINGLE_FILE</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;glh_extensions.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#undef GL_NV_vertex_array_range</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;glh_genext.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;glh_obs.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>glh;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;hwToonShader_NV20.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;ShadingConnection.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> hwToonShader_NV20::id( 0x00105443 );</div>\n\
<div class=\"line\"><span class=\"comment\">/*static*/</span> <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> hwToonShader_NV20::lookup_texture_size(256);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::postConstructor( )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setMPSafe(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Static attribute instances.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::color;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::colorR;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::colorG;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::colorB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightModel;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightModelR;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightModelG;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightModelB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::camera;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::cameraX;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::cameraY;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::cameraZ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uCoord;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::vCoord;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uvCoord;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uBias;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::vBias;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uvFilterSize;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uvFilterSizeX;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::uvFilterSizeY;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::shininess;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightColor;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightColorR;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightColorG;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwToonShader_NV20::lightColorB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::printGlError( <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *call )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GLenum error;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>( (error = glGetError()) != GL_NO_ERROR ) {</div>\n\
<div class=\"line\">        assert(0);</div>\n\
<div class=\"line\">        cerr &lt;&lt; call &lt;&lt; <span class=\"stringliteral\">&quot;:&quot;</span> &lt;&lt; error &lt;&lt; <span class=\"stringliteral\">&quot; is &quot;</span> &lt;&lt; (<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *)gluErrorString( error ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The Vertex Program for the textured-light-model shading effect.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Meant to be used as a cartoon shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CONSTANTS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  0- 3  4x4 ModelView-Projection composite matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  4- 7  4x4 ModelView matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  8-10  light amb/diff/spec</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 11     light dir vector (from surface to light, in object space)</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 12     camera position in object space (possibly not normalized)</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// VERTEX REGISTERS (mapped so that standard gl calls work):</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 2 - normal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 3 - primary color</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 8 - texcoord0 (lighting look-up table)</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 9 - texcoord1 (decal, optional)</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// REGISTERS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// R0 - normalized view (surface-to-camera) direction in object space.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// R1 - normalized surface normal in object space.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// R2 - normalized light (surface-to-light) direction.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> vertexProgramString[] = </div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;!!VP1.0\\n&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Multiply the vertex coords by the modelview-projection composite matrix,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to get clip space coordinates.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].x, c[0], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].y, c[1], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].z, c[2], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].w, c[3], v[0];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Normalize the N (normal), in case the modelview matrix is not a simple rotation.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV   R1, v[2];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R1.w, R1, R1;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R1.w, R1.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R1.xyz, R1, R1.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Normalize the L (light) direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV   R2, c[11];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R2.w, R2, R2;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R2.w, R2.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R2.xyz, R2, R2.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The vertex position, normal and light positions are expressed in object space at</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// this point. We need to find the view direction in object space too.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;ADD   R0, c[12], -v[0];&quot;</span>       <span class=\"comment\">// view direction, from surface to camera.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R0.w, R0, R0;&quot;</span>           <span class=\"comment\">// normalize the view direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R0.w, R0.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R0.xyz, R0, R0.w;&quot;</span></div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// Find the texture coordinates to fetch from the toon-param texture.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// u = N dot L.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// v = N dot V.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].x, R1, R2;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].y, R1, R0;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Move the texture coordinates from tex 1 if appropriate.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[TEX1], v[9];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef DEBUGGING_VERTEX_PROGRAM</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Put diffuse lighting into color.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL o[COL0], v[3], c[9];&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// VISUALIZE VECTOR</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[COL0], R2;&quot;</span>  <span class=\"comment\">// normalized light</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif      </span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;END&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> vertexProgramStringPoint[] = </div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;!!VP1.0\\n&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Multiply the vertex coords by the modelview-projection composite matrix,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to get clip space coordinates.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].x, c[0], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].y, c[1], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].z, c[2], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].w, c[3], v[0];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Normalize the N (normal), in case the modelview matrix is not a simple rotation.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV   R1, v[2];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R1.w, R1, R1;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R1.w, R1.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R1.xyz, R1, R1.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute normalize the L (light) direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;ADD   R2, c[11], -v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R2.w, R2, R2;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R2.w, R2.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R2.xyz, R2, R2.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The vertex position, normal and light positions are expressed in object space at</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// this point. We need to find the view direction in object space too.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;ADD   R0, c[12], -v[0];&quot;</span>       <span class=\"comment\">// view direction, from surface to camera.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R0.w, R0, R0;&quot;</span>           <span class=\"comment\">// normalize the view direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R0.w, R0.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R0.xyz, R0, R0.w;&quot;</span></div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// Find the texture coordinates to fetch from the toon-param texture.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// u = N dot L.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// v = N dot V.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].x, R1, R2;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].y, R1, R0;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Move the texture coordinates from tex 1 if appropriate.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[TEX1], v[9];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef DEBUGGING_VERTEX_PROGRAM</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Put diffuse lighting into color.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL o[COL0], v[3], c[9];&quot;</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      &quot;MOV o[COL0], c[9];&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// VISUALIZE VECTOR</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[COL0], R2;&quot;</span>  <span class=\"comment\">// normalized light</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif      </span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;END&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> vertexProgramStringPointDecay[] = </div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;!!VP1.0\\n&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Multiply the vertex coords by the modelview-projection composite matrix,</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to get clip space coordinates.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].x, c[0], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].y, c[1], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].z, c[2], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].w, c[3], v[0];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Normalize the N (normal), in case the modelview matrix is not a simple rotation.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV   R1, v[2];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R1.w, R1, R1;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R1.w, R1.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R1.xyz, R1, R1.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute normalize the L (light) direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;ADD   R2, c[11], -v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R2.w, R2, R2;&quot;</span>           </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R2.w, R2.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R2.xyz, R2, R2.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The vertex position, normal and light positions are expressed in object space at</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// this point. We need to find the view direction in object space too.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;ADD   R0, c[12], -v[0];&quot;</span>       <span class=\"comment\">// view direction, from surface to camera.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R0.w, R0, R0;&quot;</span>           <span class=\"comment\">// normalize the view direction.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;RSQ   R0.w, R0.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL   R0.xyz, R0, R0.w;&quot;</span></div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// Find the texture coordinates to fetch from the toon-param texture.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// u = N dot L.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// v = N dot V.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].x, R1, R2;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX0].y, R1, R0;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Move the texture coordinates from tex 1 if appropriate.</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[TEX1], v[9];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef DEBUGGING_VERTEX_PROGRAM</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Multiply diffuse lighting into material color.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Take into account decay</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV R4, c[9];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV R5, c[9];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL R5.xyz, R4, R2.w;&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MUL o[COL0], v[3], R5;&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// VISUALIZE VECTOR</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[COL0], R2;&quot;</span>  <span class=\"comment\">// normalized light</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif      </span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;END&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> initVertexProgram(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> vertexProgramCode[], GLuint* pVertexProgramId)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Allocate and initialize the vertex program.</span></div>\n\
<div class=\"line\">    glGenProgramsNV(1, pVertexProgramId);</div>\n\
<div class=\"line\">    GLenum error = glGetError();</div>\n\
<div class=\"line\">    assert(error == GL_NO_ERROR);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Load the program.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> length = strlen(vertexProgramCode);</div>\n\
<div class=\"line\">    glLoadProgramNV(GL_VERTEX_PROGRAM_NV, *pVertexProgramId, length, </div>\n\
<div class=\"line\">        (<span class=\"keyword\">const</span> GLubyte *) vertexProgramCode);</div>\n\
<div class=\"line\">    error = glGetError();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If an error occured, find the location in the vertex program</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// code and assert.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (error != GL_NO_ERROR)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If an error occured, it&#39;s most likely due to a syntax or </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// logic error in the vertex program. The error position</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// below will contain the index in the vertex program</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// string that is faulty. See the NV_vertex_program</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// extension specification for more details.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (error == GL_INVALID_OPERATION)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> error_position = -2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glGetIntegerv(GL_PROGRAM_ERROR_POSITION_NV, &amp;error_position);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Most likely a bug in the vertex program code...</span></div>\n\
<div class=\"line\">            assert(0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Load the vertexProgram and fill in the necessary constants used in the vertex program.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::loadVertexProgramGL()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GLenum error = glGetError();</div>\n\
<div class=\"line\">    assert(!error);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If the vertex programs haven&#39;t been loaded yet,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// do it now. (Note that they are shared between all contexts.)</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!fVertexProgramsLoaded)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        initVertexProgram(vertexProgramString, &amp;fVertexProgramDirectional);</div>\n\
<div class=\"line\">        initVertexProgram(vertexProgramStringPointDecay, &amp;fVertexProgramPointDecay);</div>\n\
<div class=\"line\">        initVertexProgram(vertexProgramStringPoint, &amp;fVertexProgramPointNoDecay);</div>\n\
<div class=\"line\">        fVertexProgramsLoaded = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up the constant values.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// CONSTANTS:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  0- 3  4x4 ModelView-Projection composite matrix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  4- 7  4x4 ModelView  matrix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  8-10  light amb/diff/spec</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 11     light dir vector (from surface to light)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glTrackMatrixNV(GL_VERTEX_PROGRAM_NV, 0, GL_MODELVIEW_PROJECTION_NV, GL_IDENTITY_NV);</div>\n\
<div class=\"line\">    glTrackMatrixNV(GL_VERTEX_PROGRAM_NV, 4, GL_MODELVIEW, GL_IDENTITY_NV);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 8, 1, 1, 1, 1);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 9, 1, 1, 1, 1);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 10, 1, 1, 1, 1);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 11, -lightRotation[0], -lightRotation[1], -lightRotation[2], 0);   <span class=\"comment\">// light dir...</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::bind_lookup_table()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"comment\">//  make_lookup_texture();</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lookup_texture-&gt;bind();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fLookupTextureReprocessed)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE_ALPHA, lookup_texture_size, lookup_texture_size, 0, GL_LUMINANCE_ALPHA, GL_UNSIGNED_BYTE, lookup_table); </div>\n\
<div class=\"line\">        fLookupTextureReprocessed = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lookup_texture-&gt;parameter(GL_TEXTURE_MIN_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">    lookup_texture-&gt;parameter(GL_TEXTURE_MAG_FILTER, GL_LINEAR);</div>\n\
<div class=\"line\">    lookup_texture-&gt;parameter(GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">    lookup_texture-&gt;parameter(GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Initialize the necessary OpenGL extensions</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::init_ext(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> * ext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!glh_init_extension(ext))</div>\n\
<div class=\"line\">    { cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to initialize &quot;</span> &lt;&lt; ext &lt;&lt; <span class=\"stringliteral\">&quot;!&quot;</span> &lt;&lt; endl; exit(0); }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwToonShader_NV20::hwToonShader_NV20()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get an reference to the singleton texture cache.</span></div>\n\
<div class=\"line\">    m_pTextureCache = MTextureCache::instance();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_ARB_multitexture&quot;</span>);</div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_NV_register_combiners&quot;</span>);</div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_NV_vertex_program&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    isDirectionalLight = <span class=\"keyword\">true</span>;  <span class=\"comment\">// light&#39;s rotation is connected to the lightRotation attr</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the shininess and shininess scale to absurd values, so that the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// look-up table automatically get recomputed during the first update.</span></div>\n\
<div class=\"line\">    currentShininessValue = -1.0;</div>\n\
<div class=\"line\">    currentShininessScale = -1.0;</div>\n\
<div class=\"line\">    lookup_texture = NULL;</div>\n\
<div class=\"line\">    lookup_table   = NULL;</div>\n\
<div class=\"line\">    fLookupTextureReprocessed = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize callbacks.</span></div>\n\
<div class=\"line\">    fBeforeNewCB = 0;</div>\n\
<div class=\"line\">    fBeforeOpenCB = 0;</div>\n\
<div class=\"line\">    fBeforeRemoveReferenceCB = 0;</div>\n\
<div class=\"line\">    fMayaExitingCB = 0;</div>\n\
<div class=\"line\">    attachSceneCallbacks();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Initialize the vertex program ids...</span></div>\n\
<div class=\"line\">    fVertexProgramsLoaded = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    fVertexProgramDirectional = 0;</div>\n\
<div class=\"line\">    fVertexProgramPointDecay = 0;</div>\n\
<div class=\"line\">    fVertexProgramPointNoDecay = 0;</div>\n\
<div class=\"line\">    <span class=\"comment\">// All vertex programs will get allocated and loaded</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// during the first refresh.</span></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwToonShader_NV20::~hwToonShader_NV20()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    detachSceneCallbacks();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> releaseVertexProgram(GLuint* pVertexProgramId)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// If the vertex program id is set...</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (*pVertexProgramId &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Unbind any vertex program...</span></div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDeleteProgramsNV(1, pVertexProgramId);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// For sanity, set the id to 0.</span></div>\n\
<div class=\"line\">        *pVertexProgramId = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::releaseEverything()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    release_lookup_texture();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Release all loaded vertex programs.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fVertexProgramsLoaded)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        releaseVertexProgram(&amp;fVertexProgramDirectional);</div>\n\
<div class=\"line\">        releaseVertexProgram(&amp;fVertexProgramPointDecay);</div>\n\
<div class=\"line\">        releaseVertexProgram(&amp;fVertexProgramPointNoDecay);</div>\n\
<div class=\"line\">        fVertexProgramsLoaded = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Release the texture cache through refcounting.</span></div>\n\
<div class=\"line\">    m_pTextureCache-&gt;release();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!MTextureCache::getReferenceCount())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_pTextureCache = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::attachSceneCallbacks()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fBeforeNewCB  = <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaaf261bc0d5929af12c193ee3c6e451349\">MSceneMessage::kBeforeNew</a>,  releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fBeforeOpenCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaac4fe9e5e85e4e962ca0366226b012d6f\">MSceneMessage::kBeforeOpen</a>, releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fBeforeRemoveReferenceCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa2f6e3664b31d62f64c1b3c68d6373f26\">MSceneMessage::kBeforeRemoveReference</a>, </div>\n\
<div class=\"line\">                                                          releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fMayaExitingCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa1efff7ad75eeef5a2ac9e3c0e890dbd0\">MSceneMessage::kMayaExiting</a>, releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*static*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::releaseCallback(<span class=\"keywordtype\">void</span>* clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    hwToonShader_NV20 *pThis = (hwToonShader_NV20*) clientData;</div>\n\
<div class=\"line\">    pThis-&gt;releaseEverything();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::detachSceneCallbacks()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeNewCB)</div>\n\
<div class=\"line\">        <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeNewCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeOpenCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeOpenCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeRemoveReferenceCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeRemoveReferenceCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fMayaExitingCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fMayaExitingCB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fBeforeNewCB = 0;</div>\n\
<div class=\"line\">    fBeforeOpenCB = 0;</div>\n\
<div class=\"line\">    fBeforeRemoveReferenceCB = 0;</div>\n\
<div class=\"line\">    fMayaExitingCB = 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;shader/surface/utility&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.5&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;hwToonShader_NV20&quot;</span>, hwToonShader_NV20::id, </div>\n\
<div class=\"line\">                                  hwToonShader_NV20::creator, hwToonShader_NV20::initialize,</div>\n\
<div class=\"line\">                                  <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee2b86760284068eef3c463f9de9babc\">MPxNode::kHwShaderNode</a>, &amp;UserClassify );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    plugin.deregisterNode( hwToonShader_NV20::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> * hwToonShader_NV20::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> hwToonShader_NV20();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Initialize the plug-in. Called once when the plug-in is loaded.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// This mostly involve creating attributes.</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> sAttr; <span class=\"comment\">// For string attributes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create input attributes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorR = nAttr.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorR&quot;</span>, <span class=\"stringliteral\">&quot;cr&quot;</span>,<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorG = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorG&quot;</span>, <span class=\"stringliteral\">&quot;cg&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorB = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorB&quot;</span>, <span class=\"stringliteral\">&quot;cb&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    color = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;color&quot;</span>, <span class=\"stringliteral\">&quot;c&quot;</span>, colorR, colorG, colorB);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f, 0.5f, 0.5f);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a4a44548ca2e5b1e7613a992a6b96a147\">setUsedAsColor</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightModelR = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightModelR&quot;</span>, <span class=\"stringliteral\">&quot;c2r&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightModelG = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightModelG&quot;</span>, <span class=\"stringliteral\">&quot;c2g&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightModelB = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightModelB&quot;</span>, <span class=\"stringliteral\">&quot;c2b&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightModel = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightModel&quot;</span>, <span class=\"stringliteral\">&quot;c2&quot;</span>, lightModelR, lightModelG, lightModelB);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f, 1.0f, 1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a4a44548ca2e5b1e7613a992a6b96a147\">setUsedAsColor</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uCoord&quot;</span>, <span class=\"stringliteral\">&quot;u&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    vCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vCoord&quot;</span>, <span class=\"stringliteral\">&quot;v&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">    uvCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvCoord&quot;</span>,<span class=\"stringliteral\">&quot;uv&quot;</span>, uCoord, vCoord);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f, 0.5f );</div>\n\
<div class=\"line\">    nAttr.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uBias&quot;</span>, <span class=\"stringliteral\">&quot;bu&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0.0f);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    vBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vBias&quot;</span>, <span class=\"stringliteral\">&quot;bv&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSizeX = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeX&quot;</span>, <span class=\"stringliteral\">&quot;fsx&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSizeY = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeY&quot;</span>, <span class=\"stringliteral\">&quot;fsy&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSize = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;uvFilterSize&quot;</span>,<span class=\"stringliteral\">&quot;fs&quot;</span>,uvFilterSizeX,uvFilterSizeY);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cameraX = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;cameraX&quot;</span>, <span class=\"stringliteral\">&quot;camx&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cameraY = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;cameraY&quot;</span>, <span class=\"stringliteral\">&quot;camy&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    cameraZ = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;cameraZ&quot;</span>, <span class=\"stringliteral\">&quot;camz&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    camera = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;camera&quot;</span>, <span class=\"stringliteral\">&quot;cam&quot;</span>, cameraX, cameraY, cameraZ);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.0f, 0.0f, 1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    shininess = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;shininess&quot;</span>, <span class=\"stringliteral\">&quot;sn&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightColorR = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightColorR&quot;</span>, <span class=\"stringliteral\">&quot;lcr&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightColorG = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightColorG&quot;</span>, <span class=\"stringliteral\">&quot;lcg&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightColorB = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightColorB&quot;</span>, <span class=\"stringliteral\">&quot;lcb&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    lightColor = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;lightColor&quot;</span>, <span class=\"stringliteral\">&quot;lc&quot;</span>, lightColorR, lightColorG, lightColorB);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f, 1.0f, 1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a4a44548ca2e5b1e7613a992a6b96a147\">setUsedAsColor</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"> <span class=\"comment\">// Add the attributes here</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(color);</div>\n\
<div class=\"line\">    addAttribute(lightModel);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uvCoord);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uBias);</div>\n\
<div class=\"line\">    addAttribute(vBias);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uvFilterSize);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(camera);</div>\n\
<div class=\"line\">    addAttribute(shininess);</div>\n\
<div class=\"line\">    addAttribute(lightColor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attributeAffects (colorR, outColor);</div>\n\
<div class=\"line\">    attributeAffects (colorG, outColor);</div>\n\
<div class=\"line\">    attributeAffects (colorB, outColor);</div>\n\
<div class=\"line\">    attributeAffects (color,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightModelR, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightModelG, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightModelB, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightModel,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (uCoord,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (vCoord,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (uvCoord, outColor);</div>\n\
<div class=\"line\">    attributeAffects (uBias,   outColor);</div>\n\
<div class=\"line\">    attributeAffects (vBias,   outColor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attributeAffects (cameraX,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (cameraY,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (cameraZ,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (camera,   outColor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attributeAffects (shininess,   outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightColorR, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightColorG, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightColorB, outColor);</div>\n\
<div class=\"line\">    attributeAffects (lightColor,  outColor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// This function gets called by Maya to evaluate the texture.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// See &quot;Writing a shading node plug-in&quot; in the documentation</span></div>\n\
<div class=\"line\"><span class=\"comment\">// for more information.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::compute(</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;      plug,</div>\n\
<div class=\"line\">      <a name=\"_a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block ) </div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// Get color and lightModel from the input block.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get UV coordinates from the input block.</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> k = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    k |= (plug==outColor);</div>\n\
<div class=\"line\">    k |= (plug==outColorR);</div>\n\
<div class=\"line\">    k |= (plug==outColorG);</div>\n\
<div class=\"line\">    k |= (plug==outColorB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !k ) <span class=\"keywordflow\">return</span> <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a7f858db05022c8bc860d685e13bab6ae\">MS::kUnknownParameter</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> resultColor(0.0,0.0,0.0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>&amp;  u = block.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( uCoord ).<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>&amp;  v = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( vCoord ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>&amp; bu = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( uBias ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>&amp; bv = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( vBias ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( bu &lt;= 0.0 ) bu = 0.001f;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( bv &lt;= 0.0 ) bv = 0.001f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; surfaceColor  = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( color ).<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; surfaceColor2 = block.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a>( lightModel ).<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// normalize the UV coords</span></div>\n\
<div class=\"line\">    u = u - int(u);</div>\n\
<div class=\"line\">    v = v - int(v);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    resultColor = surfaceColor;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set ouput color attribute</span></div>\n\
<div class=\"line\">    <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outColorHandle = block.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( outColor );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; outColor = outColorHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    outColor = resultColor;</div>\n\
<div class=\"line\">    outColorHandle.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a7bdd61b8405188bb547fdba3fddace91\">setClean</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// To get 3 float values from the node attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::getFloat3(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <span class=\"keywordtype\">float</span> value[3])</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the attr to use</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   plug(thisMObject(), attr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> object;</div>\n\
<div class=\"line\">    status = plug.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(<span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwToonShader_NV20::getFloat3 plug.getValue.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html\">MFnNumericData</a> data(<span class=\"keywordtype\">object</span>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwToonShader_NV20::getFloat3 construct data.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = data.getData(value[0], value[1], value[2]);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwToonShader_NV20::getFloat3 get values.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// To get a string value from the node attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::getString(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;str)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   plug(thisMObject(), attr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = plug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>( str );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::bind(<span class=\"keyword\">const</span> <a name=\"_a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request, <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the decal and lightModel map file names</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> decalName = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> lightModelName  = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ShadingConnection colorConnection(thisMObject(), request.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>(), <span class=\"stringliteral\">&quot;color&quot;</span>);</div>\n\
<div class=\"line\">    ShadingConnection lightModelConnection (thisMObject(), request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>(), <span class=\"stringliteral\">&quot;lightModel&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If the lightModel attribute is ultimately connected to a file texture, find its filename.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// otherwise use the default lightModel texture.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (lightModelConnection.type() == ShadingConnection::TEXTURE &amp;&amp;</div>\n\
<div class=\"line\">        lightModelConnection.texture().hasFn(<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7ac3bee92500cdc3a4ccbec4cb35e91f2a\">MFn::kFileTexture</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the filename of the texture.</span></div>\n\
<div class=\"line\">        <a name=\"_a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> textureNode(lightModelConnection.texture());</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> filenamePlug( lightModelConnection.texture(), textureNode.attribute(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;fileTextureName&quot;</span>)) );</div>\n\
<div class=\"line\">        filenamePlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(lightModelName);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Fail safe quit</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (lightModelName.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        view.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\">        glPushAttrib( GL_ALL_ATTRIB_BITS );     <span class=\"comment\">// This might be too conservative</span></div>\n\
<div class=\"line\">        glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\">        glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE);</div>\n\
<div class=\"line\">        glEnable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\">        glColor4f(1.0f, 1.0f, 1.0f, 1.0f);</div>\n\
<div class=\"line\">        view.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPushAttrib( GL_ALL_ATTRIB_BITS );</div>\n\
<div class=\"line\">    glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">/* Starts Here... */</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// stage 0 -- lighting model texture</span></div>\n\
<div class=\"line\">    glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">    glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(m_pTextureCache)</div>\n\
<div class=\"line\">        m_pTextureCache-&gt;bind(lightModelConnection.texture(), MTexture::RGBA, <span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// With light color and intensity</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (colorConnection.type() != ShadingConnection::TEXTURE)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> color = colorConnection.constantColor();</div>\n\
<div class=\"line\">        glColor4f(color.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>, color.<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a>, color.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a>, color.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4aec1a5be9d9a4a394a2e49e9744286e\">a</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// The register combiner will do the multiplication between</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the fetched light model result and the base (vertex or decal-textured) color</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glEnable(GL_REGISTER_COMBINERS_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glCombinerParameteriNV(GL_NUM_GENERAL_COMBINERS_NV, 1);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> constColor0[4];</div>\n\
<div class=\"line\">    constColor0[0] = constColor0[1] = constColor0[2] = constColor0[3] = 1.0;</div>\n\
<div class=\"line\">    glCombinerParameterfvNV(GL_CONSTANT_COLOR0_NV, constColor0);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef DEBUGGING_VERTEX_PROGRAM</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Combiner stage 0 does the illumination modulation on the vertex color</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_A_NV, GL_PRIMARY_COLOR_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_B_NV, GL_TEXTURE0_ARB, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_C_NV, GL_TEXTURE0_ARB, GL_UNSIGNED_IDENTITY_NV, GL_ALPHA);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_D_NV, GL_TEXTURE0_ARB, GL_UNSIGNED_IDENTITY_NV, GL_ALPHA);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glCombinerOutputNV(GL_COMBINER0_NV, GL_RGB, GL_SPARE1_NV, GL_DISCARD_NV, GL_DISCARD_NV, </div>\n\
<div class=\"line\">                       GL_NONE, GL_NONE, GL_FALSE, GL_FALSE, GL_FALSE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Simplified register combiners to help debugging vertex program.</span></div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_A_NV, GL_PRIMARY_COLOR_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_B_NV, GL_CONSTANT_COLOR0_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_C_NV, GL_TEXTURE0_ARB, GL_UNSIGNED_IDENTITY_NV, GL_ALPHA);</div>\n\
<div class=\"line\">    glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_D_NV, GL_TEXTURE3_ARB, GL_UNSIGNED_IDENTITY_NV, GL_ALPHA);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glCombinerOutputNV(GL_COMBINER0_NV, GL_RGB, GL_SPARE1_NV, GL_DISCARD_NV, GL_DISCARD_NV, </div>\n\
<div class=\"line\">                       GL_NONE, GL_NONE, GL_FALSE, GL_FALSE, GL_FALSE);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif // DEBUGGING_VERTEX_PROGRAM</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// The final Combiner just pass through. May want to add fog later.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glFinalCombinerInputNV(GL_VARIABLE_A_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glFinalCombinerInputNV(GL_VARIABLE_B_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glFinalCombinerInputNV(GL_VARIABLE_C_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">    glFinalCombinerInputNV(GL_VARIABLE_D_NV, GL_SPARE1_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::unbind(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    glDisable(GL_REGISTER_COMBINERS_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">    glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPopClientAttrib();</div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwToonShader_NV20::geometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// We assume triangles here.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (prim != GL_TRIANGLES)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;        </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find out if we have a directional light before</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// loading the vertex program since we use a different</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// vertex program depending on whether the light is a directional</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// one or not</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    isDirectionalLight = <span class=\"keyword\">true</span>; <span class=\"comment\">// Assume is directional</span></div>\n\
<div class=\"line\">    isNonAmbientLight = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">boolean</span> useDefaultLight = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numLights;</div>\n\
<div class=\"line\">    <a name=\"_a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> lightPath;</div>\n\
<div class=\"line\">    view.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a6d7dd7077570a84fb10857346d4dfabb\">getLightCount</a>( numLights );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numLights)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a3cea85bd9127b51d9ff35de2ffc9ca33\">M3dView::LightingMode</a> mode;</div>\n\
<div class=\"line\">        view.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a81510d35bc4111a82aeb9eed2fd1e1d3\">getLightingMode</a>(mode);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mode == <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a3cea85bd9127b51d9ff35de2ffc9ca33ac5583c23e915ab5ba507cd5a016afade\">M3dView::kLightDefault</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            useDefaultLight = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            isDirectionalLight = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            view.<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#af34e92a608e2075a00f0e02ec5a9a348\">getLightPath</a>( 0, lightPath );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> lightObj = lightPath.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ad1aa507eb8e63e89e8d46a0abc18aa8c\">node</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            isDirectionalLight = lightObj.<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>( <a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7adaca767aff665cd113008801c67f76ce\">MFn::kDirectionalLight</a> );</div>\n\
<div class=\"line\">            isNonAmbientLight = lightObj.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>( <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a89c35717b248c2a27025f3f7569e466c\">MFn::kNonAmbientLight</a> );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (isNonAmbientLight)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_non_ambient_light.html\">MFnNonAmbientLight</a> mNonAmbientLight(lightObj);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (mNonAmbientLight.decayRate() == 0)</div>\n\
<div class=\"line\">                    isNonAmbientLight = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    loadVertexProgramGL();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Bind and enable the appropriate vertex program,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// depending on light type.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (isDirectionalLight)</div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, fVertexProgramDirectional);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (isNonAmbientLight)</div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, fVertexProgramPointDecay);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, fVertexProgramPointNoDecay);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Assert if an error occurs after binding the vertex programs.</span></div>\n\
<div class=\"line\">    GLenum error = glGetError();</div>\n\
<div class=\"line\">    assert(error == GL_NO_ERROR);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable the vertex program.</span></div>\n\
<div class=\"line\">    glEnable(GL_VERTEX_PROGRAM_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get object&#39;s inverse matrix (ie: from world to object space.)</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> objPath = request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>();</div>\n\
<div class=\"line\">    <a name=\"_a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> objMatrix = objPath.<a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a63405f44451dc83c36ac538c4470b67c\">inclusiveMatrixInverse</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the light direction in object space.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This code assumes that there is a directional light in the scene,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and that it is the first light in DAG order.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (numLights)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Handle default lighting mode</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (useDefaultLight )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Provide the direction to the vertex program (constant 11)</span></div>\n\
<div class=\"line\">            glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 11, 0, 0, 1, 1);</div>\n\
<div class=\"line\">            glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 9, 1,1,1,1);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#af34e92a608e2075a00f0e02ec5a9a348\">getLightPath</a>( 0, lightPath );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> matrix = lightPath.<a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            isDirectionalLight = lightPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ad1aa507eb8e63e89e8d46a0abc18aa8c\">node</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af0af77f14f96d1134fb8e8e60dc7e420\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7adaca767aff665cd113008801c67f76ce\">MFn::kDirectionalLight</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Get rotation of a directional light in object space</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (isDirectionalLight)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Get rotation in world space</span></div>\n\
<div class=\"line\">                <a name=\"_a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> lightDir(0,0,1); <span class=\"comment\">// origin</span></div>\n\
<div class=\"line\">                lightDir *= matrix;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Transform into object space</span></div>\n\
<div class=\"line\">                lightDir *= objMatrix;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Provide the direction to the vertex program (constant 11)</span></div>\n\
<div class=\"line\">                glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 11, lightDir.x, lightDir.y, lightDir.z, 1);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the position of a non-directional light in object space</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a name=\"_a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> lightPos(0,0,0); <span class=\"comment\">// origin</span></div>\n\
<div class=\"line\">                lightPos *= matrix;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Transform into object space</span></div>\n\
<div class=\"line\">                lightPos *= objMatrix;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Provide the position to the vertex program (constant 11)</span></div>\n\
<div class=\"line\">                glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 11, lightPos.x, lightPos.y, lightPos.z, 1);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_light.html\">MFnLight</a> mLight(lightPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ad1aa507eb8e63e89e8d46a0abc18aa8c\">node</a>());</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Set the light&#39;s color.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> lightColor = mLight.color();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> intensity = mLight.intensity();</div>\n\
<div class=\"line\">            lightColor.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a> *= intensity;</div>\n\
<div class=\"line\">            lightColor.g *= intensity;</div>\n\
<div class=\"line\">            lightColor.b *= intensity;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 9, lightColor.r, </div>\n\
<div class=\"line\">                                   lightColor.g, lightColor.b, 1);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set some default values</span></div>\n\
<div class=\"line\">        glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 11, 0, 0, 1, 1);</div>\n\
<div class=\"line\">        glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 9, 1.0, 1.0, 1.0, 1);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Find the camera position in geometry&#39;s object space</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> cameraPos[4] = {0.0f, 0.0f, 0.0f, 0.0f};</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> camDag;</div>\n\
<div class=\"line\">        view.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a5e6ea41ec1bab5ed980b2ddffe398a73\">getCamera</a>(camDag);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> cameraInObject(0,0,0); </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> cameraToWorldMatrix = camDag.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        cameraInObject *= cameraToWorldMatrix; <span class=\"comment\">// to world</span></div>\n\
<div class=\"line\">        cameraInObject *= objMatrix;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 12, cameraInObject.x, cameraInObject.y, cameraInObject.z, 1);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// VERTEX REGISTERS (Attributes):</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 2 - normal</span></div>\n\
<div class=\"line\">    glVertexAttribPointerNV( 0, 3, GL_FLOAT, 0, vertexArray );</div>\n\
<div class=\"line\">    glVertexAttribPointerNV( 2, 3, GL_FLOAT, 0, normalArrays[0] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEnableClientState( GL_VERTEX_ATTRIB_ARRAY0_NV );</div>\n\
<div class=\"line\">    glEnableClientState( GL_VERTEX_ATTRIB_ARRAY2_NV );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glDrawElements(GL_TRIANGLES, indexCount, GL_UNSIGNED_INT, indexArray);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glDisableClientState( GL_VERTEX_ATTRIB_ARRAY0_NV );</div>\n\
<div class=\"line\">    glDisableClientState( GL_VERTEX_ATTRIB_ARRAY2_NV );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    glDisable(GL_VERTEX_PROGRAM_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glClientActiveTextureARB(GL_TEXTURE0_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span>     hwToonShader_NV20::normalsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 1;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span>     hwToonShader_NV20::texCoordsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 1;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Release the lookup texture/image.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwToonShader_NV20::release_lookup_texture()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (lookup_table)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> lookup_table;</div>\n\
<div class=\"line\">        lookup_table = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (lookup_texture)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span> lookup_texture;</div>\n\
<div class=\"line\">        lookup_table = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";