var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2017\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2016-06-16\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>hwReflectBumpShader_NV20/hwReflectBumpShader_NV20.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'hw_reflect_bump_shader__n_v20_2hw_reflect_bump_shader__n_v20_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>hwReflectBumpShader_NV20/hwReflectBumpShader_NV20.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">hwReflectBumpShader_NV20/hwReflectBumpShader_NV20.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright (C) 1995 - 2006 Autodesk, Inc. and/or its licensors.  All </span></div>\n\
<div class=\"line\"><span class=\"comment\">// rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The coded instructions, statements, computer programs, and/or related </span></div>\n\
<div class=\"line\"><span class=\"comment\">// material (collectively the &quot;Data&quot;) in these files contain unpublished </span></div>\n\
<div class=\"line\"><span class=\"comment\">// information proprietary to Autodesk, Inc. (&quot;Autodesk&quot;) and/or its </span></div>\n\
<div class=\"line\"><span class=\"comment\">// licensors, which is protected by U.S. and Canadian federal copyright </span></div>\n\
<div class=\"line\"><span class=\"comment\">// law and by international treaties.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The Data is provided for use exclusively by You. You have the right </span></div>\n\
<div class=\"line\"><span class=\"comment\">// to use, modify, and incorporate this Data into other products for </span></div>\n\
<div class=\"line\"><span class=\"comment\">// purposes authorized by the Autodesk software license agreement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// without fee.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// The copyright notices in the Software and this entire statement, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// including the above license grant, this restriction and the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// following disclaimer, must be included in all copies of the </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Software, in whole or in part, and all derivative works of </span></div>\n\
<div class=\"line\"><span class=\"comment\">// the Software, unless such copies or derivative works are solely </span></div>\n\
<div class=\"line\"><span class=\"comment\">// in the form of machine-executable object code generated by a </span></div>\n\
<div class=\"line\"><span class=\"comment\">// source language processor.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AUTODESK DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED </span></div>\n\
<div class=\"line\"><span class=\"comment\">// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF </span></div>\n\
<div class=\"line\"><span class=\"comment\">// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE, OR </span></div>\n\
<div class=\"line\"><span class=\"comment\">// TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS LICENSORS </span></div>\n\
<div class=\"line\"><span class=\"comment\">// BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL, </span></div>\n\
<div class=\"line\"><span class=\"comment\">// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK </span></div>\n\
<div class=\"line\"><span class=\"comment\">// AND/OR ITS LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY </span></div>\n\
<div class=\"line\"><span class=\"comment\">// OR PROBABILITY OF SUCH DAMAGES.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// NOTE: PLEASE READ THE README.TXT FILE FOR INSTRUCTIONS ON</span></div>\n\
<div class=\"line\"><span class=\"comment\">// COMPILING AND USAGE REQUIREMENTS.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION: NV20-specific (Geforce3) sample shader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              This shader can simultaneously display a</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              bumpy, reflective surface. The bump</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              is controlled through a user-specified</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              2D texture, while the reflection map</span></div>\n\
<div class=\"line\"><span class=\"comment\">//              is a cube map.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  This shader builds on the foundation demonstrated in </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  hwUnlitShader.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Additionally, this sample demonstrates how to:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      - Use vendor-specific extensions, namely vertex programs,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//        texture shaders and register combiners, to achieve</span></div>\n\
<div class=\"line\"><span class=\"comment\">//        effects that are impossible in standard OpenGL.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      - Convert height field bump format (used by Maya) into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//        a normal map format, for real-time rendering.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Many parameters are easily customizable:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      - The MNormalMapConverter::convertToNormalMap_InPlace()</span></div>\n\
<div class=\"line\"><span class=\"comment\">//        bumpScale parameter is currently constant. You can change</span></div>\n\
<div class=\"line\"><span class=\"comment\">//        it to a different value to increase or decrease the </span></div>\n\
<div class=\"line\"><span class=\"comment\">//        bumpiness.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable : 4786 )       // Disable STL warnings.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MArrayDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnStringData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MEulerRotation.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MQuaternion.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDependencyNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MSceneMessage.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Include NVIDIA&#39;s helper libraries.  These libraries have</span></div>\n\
<div class=\"line\"><span class=\"comment\">// copyright info in them so we cannot release them but we</span></div>\n\
<div class=\"line\"><span class=\"comment\">// can use them to verify that the API works correctly.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/gl.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/glu.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;GL/glext.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;glh_extensions.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#undef GL_NV_vertex_array_range</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;glh_obs.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">using namespace </span>glh;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;hwReflectBumpShader_NV20.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;ShadingConnection.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> hwReflectBumpShader_NV20::id( 0x00105442 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::postConstructor( )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setMPSafe(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::color;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::colorR;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::colorG;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::colorB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::bump;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::bumpR;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::bumpG;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::bumpB;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uCoord;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::vCoord;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uvCoord;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uBias;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::vBias;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uvFilterSize;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uvFilterSizeX;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwReflectBumpShader_NV20::uvFilterSizeY;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> gszErrMsg[100];          <span class=\"comment\">// Global error message text</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::printGlError( <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *call )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GLenum error;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">while</span>( (error = glGetError()) != GL_NO_ERROR ) {</div>\n\
<div class=\"line\">        cerr &lt;&lt; call &lt;&lt; <span class=\"stringliteral\">&quot;:&quot;</span> &lt;&lt; error &lt;&lt; <span class=\"stringliteral\">&quot; is &quot;</span> &lt;&lt; (<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> *)gluErrorString( error ) &lt;&lt; <span class=\"stringliteral\">&quot;\\n&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Verify that the configuration of the texture shaders are consistent</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::verify_shader_config(<a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> consistent;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">        glGetTexEnviv(GL_TEXTURE_SHADER_NV, GL_SHADER_CONSISTENT_NV, &amp; consistent);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(consistent == GL_FALSE)</div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;Shader stage 0 is inconsistent!&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE1_ARB );</div>\n\
<div class=\"line\">        glGetTexEnviv(GL_TEXTURE_SHADER_NV, GL_SHADER_CONSISTENT_NV, &amp; consistent);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(consistent == GL_FALSE)</div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;Shader stage 1 is inconsistent!&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE2_ARB );</div>\n\
<div class=\"line\">        glGetTexEnviv(GL_TEXTURE_SHADER_NV, GL_SHADER_CONSISTENT_NV, &amp; consistent);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(consistent == GL_FALSE)</div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;Shader stage 2 is inconsistent!&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE3_ARB );</div>\n\
<div class=\"line\">        glGetTexEnviv(GL_TEXTURE_SHADER_NV, GL_SHADER_CONSISTENT_NV, &amp; consistent);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(consistent == GL_FALSE)</div>\n\
<div class=\"line\">            cerr &lt;&lt; <span class=\"stringliteral\">&quot;Shader stage 3 is inconsistent!&quot;</span> &lt;&lt; endl;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The very simple VertexProgram for the Reflective Bump effect. This one is faster</span></div>\n\
<div class=\"line\"><span class=\"comment\">// (it doesn&#39;t require the tangent space calculation) but is world-aligned.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Therefore it could be useful for some effects (ex: ground or wall), but for</span></div>\n\
<div class=\"line\"><span class=\"comment\">// a character it would be unnacceptable.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CONSTANTS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  0- 3  4x4 ModelView-Projection composite matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  4- 7  4x4 ModelView  matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 24-27  4x4 view transpose</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// VERTEX REGISTERS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 1 - normal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 2 - texcoord0</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// REGISTERS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 4 = skinned (eye space) coord</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 5 = skinned (eye space) tangent</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 6 = skinned (eye space) binormal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 7 = skinned (eye space) normal</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> superEasyVertexProgramString[] = </div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;!!VP1.0\\n&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// final projection transformation</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// transform the skinned coords by the projection matrix</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].x, c[0], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].y, c[1], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].z, c[2], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   o[HPOS].w, c[3], v[0];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// transform the coords to the eye-space</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   R4.x, c[4], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   R4.y, c[5], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   R4.z, c[6], v[0];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4   R4.w, c[7], v[0];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// transform the normals to eye-space </span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R7.x, c[4], v[1];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R7.y, c[5], v[1];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R7.z, c[6], v[1];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3   R7.w, c[7], v[1];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// transform the normals from eye-space to world-space</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX1].x, R7, c[24];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX2].y, R7, c[25];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP3 o[TEX3].z, R7, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// put view dir into w of tex[1..3]</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4 o[TEX1].w, R4, c[24];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4 o[TEX2].w, R4, c[25];&quot;</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;DP4 o[TEX3].w, R4, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// copy texcoords</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;MOV o[TEX0], v[2];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// done</span></div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;END&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// More complex vertex program. It uses tangent space transformations to</span></div>\n\
<div class=\"line\"><span class=\"comment\">// achieve a more realistic bump.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// CONSTANTS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  0- 3  4x4 Projection matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">//  4- 7  4x4 ModelView  matrix</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 20-22  light amb/diff/spec</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 23     light dir</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 24-27  4x4 view transpose</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// VERTEX REGISTERS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 1 - normal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 2 - texcoord0</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 3 - texcoord1</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 4 - texcoord2 (binorm)</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// REGISTERS:</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 4  = skinned (eye space) coord</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 5 = skinned (eye space) tangent</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 6 = skinned (eye space) binormal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 7 = skinned (eye space) normal</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 8 = eye space view vector</span></div>\n\
<div class=\"line\"><span class=\"comment\">// 9 = eye space half-angle vector</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">char</span> originalVertexProgramString[] = </div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;!!VP1.0\\n&quot;</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// skin the vertices</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   R4.x, c[4], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   R4.y, c[5], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   R4.z, c[6], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   R4.w, c[7], v[0];&quot;</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// final projection transformation</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// transform the skinned coords by the projection matrix</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   o[HPOS].x, c[0], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   o[HPOS].y, c[1], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   o[HPOS].z, c[2], v[0];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4   o[HPOS].w, c[3], v[0];&quot;</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// skin the binormals</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// skin binormals for bone0</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R6.x, c[4], v[4];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R6.y, c[5], v[4];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R6.z, c[6], v[4];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R6.w, c[7], v[4];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// skin the normals</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// skin normals for bone0</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R7.x, c[4], v[1];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R7.y, c[5], v[1];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R7.z, c[6], v[1];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R7.w, c[7], v[1];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// renormalize and orthogonalize binormal, tangent &amp; normal</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// build tangent</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MUL   R5, R6.zxyw, R7.yzxw;&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MAD   R5, R6.yzxw, R7.zxyw, -R5;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// normalize tangent</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3   R5.w, R5, R5;&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;RSQ   R5.w, R5.w;&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MUL   R5.xyz, R5, R5.w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// put the sign in the tangent</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MUL R5.xyz, R5, v[4].w;&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// fill texture coords with tangent space matrix for pixel shaders</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// rotate tangent space matrix by view transpose</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX1].x, -R5, c[24];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX2].x, -R5, c[25];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX3].x, -R5, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX1].y, -R6, c[24];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX2].y, -R6, c[25];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX3].y, -R6, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX1].z, R7, c[24];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX2].z, R7, c[25];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[TEX3].z, R7, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// put view dir into w of tex[1..3]</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4 o[TEX1].w, -R4, c[24];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4 o[TEX2].w, -R4, c[25];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP4 o[TEX3].w, -R4, c[26];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// misc</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// put diffuse lighting into color</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;DP3 o[COL0], R7, c[23];&quot;</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MOV o[COL0].w, c[50];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// copy texcoords</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;MOV o[TEX0], v[3];&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// done</span></div>\n\
<div class=\"line\">    <span class=\"stringliteral\">&quot;END&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> initVertexProgram(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> vertexProgramCode[], GLuint* pVertexProgramId)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Allocate and initialize the vertex program.</span></div>\n\
<div class=\"line\">    glGenProgramsNV(1, pVertexProgramId);</div>\n\
<div class=\"line\">    GLenum error = glGetError();</div>\n\
<div class=\"line\">    assert(error == GL_NO_ERROR);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Load the program.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> length = strlen(vertexProgramCode);</div>\n\
<div class=\"line\">    glLoadProgramNV(GL_VERTEX_PROGRAM_NV, *pVertexProgramId, length, </div>\n\
<div class=\"line\">        (<span class=\"keyword\">const</span> GLubyte *) vertexProgramCode);</div>\n\
<div class=\"line\">    error = glGetError();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If an error occured, find the location in the vertex program</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// code and assert.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (error != GL_NO_ERROR)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If an error occured, it&#39;s most likely due to a syntax or </span></div>\n\
<div class=\"line\">        <span class=\"comment\">// logic error in the vertex program. The error position</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// below will contain the index in the vertex program</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// string that is faulty. See the NV_vertex_program</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// extension specification for more details.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (error == GL_INVALID_OPERATION)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> error_position = -2;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glGetIntegerv(GL_PROGRAM_ERROR_POSITION_NV, &amp;error_position);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Most likely a bug in the vertex program code...</span></div>\n\
<div class=\"line\">            assert(0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Load the vertexProgram and fill in the necessary constants used in the vertex program</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::loadVertexProgramGL()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Only load this vertex program once.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (vertex_program_id == 0) </div>\n\
<div class=\"line\">        initVertexProgram(originalVertexProgramString, &amp;vertex_program_id);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// CONSTANTS:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  0- 3  4x4 ModelView-Projection composite matrix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  4- 7  4x4 ModelView  matrix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 20-22  light amb/diff/spec</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 23     light dir</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 24-27  4x4 view transpose</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// VERTEX REGISTERS:</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 1 - normal</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// 2 - texcoord0</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// In this example, the upper-left 3x3 of the modelview matrix (M) and </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the upper-left 3x3 of the inverse transpose of the modelview matrix (M-t)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// are used interchangeably.  This is because the modelview matrix contains</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// only rigid-body transformations (rotation and translation), and in this</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// case the matrices are identical.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glTrackMatrixNV(GL_VERTEX_PROGRAM_NV, 0, GL_MODELVIEW_PROJECTION_NV, GL_IDENTITY_NV);</div>\n\
<div class=\"line\">    glTrackMatrixNV(GL_VERTEX_PROGRAM_NV, 4, GL_MODELVIEW, GL_IDENTITY_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 20, 1.0, 1.0, 1.0, 1.0);   <span class=\"comment\">// light amb color</span></div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 21, 1.0, 1.0, 1.0, 1.0);   <span class=\"comment\">// light diff color</span></div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 22, 1.0, 1.0, 1.0, 1.0);   <span class=\"comment\">// light spec color</span></div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 23, 0.0, 0.0, 1.0, 0.0);   <span class=\"comment\">// light direction, for now.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the modelView matrix</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    GLfloat modelViewMatrix[16];</div>\n\
<div class=\"line\">    glGetFloatv(GL_MODELVIEW_MATRIX, modelViewMatrix);</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> stupidMatrix[4][4];</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;16; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        stupidMatrix[i/4][i%4] = modelViewMatrix[i];</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mvMatrix(stupidMatrix);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Calculate the view transpose matrix.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//  </span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mv = m_ModelMatrix.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a8ca5ebc404566e2c4a16d4754772e082\">inverse</a>() * mvMatrix;</div>\n\
<div class=\"line\">    mv = mv.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a6fadbac6023eb9d361176a87b73063dc\">transpose</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 24, mv[0][0], mv[1][0], mv[2][0], mv[3][0]);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 25, mv[0][1], mv[1][1], mv[2][1], mv[3][1]);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 26, mv[0][2], mv[1][2], mv[2][2], mv[3][2]);</div>\n\
<div class=\"line\">    glProgramParameter4fNV(GL_VERTEX_PROGRAM_NV, 27, mv[0][3], mv[1][3], mv[2][3], mv[3][3]);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Initialize the necessary OpenGL extensions</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::init_ext(<span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span> * ext)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!glh_init_extension(ext))</div>\n\
<div class=\"line\">    { cerr &lt;&lt; <span class=\"stringliteral\">&quot;Failed to initialize &quot;</span> &lt;&lt; ext &lt;&lt; <span class=\"stringliteral\">&quot;!&quot;</span> &lt;&lt; endl; exit(0); }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwReflectBumpShader_NV20::hwReflectBumpShader_NV20()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    m_pTextureCache = MTextureCache::instance();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_ARB_multitexture&quot;</span>);</div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_NV_register_combiners&quot;</span>);</div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_NV_texture_shader&quot;</span>);</div>\n\
<div class=\"line\">    init_ext(<span class=\"stringliteral\">&quot;GL_NV_vertex_program&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    bumpScale = 1.0;</div>\n\
<div class=\"line\">    cubeMapOnly = FALSE;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    texNames[0] = texNames[1] = texNames[2] = texNames[3] = texNames[4] = texNames[5] = 0;</div>\n\
<div class=\"line\">    currentTextureNames[0] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    currentTextureNames[1] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    currentTextureNames[2] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    currentTextureNames[3] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    currentTextureNames[4] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    currentTextureNames[5] = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attachSceneCallbacks();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    vertex_program_id = 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwReflectBumpShader_NV20::~hwReflectBumpShader_NV20()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    detachSceneCallbacks();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> releaseVertexProgram(GLuint* pVertexProgramId)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// If the vertex program id is set...</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (*pVertexProgramId &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Unbind any vertex program...</span></div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDeleteProgramsNV(1, pVertexProgramId);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// For sanity, set the id to 0.</span></div>\n\
<div class=\"line\">        *pVertexProgramId = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::releaseEverything()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (texNames[0] != 0)           </div>\n\
<div class=\"line\">        glDeleteTextures(6, &amp;texNames[0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    releaseVertexProgram(&amp;vertex_program_id);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Release the texture cache through refcounting.</span></div>\n\
<div class=\"line\">    m_pTextureCache-&gt;release();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!MTextureCache::getReferenceCount())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        m_pTextureCache = 0;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::attachSceneCallbacks()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fBeforeNewCB  = <a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaaf261bc0d5929af12c193ee3c6e451349\">MSceneMessage::kBeforeNew</a>,  releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fBeforeOpenCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaac4fe9e5e85e4e962ca0366226b012d6f\">MSceneMessage::kBeforeOpen</a>, releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fBeforeRemoveReferenceCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa2f6e3664b31d62f64c1b3c68d6373f26\">MSceneMessage::kBeforeRemoveReference</a>, </div>\n\
<div class=\"line\">                                                          releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">    fMayaExitingCB = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a0f4760368de3989378ce9cec3943ae6d\">MSceneMessage::addCallback</a>(<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_scene_message.html#a4f09127c805cc1f5ee20e67db7b45efaa1efff7ad75eeef5a2ac9e3c0e890dbd0\">MSceneMessage::kMayaExiting</a>, releaseCallback, <span class=\"keyword\">this</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*static*/</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::releaseCallback(<span class=\"keywordtype\">void</span>* clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    hwReflectBumpShader_NV20 *pThis = (hwReflectBumpShader_NV20*) clientData;</div>\n\
<div class=\"line\">    pThis-&gt;releaseEverything();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwReflectBumpShader_NV20::detachSceneCallbacks()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeNewCB)</div>\n\
<div class=\"line\">        <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeNewCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeOpenCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeOpenCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fBeforeRemoveReferenceCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fBeforeRemoveReferenceCB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (fMayaExitingCB)</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>(fMayaExitingCB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    fBeforeNewCB = 0;</div>\n\
<div class=\"line\">    fBeforeOpenCB = 0;</div>\n\
<div class=\"line\">    fBeforeRemoveReferenceCB = 0;</div>\n\
<div class=\"line\">    fMayaExitingCB = 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;shader/surface/utility&quot;</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.0&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\">    status = plugin.registerNode( <span class=\"stringliteral\">&quot;hwReflectBumpShader_NV20&quot;</span>, hwReflectBumpShader_NV20::id, </div>\n\
<div class=\"line\">                                  hwReflectBumpShader_NV20::creator, hwReflectBumpShader_NV20::initialize,</div>\n\
<div class=\"line\">                                  <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee2b86760284068eef3c463f9de9babc\">MPxNode::kHwShaderNode</a>, &amp;UserClassify );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;registerNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Unregister all chamelion shader nodes</span></div>\n\
<div class=\"line\">    plugin.deregisterNode( hwReflectBumpShader_NV20::id );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status) {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;deregisterNode&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> * hwReflectBumpShader_NV20::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> hwReflectBumpShader_NV20();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr; </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> sAttr; <span class=\"comment\">// For string attributes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create input attrubutes</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorR = nAttr.<a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorR&quot;</span>, <span class=\"stringliteral\">&quot;cr&quot;</span>,<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorG = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorG&quot;</span>, <span class=\"stringliteral\">&quot;cg&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    colorB = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;colorB&quot;</span>, <span class=\"stringliteral\">&quot;cb&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    color = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;color&quot;</span>, <span class=\"stringliteral\">&quot;c&quot;</span>, colorR, colorG, colorB);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f, 0.5f, 0.5f);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a4a44548ca2e5b1e7613a992a6b96a147\">setUsedAsColor</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    bumpR = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;bumpR&quot;</span>, <span class=\"stringliteral\">&quot;c2r&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    bumpG = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;bumpG&quot;</span>, <span class=\"stringliteral\">&quot;c2g&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    bumpB = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;bumpB&quot;</span>, <span class=\"stringliteral\">&quot;c2b&quot;</span>,<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    bump = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;bump&quot;</span>, <span class=\"stringliteral\">&quot;c2&quot;</span>, bumpR, bumpG, bumpB);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.0f, 1.0f, 1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a4a44548ca2e5b1e7613a992a6b96a147\">setUsedAsColor</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uCoord&quot;</span>, <span class=\"stringliteral\">&quot;u&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    vCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vCoord&quot;</span>, <span class=\"stringliteral\">&quot;v&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"> </div>\n\
<div class=\"line\">    uvCoord = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvCoord&quot;</span>,<span class=\"stringliteral\">&quot;uv&quot;</span>, uCoord, vCoord);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f, 0.5f );</div>\n\
<div class=\"line\">    nAttr.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uBias&quot;</span>, <span class=\"stringliteral\">&quot;bu&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0.0f);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    vBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;vBias&quot;</span>, <span class=\"stringliteral\">&quot;bv&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aba21b33176bb831de026b78605c1dcf3\">setMin</a>(0.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#adab95fd85497b1dad3a4ba7a842ce9d8\">setMax</a>(1.0f);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.5f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSizeX = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeX&quot;</span>, <span class=\"stringliteral\">&quot;fsx&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSizeY = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;uvFilterSizeY&quot;</span>, <span class=\"stringliteral\">&quot;fsy&quot;</span>, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    uvFilterSize = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;uvFilterSize&quot;</span>,<span class=\"stringliteral\">&quot;fs&quot;</span>,uvFilterSizeX,uvFilterSizeY);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#af41aae76c0dc31dbcd1f4ecea52d694e\">setReadable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a98bb3089ec3b7442383da68a5ef424c7\">setWritable</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ab8e48be1f1009a30d0e40dfcaf9e649d\">setHidden</a>(<span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">   </div>\n\
<div class=\"line\"> <span class=\"comment\">// create output attributes here</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// outColor is the only output attribute and it is inherited</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so we do not need to create or add it.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"> <span class=\"comment\">// Add the attributes here</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(color);</div>\n\
<div class=\"line\">    addAttribute(bump);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uvCoord);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uBias);</div>\n\
<div class=\"line\">    addAttribute(vBias);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    addAttribute(uvFilterSize);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    attributeAffects (colorR, outColor);</div>\n\
<div class=\"line\">    attributeAffects (colorG, outColor);</div>\n\
<div class=\"line\">    attributeAffects (colorB, outColor);</div>\n\
<div class=\"line\">    attributeAffects (color,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (bumpR, outColor);</div>\n\
<div class=\"line\">    attributeAffects (bumpG, outColor);</div>\n\
<div class=\"line\">    attributeAffects (bumpB, outColor);</div>\n\
<div class=\"line\">    attributeAffects (bump,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (uCoord,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (vCoord,  outColor);</div>\n\
<div class=\"line\">    attributeAffects (uvCoord, outColor);</div>\n\
<div class=\"line\">    attributeAffects (uBias,   outColor);</div>\n\
<div class=\"line\">    attributeAffects (vBias,   outColor);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//   See hwDecalBumpShader_NV20::compute().</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::compute(</div>\n\
<div class=\"line\"><span class=\"keyword\">const</span> <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;      plug,</div>\n\
<div class=\"line\">      <a name=\"_a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; block ) </div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> k = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    k |= (plug==outColor);</div>\n\
<div class=\"line\">    k |= (plug==outColorR);</div>\n\
<div class=\"line\">    k |= (plug==outColorG);</div>\n\
<div class=\"line\">    k |= (plug==outColorB);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !k ) <span class=\"keywordflow\">return</span> <a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a7f858db05022c8bc860d685e13bab6ae\">MS::kUnknownParameter</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// set output color attribute</span></div>\n\
<div class=\"line\">    <a name=\"_a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outColorHandle = block.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( outColor );</div>\n\
<div class=\"line\">    <a name=\"_a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a>&amp; outColor = outColorHandle.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    outColor.<a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a> = 1.0;</div>\n\
<div class=\"line\">    outColor.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a> = 0.5;</div>\n\
<div class=\"line\">    outColor.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> = 0.5;</div>\n\
<div class=\"line\">    outColorHandle.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a7bdd61b8405188bb547fdba3fddace91\">setClean</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// To get 3 float values from the node attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::getFloat3(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <span class=\"keywordtype\">float</span> value[3])</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the attr to use</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   plug(thisMObject(), attr);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> object;</div>\n\
<div class=\"line\">    status = plug.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(<span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwReflectBumpShader_NV20::bind plug.getValue.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html\">MFnNumericData</a> data(<span class=\"keywordtype\">object</span>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwReflectBumpShader_NV20::bind construct data.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = data.getData(value[0], value[1], value[2]);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;hwReflectBumpShader_NV20::bind get values.&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// To get a string value from the node attribute</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::getString(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp;str)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>   plug(thisMObject(), attr);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = plug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>( str );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::bind(<span class=\"keyword\">const</span> <a name=\"_a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> isHeightFieldMap = <span class=\"keyword\">true</span>;   <span class=\"comment\">// Should be set to the value of an attribute</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_ModelMatrix = request.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the cube mapand bump map file names</span></div>\n\
<div class=\"line\">    <a name=\"_a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> decalNames;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> decalName;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> bumpName;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ShadingConnection colorConnection(thisMObject(), </div>\n\
<div class=\"line\">                        request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a name=\"a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>(), <span class=\"stringliteral\">&quot;color&quot;</span>);</div>\n\
<div class=\"line\">    ShadingConnection bumpConnection (thisMObject(), </div>\n\
<div class=\"line\">                        request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>(), <span class=\"stringliteral\">&quot;bump&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If the color attribute is ultimately connected to a environment, </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// find its filenames, otherwise use the default color texture.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> gotAllEnvironmentMaps = TRUE;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (colorConnection.type() == ShadingConnection::TEXTURE &amp;&amp;</div>\n\
<div class=\"line\">        colorConnection.texture().hasFn(<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7ab824bea4f4d7b08318294cbab187f8af\">MFn::kEnvCube</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the filenames of the texture.</span></div>\n\
<div class=\"line\">        <a name=\"_a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> textureNode(colorConnection.texture());</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> attributeName;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> envNames[6] = { <span class=\"stringliteral\">&quot;top&quot;</span>, <span class=\"stringliteral\">&quot;bottom&quot;</span>, <span class=\"stringliteral\">&quot;left&quot;</span>, <span class=\"stringliteral\">&quot;right&quot;</span>, <span class=\"stringliteral\">&quot;front&quot;</span>, <span class=\"stringliteral\">&quot;back&quot;</span> };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Scan for connected file textures to the environment map node</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;6; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            ShadingConnection conn(colorConnection.texture(), request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>().<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a6e9ba8c60415451d03d26e01accaca81\">partialPathName</a>(), </div>\n\
<div class=\"line\">                            envNames[i]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (conn.type() == ShadingConnection::TEXTURE &amp;&amp;</div>\n\
<div class=\"line\">                conn.texture().hasFn(<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7ac3bee92500cdc3a4ccbec4cb35e91f2a\">MFn::kFileTexture</a>))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> envNode(conn.texture());</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> filenamePlug( conn.texture(), envNode.attribute(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;fileTextureName&quot;</span>)) );</div>\n\
<div class=\"line\">                filenamePlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(decalName);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (decalName.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0)</div>\n\
<div class=\"line\">                    decalName = <span class=\"stringliteral\">&quot;D:/chameleon/textures/Cham_body_color_real.tga&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Append next environment map name</span></div>\n\
<div class=\"line\">                decalNames.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( decalName );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// If any of the environment maps are not mapped put in a fake texture</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                decalName = <span class=\"stringliteral\">&quot;D:/chameleon/textures/Cham_body_color_real.tga&quot;</span>;</div>\n\
<div class=\"line\">                decalNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( decalName );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Put in a fake texture for each side</span></div>\n\
<div class=\"line\">        decalName = <span class=\"stringliteral\">&quot;D:/chameleon/textures/Cham_body_color_real.tga&quot;</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;6; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            decalNames.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html#a18d06b3d0af1426e654ac2cc1dc86c60\">append</a>( decalName );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If the bump attribute is ultimately connected to a file texture, find its filename.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// otherwise use the default bump texture.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (bumpConnection.type() == ShadingConnection::TEXTURE &amp;&amp;</div>\n\
<div class=\"line\">        bumpConnection.texture().hasFn(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7ac3bee92500cdc3a4ccbec4cb35e91f2a\">MFn::kFileTexture</a>))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the filename of the texture.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dependency_node.html\">MFnDependencyNode</a> textureNode(bumpConnection.texture());</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> filenamePlug( bumpConnection.texture(), textureNode.attribute(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;fileTextureName&quot;</span>)) );</div>\n\
<div class=\"line\">        filenamePlug.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#a64f7093bfde5c5eb9d89b32635b772aa\">getValue</a>(bumpName);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        bumpName = <span class=\"stringliteral\">&quot;&quot;</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// See if we are doing cube-map only. i.e. no bump</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    cubeMapOnly = (bumpName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#a580388f31f60c46fac867ca48a48da1e\">length</a>() == 0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Reload cube maps if the name of the textures</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// for any of the cube maps changes</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> width, height;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> reload = FALSE;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;6; i++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (currentTextureNames[i] != decalNames[i])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            reload = TRUE;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( reload )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> xpTexName(decalNames[2]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> xnTexName(decalNames[3]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> ypTexName(decalNames[0]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> ynTexName(decalNames[1]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> zpTexName(decalNames[4]);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> znTexName(decalNames[5]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> stat;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_XP.readFromFile(xpTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">        stat = theImage_XP.getSize( width, height );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_XN.readFromFile(xnTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_YP.readFromFile(ypTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_YN.readFromFile(ynTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_ZP.readFromFile(zpTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (! (stat = theImage_ZN.readFromFile(znTexName)) )</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Only create texture names the first time</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (texNames[0] == 0)</div>\n\
<div class=\"line\">            glGenTextures(6, &amp;texNames[0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[0] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_XP.pixels() );</div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[1] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_XN.pixels() );</div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[2] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_YP.pixels() );</div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[3] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_YN.pixels() );</div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[4] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_ZP.pixels() );</div>\n\
<div class=\"line\">        glBindTexture( GL_TEXTURE_2D, texNames[5] );</div>\n\
<div class=\"line\">        glTexImage2D(GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB,</div>\n\
<div class=\"line\">            0, GL_RGBA8, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, theImage_ZN.pixels() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (i=0; i&lt;6; i++) {</div>\n\
<div class=\"line\">            currentTextureNames[i] = decalNames[i];</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get camera information needed</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> cameraPath;</div>\n\
<div class=\"line\">    status = view.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a5e6ea41ec1bab5ed980b2ddffe398a73\">getCamera</a>( cameraPath );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get rotation angle and axis</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> camAxis;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span> camTheta;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> mmatrix = cameraPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>( &amp;status );</div>\n\
<div class=\"line\">    <a name=\"_a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_transformation_matrix.html\">MTransformationMatrix</a> tmatrix( mmatrix );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    m_CameraRotation = tmatrix.rotation();</div>\n\
<div class=\"line\">    m_CameraRotation.getAxisAngle(  camAxis, camTheta );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Convert to degrees from radians</span></div>\n\
<div class=\"line\">    camTheta *= 57.295779513082320876798154814105;  <span class=\"comment\">// == (180 / M_PI)</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPushAttrib( GL_ALL_ATTRIB_BITS );</div>\n\
<div class=\"line\">    glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Background color is always white</span></div>\n\
<div class=\"line\">    glColorMaterial(GL_FRONT_AND_BACK, GL_AMBIENT_AND_DIFFUSE);</div>\n\
<div class=\"line\">    glEnable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\">    glColor4f( 1, 1, 1, 1 );</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cubeMapOnly)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\">        glTexGeni(GL_S, GL_TEXTURE_GEN_MODE, GL_REFLECTION_MAP_ARB);</div>\n\
<div class=\"line\">        glTexGeni(GL_T, GL_TEXTURE_GEN_MODE, GL_REFLECTION_MAP_ARB);</div>\n\
<div class=\"line\">        glTexGeni(GL_R, GL_TEXTURE_GEN_MODE, GL_REFLECTION_MAP_ARB);</div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_GEN_S);</div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_GEN_T);</div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_GEN_R);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (i=0; i&lt;6; i++)</div>\n\
<div class=\"line\">            glBindTexture( GL_TEXTURE_2D, texNames[i] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_MIN_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_MAG_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Flip from Maya to OGL coordinates +</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// rotate the Textures according to the camera orientation</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glMatrixMode( GL_TEXTURE );</div>\n\
<div class=\"line\">        glPushMatrix();</div>\n\
<div class=\"line\">        glLoadIdentity();</div>\n\
<div class=\"line\">        glRotated( 180.0, 1.0, 0.0, 0.0 );</div>\n\
<div class=\"line\">        glRotated( camTheta, camAxis[0], camAxis[1], camAxis[2]);</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        <span class=\"comment\">// Pop the matrix is done during unbind, not here</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//glPopMatrix();</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glMatrixMode( GL_MODELVIEW );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        loadVertexProgramGL();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Setup texture combiners </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_SHADER_NV);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// stage 0 -- bump normal map (input is u,v and normal map)</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// We need to be able to pass the bumpScaleValue</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// to the texture cache and rebuild the bump or normal map</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( isHeightFieldMap ) {</div>\n\
<div class=\"line\">            <span class=\"comment\">// convert the HeightField to the NormalMap</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(m_pTextureCache)</div>\n\
<div class=\"line\">                m_pTextureCache-&gt;bind(bumpConnection.texture(), MTexture::NMAP, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>(m_pTextureCache)</div>\n\
<div class=\"line\">                m_pTextureCache-&gt;bind(bumpConnection.texture(), MTexture::RGBA, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_SHADER_OPERATION_NV, GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// stage 1 -- dot product (input is strq)</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE1_ARB );</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_SHADER_OPERATION_NV, GL_DOT_PRODUCT_NV);</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_PREVIOUS_TEXTURE_INPUT_NV, GL_TEXTURE0_ARB);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// stage 2 -- dot product (input is strq)</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE2_ARB );</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_SHADER_OPERATION_NV, GL_DOT_PRODUCT_NV);</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_PREVIOUS_TEXTURE_INPUT_NV, GL_TEXTURE0_ARB); </div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// stage 3 -- dot product reflect cube map (input is strq, and cube maps)</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ======================================================================</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE3_ARB );  </div>\n\
<div class=\"line\">        glEnable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_SHADER_OPERATION_NV, GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV);</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_SHADER_NV, GL_PREVIOUS_TEXTURE_INPUT_NV, GL_TEXTURE0_ARB);</div>\n\
<div class=\"line\">        glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_REPLACE);     </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Bind the 6 textures</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (i=0; i&lt;6; i++)</div>\n\
<div class=\"line\">            glBindTexture( GL_TEXTURE_2D, texNames[i] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Specify the texture parameters</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_MIN_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">        glTexParameteri(GL_TEXTURE_CUBE_MAP_ARB, GL_TEXTURE_MAG_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Done setting the texture unit 3</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// define a white color</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> white_color[4] = {1.0, 1.0, 1.0, 1.0};</div>\n\
<div class=\"line\">        glCombinerParameterfvNV(GL_CONSTANT_COLOR0_NV, white_color);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// The register combiner will do the multiplication between</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the illumination and the decal color</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glEnable(GL_REGISTER_COMBINERS_NV);</div>\n\
<div class=\"line\">        glCombinerParameteriNV(GL_NUM_GENERAL_COMBINERS_NV, 1);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// Combiner stage 0 get the input from texture stage3, pass through</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_A_NV, GL_TEXTURE3_ARB, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_B_NV, GL_CONSTANT_COLOR0_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_C_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glCombinerInputNV(GL_COMBINER0_NV, GL_RGB, GL_VARIABLE_D_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glCombinerOutputNV(GL_COMBINER0_NV, GL_RGB, GL_SPARE0_NV, GL_DISCARD_NV, GL_DISCARD_NV, </div>\n\
<div class=\"line\">            GL_NONE, GL_NONE, GL_FALSE, GL_FALSE, GL_FALSE);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// The final Combiner just pass through</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glFinalCombinerInputNV(GL_VARIABLE_A_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glFinalCombinerInputNV(GL_VARIABLE_B_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glFinalCombinerInputNV(GL_VARIABLE_C_NV, GL_ZERO, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\">        glFinalCombinerInputNV(GL_VARIABLE_D_NV, GL_SPARE0_NV, GL_UNSIGNED_IDENTITY_NV, GL_RGB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        verify_shader_config( view );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::unbind(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cubeMapOnly)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Pop the texture matrix pushed during bind</span></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">        glMatrixMode( GL_TEXTURE );</div>\n\
<div class=\"line\">        glPopMatrix();</div>\n\
<div class=\"line\">        glMatrixMode( GL_MODELVIEW );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDisable( GL_TEXTURE_GEN_S );</div>\n\
<div class=\"line\">        glDisable( GL_TEXTURE_GEN_T );</div>\n\
<div class=\"line\">        glDisable( GL_TEXTURE_GEN_R );</div>\n\
<div class=\"line\">        glDisable( GL_TEXTURE_CUBE_MAP_ARB );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_SHADER_NV);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE1_ARB );</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE2_ARB );</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glActiveTextureARB( GL_TEXTURE3_ARB );</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        glDisable(GL_TEXTURE_CUBE_MAP_ARB);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDisable(GL_REGISTER_COMBINERS_NV);</div>\n\
<div class=\"line\">        glDisable(GL_VERTEX_PROGRAM_NV);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glActiveTextureARB( GL_TEXTURE0_ARB );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPopClientAttrib();</div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwReflectBumpShader_NV20::geometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// We assume triangles here.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (prim != GL_TRIANGLES)   <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MS::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEnable(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cubeMapOnly)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glVertexPointer(3, GL_FLOAT, 0, vertexArray);</div>\n\
<div class=\"line\">        glEnable(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (normalCount &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glNormalPointer(GL_FLOAT, 0, normalArrays[0]);</div>\n\
<div class=\"line\">            glEnable(GL_NORMAL_ARRAY);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glDrawElements(GL_TRIANGLES, indexCount, GL_UNSIGNED_INT, indexArray);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glDisable(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">        glDisable(GL_NORMAL_ARRAY);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Bind and enable the vertex program</span></div>\n\
<div class=\"line\">        glBindProgramNV(GL_VERTEX_PROGRAM_NV, vertex_program_id);</div>\n\
<div class=\"line\">        glEnable(GL_VERTEX_PROGRAM_NV);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"comment\">// VERTEX REGISTERS:</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 0 - coord</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 1 - normal</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 2 - texcoord0</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 3 - texcoord1</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// 4 - texcoord2 (binorm)</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glVertexAttribPointerNV( 0, 3, GL_FLOAT, 0, vertexArray );</div>\n\
<div class=\"line\">        glVertexAttribPointerNV( 1, 3, GL_FLOAT, 0, normalArrays[0] );</div>\n\
<div class=\"line\">        glVertexAttribPointerNV( 2, 2, GL_FLOAT, 0, texCoordArrays[0] );</div>\n\
<div class=\"line\">        glVertexAttribPointerNV( 3, 2, GL_FLOAT, 0, texCoordArrays[0] );</div>\n\
<div class=\"line\">        glVertexAttribPointerNV( 4, 3, GL_FLOAT, 0, normalArrays[2] );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glEnableClientState( GL_VERTEX_ATTRIB_ARRAY0_NV );</div>\n\
<div class=\"line\">        glEnableClientState( GL_VERTEX_ATTRIB_ARRAY1_NV );</div>\n\
<div class=\"line\">        glEnableClientState( GL_VERTEX_ATTRIB_ARRAY2_NV );</div>\n\
<div class=\"line\">        glEnableClientState( GL_VERTEX_ATTRIB_ARRAY3_NV );</div>\n\
<div class=\"line\">        glEnableClientState( GL_VERTEX_ATTRIB_ARRAY4_NV );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glDrawElements(GL_TRIANGLES, indexCount, GL_UNSIGNED_INT, indexArray);</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glDisableClientState( GL_VERTEX_ATTRIB_ARRAY0_NV );</div>\n\
<div class=\"line\">        glDisableClientState( GL_VERTEX_ATTRIB_ARRAY1_NV );</div>\n\
<div class=\"line\">        glDisableClientState( GL_VERTEX_ATTRIB_ARRAY2_NV );</div>\n\
<div class=\"line\">        glDisableClientState( GL_VERTEX_ATTRIB_ARRAY3_NV );</div>\n\
<div class=\"line\">        glDisableClientState( GL_VERTEX_ATTRIB_ARRAY4_NV );</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        glDisable(GL_VERTEX_PROGRAM_NV);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glDisable(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> hwReflectBumpShader_NV20::normalsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 3;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> hwReflectBumpShader_NV20::texCoordsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 1;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";