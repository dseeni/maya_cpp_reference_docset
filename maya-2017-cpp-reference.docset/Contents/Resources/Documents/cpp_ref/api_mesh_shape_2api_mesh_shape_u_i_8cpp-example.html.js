var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2017\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2016-06-16\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>apiMeshShape/apiMeshShapeUI.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'api_mesh_shape_2api_mesh_shape_u_i_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>apiMeshShape/apiMeshShapeUI.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">apiMeshShape/apiMeshShapeUI.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// apiMeshShapeUI.cpp</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;apiMeshShapeUI.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMaterial.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MObjectArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"comment\">// for user interaction performance example code. (search on </span></div>\n\
<div class=\"line\"><span class=\"comment\">// &quot;userChangingViewContext&quot;)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MTextureEditorDrawInfo.h&gt;</span> </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Object and component color defines</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define LEAD_COLOR              18  // green</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define ACTIVE_COLOR            15  // white</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define ACTIVE_AFFECTED_COLOR   8   // purple</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define DORMANT_COLOR           4   // blue</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define HILITE_COLOR            17  // pale blue</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define DORMANT_VERTEX_COLOR    8   // purple</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define ACTIVE_VERTEX_COLOR     16  // yellow</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Vertex point size</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define POINT_SIZE              2.0 </span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define UV_POINT_SIZE           4.0</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// UI implementation</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\">apiMeshUI::apiMeshUI() {}</div>\n\
<div class=\"line\">apiMeshUI::~apiMeshUI() {}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>* apiMeshUI::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> apiMeshUI();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Overrides</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"comment\">/* override */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::getDrawRequests( <span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html\">MDrawInfo</a> &amp; info,</div>\n\
<div class=\"line\">                             <span class=\"keywordtype\">bool</span> objectAndActiveOnly,</div>\n\
<div class=\"line\">                             <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html\">MDrawRequestQueue</a> &amp; queue )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Add draw requests to the draw queue</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     info                 - current drawing state</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     objectsAndActiveOnly - no components if true</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     queue                - queue of draw requests to add to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the data necessary to draw the shape</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html\">MDrawData</a> data;</div>\n\
<div class=\"line\">    apiMesh* meshNode = (apiMesh*)surfaceShape();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = meshNode-&gt;meshGeom();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( (NULL == geom) || (0 == geom-&gt;faceCount) ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">//cerr &lt;&lt; &quot;NO DrawRequest for apiMesh\\n&quot;;</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This call creates a prototype draw request that we can fill</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// in and then add to the draw queue.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> request = info.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a7056c15c87746a72e32634d684694bc0\">getPrototype</a>( *<span class=\"keyword\">this</span> );</div>\n\
<div class=\"line\">    getDrawData( geom, data );</div>\n\
<div class=\"line\">    request.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a5d3e9bc6ae679a823b6c3fcace09d796\">setDrawData</a>( data );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Decode the draw info and determine what needs to be drawn</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8a\">M3dView::DisplayStyle</a>  appearance    = info.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a16a1754d1de4e7ad544766e128fdfd2a\">displayStyle</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bca\">M3dView::DisplayStatus</a> displayStatus = info.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#aea5775805aed7f93884084d4cf6607b7\">displayStatus</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Are we displaying meshes?</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! info.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#af74dc36d6f4dce353fcaaadef4d55a42\">objectDisplayStatus</a>( <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a169efed3046f92a7f5159d4e67207c31a3b0cb6bd56061b8965de34bb4dc7473e\">M3dView::kDisplayMeshes</a> ) )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span> ( appearance )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa53c5241bb4e72f6c9547de918125d068\">M3dView::kWireFrame</a> :</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            request.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawWireframe );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6a\">M3dView::ColorTable</a> activeColorTable = <a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa18362fb06caee77a9bae15aa90e06d1c\">M3dView::kActiveColors</a>;</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6a\">M3dView::ColorTable</a> dormantColorTable = <a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa466739773561fe25487724d1b7a16234\">M3dView::kDormantColors</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">switch</span> ( displayStatus )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa1606a62e097fcfa55af6251a83b44243\">M3dView::kLead</a> :</div>\n\
<div class=\"line\">                    request.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( LEAD_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaab6a8784b4cf96692e0d71d19c44ce732\">M3dView::kActive</a> :</div>\n\
<div class=\"line\">                    request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( ACTIVE_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa49cf0d80f04f7d6476e6852c1349050f\">M3dView::kActiveAffected</a> :</div>\n\
<div class=\"line\">                    request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( ACTIVE_AFFECTED_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa658348c4d7bc7605d9359a41fd393c86\">M3dView::kDormant</a> :</div>\n\
<div class=\"line\">                    request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( DORMANT_COLOR, dormantColorTable );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">case</span> <a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">M3dView::kHilite</a> :</div>\n\
<div class=\"line\">                    request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( HILITE_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">default</span>:    </div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            queue.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( request );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa620925ec70781a5f5de890d906660d24\">M3dView::kGouraudShaded</a> :</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Create the smooth shaded draw request</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawSmoothShaded );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Need to get the material info</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path = info.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>();   <span class=\"comment\">// path to your dag object </span></div>\n\
<div class=\"line\">            <a name=\"_a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> view = info.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#aa9f517a1406259b47e15937aa3166678\">view</a>();;        <span class=\"comment\">// view to draw to</span></div>\n\
<div class=\"line\">            <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html\">MMaterial</a> material = <a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_surface_shape_u_i.html#a94d753f8b614df1c5408e36219c06577\">MPxSurfaceShapeUI::material</a>( path );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// If the user currently has the default material enabled on the </span></div>\n\
<div class=\"line\">            <span class=\"comment\">// view then use the default material for shading. </span></div>\n\
<div class=\"line\">            <span class=\"comment\">// </span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( view.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ae4b4678ef01f58e0ef190c045559f9ae\">usingDefaultMaterial</a>() ) { </div>\n\
<div class=\"line\">                material = <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#aeb352454ee40fce918ddbc7c55d89018\">MMaterial::defaultMaterial</a>(); </div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"comment\">// Evaluate the material and if necessary, the texture.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( ! material.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a6d63e4963e97825dc4aff1990173ac62\">evaluateMaterial</a>( view, path ) ) {</div>\n\
<div class=\"line\">                cerr &lt;&lt; <span class=\"stringliteral\">&quot;Couldnt evaluate\\n&quot;</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> drawTexture = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( drawTexture &amp;&amp; material.<a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#ab17b0e81e07f6b1683650ed86b2d634c\">materialIsTextured</a>() ) {</div>\n\
<div class=\"line\">                material.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a9b9efaa70622be5ce870074f9c1d669c\">evaluateTexture</a>( data );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            request.<a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a161ccc1e96ef0fce46f6e300a620c232\">setMaterial</a>( material );</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"comment\">// request.setDisplayStyle( appearance );</span></div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> materialTransparent = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">            material.<a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#aeffb187d35cd75bf7e28d7da40ea3b46\">getHasTransparency</a>( materialTransparent );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( materialTransparent ) {</div>\n\
<div class=\"line\">                request.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3e4724dadceededf8e8a9ebf8ad7049\">setIsTransparent</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( request );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// create a draw request for wireframe on shaded if</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// necessary.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( (displayStatus == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaab6a8784b4cf96692e0d71d19c44ce732\">M3dView::kActive</a>) ||</div>\n\
<div class=\"line\">                 (displayStatus == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa1606a62e097fcfa55af6251a83b44243\">M3dView::kLead</a>) ||</div>\n\
<div class=\"line\">                 (displayStatus == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">M3dView::kHilite</a>) )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> wireRequest = info.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a7056c15c87746a72e32634d684694bc0\">getPrototype</a>( *<span class=\"keyword\">this</span> );</div>\n\
<div class=\"line\">                wireRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a5d3e9bc6ae679a823b6c3fcace09d796\">setDrawData</a>( data );</div>\n\
<div class=\"line\">                wireRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawWireframeOnShaded );</div>\n\
<div class=\"line\">                wireRequest.<a name=\"a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a6021f26912668f091b824b68803d20c0\">setDisplayStyle</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa53c5241bb4e72f6c9547de918125d068\">M3dView::kWireFrame</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6a\">M3dView::ColorTable</a> activeColorTable = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa18362fb06caee77a9bae15aa90e06d1c\">M3dView::kActiveColors</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">switch</span> ( displayStatus )</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa1606a62e097fcfa55af6251a83b44243\">M3dView::kLead</a> :</div>\n\
<div class=\"line\">                        wireRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( LEAD_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaab6a8784b4cf96692e0d71d19c44ce732\">M3dView::kActive</a> :</div>\n\
<div class=\"line\">                        wireRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( ACTIVE_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">case</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">M3dView::kHilite</a> :</div>\n\
<div class=\"line\">                        wireRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( HILITE_COLOR, activeColorTable );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">default</span>:    </div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( wireRequest );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa7914d385424ca72fdf84654b735a5a50\">M3dView::kFlatShaded</a> :</div>\n\
<div class=\"line\">            request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawFlatShaded );</div>\n\
<div class=\"line\">            queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( request );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa74c3784e844e54dab272e794fa6bcaa9\">M3dView::kBoundingBox</a> :</div>\n\
<div class=\"line\">            request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawBoundingBox );</div>\n\
<div class=\"line\">            queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( request );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>:    </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add draw requests for components</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !objectAndActiveOnly ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Inactive components</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( (appearance == <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1b68f8823b8e275a4b548fdd27263e8aa57a311fc6dd7498f2339ab45af414377\">M3dView::kPoints</a>) ||</div>\n\
<div class=\"line\">             (displayStatus == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">M3dView::kHilite</a>) )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> vertexRequest = info.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a7056c15c87746a72e32634d684694bc0\">getPrototype</a>( *<span class=\"keyword\">this</span> ); </div>\n\
<div class=\"line\">            vertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a5d3e9bc6ae679a823b6c3fcace09d796\">setDrawData</a>( data );</div>\n\
<div class=\"line\">            vertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawVertices );</div>\n\
<div class=\"line\">            vertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( DORMANT_VERTEX_COLOR,</div>\n\
<div class=\"line\">                                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa18362fb06caee77a9bae15aa90e06d1c\">M3dView::kActiveColors</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( vertexRequest );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Active components</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( surfaceShape()-&gt;hasActiveComponents() ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> activeVertexRequest = info.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_info.html#a7056c15c87746a72e32634d684694bc0\">getPrototype</a>( *<span class=\"keyword\">this</span> ); </div>\n\
<div class=\"line\">            activeVertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a5d3e9bc6ae679a823b6c3fcace09d796\">setDrawData</a>( data );</div>\n\
<div class=\"line\">            activeVertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#abe62a517ec22e2000ec81e0ec774831b\">setToken</a>( kDrawVertices );</div>\n\
<div class=\"line\">            activeVertexRequest.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ac3ee612a0b7ad10c46bb22294660620c\">setColor</a>( ACTIVE_VERTEX_COLOR,</div>\n\
<div class=\"line\">                                          <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a9b24d632cd80af03d971c58ce0b8df6aa18362fb06caee77a9bae15aa90e06d1c\">M3dView::kActiveColors</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> clist = surfaceShape()-&gt;activeComponents();</div>\n\
<div class=\"line\">            <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> vertexComponent = clist[0]; <span class=\"comment\">// Should filter list</span></div>\n\
<div class=\"line\">            activeVertexRequest.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#adc8bdbb2a42d16888aba067334549039\">setComponent</a>( vertexComponent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            queue.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request_queue.html#a94a649d06791f74a76864a980e41ed63\">add</a>( activeVertexRequest );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* override */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::draw( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Main (OpenGL) draw routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{ </div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the token from the draw request.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// The token specifies what needs to be drawn.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> token = request.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#aa1fffc9ae537c640417f539883dc973e\">token</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">switch</span>( token )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawWireframe :</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawWireframeOnShaded :</div>\n\
<div class=\"line\">            drawWireframe( request, view );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawSmoothShaded :</div>\n\
<div class=\"line\">            drawShaded( request, view );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawFlatShaded : <span class=\"comment\">// Not implemented</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawVertices :</div>\n\
<div class=\"line\">            drawVertices( request, view );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawBoundingBox:</div>\n\
<div class=\"line\">            drawBoundingBox( request, view );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">        <span class=\"comment\">// for userChangingViewContext example code </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> kDrawRedPointAtCenter:</div>\n\
<div class=\"line\">            drawRedPointAtCenter( request, view );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* override */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshUI::select( <a name=\"_a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_select_info.html\">MSelectInfo</a> &amp;selectInfo, <a name=\"_a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> &amp;selectionList,</div>\n\
<div class=\"line\">                    <a name=\"_a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> &amp;worldSpaceSelectPts ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Main selection routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     selectInfo           - the selection state information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     selectionList        - the list of selected items to add to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     worldSpaceSelectPts  -</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> selected = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> componentSelected = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> hilited = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    hilited = (selectInfo.displayStatus() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ad9c34c5373567566950642c16a7c4bcaa88694d85749c9c85738c56c4912c385a\">M3dView::kHilite</a>);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( hilited ) {</div>\n\
<div class=\"line\">        componentSelected = selectVertices( selectInfo, selectionList,</div>\n\
<div class=\"line\">                                            worldSpaceSelectPts );</div>\n\
<div class=\"line\">        selected = selected || componentSelected;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !selected ) {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        apiMesh* meshNode = (apiMesh*)surfaceShape();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// NOTE: If the geometry has an intersect routine it should</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// be called here with the selection ray to determine if the</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// the object was selected.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        selected = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <a name=\"_a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> priorityMask( <a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879da8ed3a498d5700207e30a95ad9dea65c7\">MSelectionMask::kSelectNurbsSurfaces</a> );</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> item;</div>\n\
<div class=\"line\">        item.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a>( selectInfo.selectPath() );</div>\n\
<div class=\"line\">        <a name=\"_a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> xformedPt;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( selectInfo.singleSelection() ) {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> center = meshNode-&gt;boundingBox().center();</div>\n\
<div class=\"line\">            xformedPt = center;</div>\n\
<div class=\"line\">            xformedPt *= selectInfo.selectPath().inclusiveMatrix();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        selectInfo.addSelection( item, xformedPt, selectionList,</div>\n\
<div class=\"line\">                                 worldSpaceSelectPts, priorityMask, <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> selected;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper routines</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawWireframe( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request,</div>\n\
<div class=\"line\">                               <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Wireframe drawing routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html\">MDrawData</a> data = request.<a name=\"a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a82892340b7bdce4fae2bd8d2a0feacaf\">drawData</a>();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = (apiMeshGeom*)data.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html#acd307d60fb424f4dd221ebca86d525f0\">geometry</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> token = request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#aa1fffc9ae537c640417f539883dc973e\">token</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> wireFrameOnShaded = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( kDrawWireframeOnShaded == token ) {</div>\n\
<div class=\"line\">        wireFrameOnShaded = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Query current state so it can be restored</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> lightingWasOn = glIsEnabled( GL_LIGHTING ) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( lightingWasOn ) {</div>\n\
<div class=\"line\">        glDisable( GL_LIGHTING );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( wireFrameOnShaded ) {</div>\n\
<div class=\"line\">        glDepthMask( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the wireframe mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 0;            </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i=0; i&lt;geom-&gt;faceCount; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBegin( GL_LINE_LOOP );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> v=0; v&lt;geom-&gt;face_counts[i]; v++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex = geom-&gt;vertices[ geom-&gt;face_connects[vid++] ];</div>\n\
<div class=\"line\">            glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0], (<span class=\"keywordtype\">float</span>)vertex[1], (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore the state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( lightingWasOn ) {</div>\n\
<div class=\"line\">        glEnable( GL_LIGHTING );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( wireFrameOnShaded ) {</div>\n\
<div class=\"line\">        glDepthMask( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawShaded( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Shaded drawing routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html\">MDrawData</a> data = request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a82892340b7bdce4fae2bd8d2a0feacaf\">drawData</a>();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = (apiMeshGeom*)data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html#acd307d60fb424f4dd221ebca86d525f0\">geometry</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if     defined(SGI) || defined(MESA)</span></div>\n\
<div class=\"line\">    glEnable( GL_POLYGON_OFFSET_EXT );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">    glEnable( GL_POLYGON_OFFSET_FILL );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up the material</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html\">MMaterial</a> material = request.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#ad8d3426de607892e954c7698c52a8373\">material</a>();</div>\n\
<div class=\"line\">    material.<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#a5dd0244ce46c3c8593aa06e390f1cd19\">setMaterial</a>( request.<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a29c5fd43c9e42c958ae3455eba8e3e8e\">multiPath</a>(), request.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a9af8d1d3490a3fa7779927df11c7c039\">isTransparent</a>() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Enable texturing ... </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Note, Maya does not enable texturing if useDefaultMaterial is enabled. </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// However, you can choose to ignore this in your draw routine.  </span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawTexture = </div>\n\
<div class=\"line\">        material.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#ab17b0e81e07f6b1683650ed86b2d634c\">materialIsTextured</a>() &amp;&amp; </div>\n\
<div class=\"line\">        !view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ae4b4678ef01f58e0ef190c045559f9ae\">usingDefaultMaterial</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( drawTexture ) glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Apply the texture to the current view</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( drawTexture ) {</div>\n\
<div class=\"line\">        material.<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_material.html#ae046db7d059bb8c89d9f97e6771814e3\">applyTexture</a>( view, data );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the polygons</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv_len = geom-&gt;uvcoords.uvcount();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i=0; i&lt;geom-&gt;faceCount; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBegin( GL_POLYGON );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> v=0; v&lt;geom-&gt;face_counts[i]; v++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex = geom-&gt;vertices[ geom-&gt;face_connects[vid] ];</div>\n\
<div class=\"line\">            <a name=\"_a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> normal = geom-&gt;normals[ geom-&gt;face_connects[vid] ];</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (uv_len &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// If we are drawing the texture, make sure the  coord </span></div>\n\
<div class=\"line\">                <span class=\"comment\">// arrays are in bounds.</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( drawTexture ) {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> u, v; </div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> uvId1 = geom-&gt;uvcoords.uvId(vid); </div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( uvId1 &lt; uv_len ) { </div>\n\
<div class=\"line\">                        geom-&gt;uvcoords.getUV( uvId1, u, v ); </div>\n\
<div class=\"line\">                        glTexCoord2f( (GLfloat)u, (GLfloat)v ); </div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glNormal3f( (<span class=\"keywordtype\">float</span>)normal[0], (<span class=\"keywordtype\">float</span>)normal[1], (<span class=\"keywordtype\">float</span>)normal[2] );</div>\n\
<div class=\"line\">            glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0], (<span class=\"keywordtype\">float</span>)vertex[1], (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">            vid++;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    } </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Turn off texture mode</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( drawTexture ) glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawVertices( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request,</div>\n\
<div class=\"line\">                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Component (vertex) drawing routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html\">MDrawData</a> data = request.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a82892340b7bdce4fae2bd8d2a0feacaf\">drawData</a>();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = (apiMeshGeom*)data.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_data.html#acd307d60fb424f4dd221ebca86d525f0\">geometry</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Query current state so it can be restored</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> lightingWasOn = glIsEnabled( GL_LIGHTING ) ? <span class=\"keyword\">true</span> : <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( lightingWasOn ) {</div>\n\
<div class=\"line\">        glDisable( GL_LIGHTING );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> lastPointSize;</div>\n\
<div class=\"line\">    glGetFloatv( GL_POINT_SIZE, &amp;lastPointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If there is a component specified by the draw request</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// then loop over comp (using an MFnComponent class) and draw the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// active vertices, otherwise draw all vertices.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> comp = request.<a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html#a33e47104a13fcffc3c31acc05a73a9af\">component</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( ! comp.<a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ac02f2a4d7312eb91f40980adfd4e31b2\">isNull</a>() ) {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the point size of the vertices</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glPointSize( POINT_SIZE*2 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent( comp );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i=0; i&lt;fnComponent.elementCount(); i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> index = fnComponent.element( i );</div>\n\
<div class=\"line\">            glBegin( GL_POINTS );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex = geom-&gt;vertices[ index  ];</div>\n\
<div class=\"line\">            glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0], </div>\n\
<div class=\"line\">                        (<span class=\"keywordtype\">float</span>)vertex[1], </div>\n\
<div class=\"line\">                        (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">            glEnd();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set the point size of the vertices</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glPointSize( POINT_SIZE );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i=0; i&lt;geom-&gt;faceCount; i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glBegin( GL_POINTS );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> v=0; v&lt;geom-&gt;face_counts[i]; v++ )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex =</div>\n\
<div class=\"line\">                    geom-&gt;vertices[ geom-&gt;face_connects[vid++] ];</div>\n\
<div class=\"line\">                glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0], </div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)vertex[1], </div>\n\
<div class=\"line\">                            (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            glEnd();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore the state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( lightingWasOn ) {</div>\n\
<div class=\"line\">        glEnable( GL_LIGHTING );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glPointSize( lastPointSize );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawBoundingBox( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request,</div>\n\
<div class=\"line\">                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Bounding box drawing routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the surface shape</span></div>\n\
<div class=\"line\">    <a name=\"_a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_surface_shape.html\">MPxSurfaceShape</a> *shape = surfaceShape();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( !shape )</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the bounding box </span></div>\n\
<div class=\"line\">    <a name=\"_a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> box = shape-&gt;<a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_surface_shape.html#a762dab569a9d88aa731f3c7229803e1e\">boundingBox</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> w = (float) box.<a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a6cddcbf72c80144aa2e6501abb150c30\">width</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> h = (float) box.<a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afa7750092d5dcf402c83fb5adba91453\">height</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> d = (float) box.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a65c72a51aba9fc4233b58751dd712e43\">depth</a>();</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Below we just two sides and then connect</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the edges together</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> minVertex = box.<a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afb3213b98f3a6b4bda9759511e9b79a1\">min</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw first side</span></div>\n\
<div class=\"line\">    glBegin( GL_LINE_LOOP );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex = minVertex;</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0],   (<span class=\"keywordtype\">float</span>)vertex[1],   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0]+w, (<span class=\"keywordtype\">float</span>)vertex[1],   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0]+w, (<span class=\"keywordtype\">float</span>)vertex[1]+h, (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0],   (<span class=\"keywordtype\">float</span>)vertex[1]+h, (<span class=\"keywordtype\">float</span>)vertex[2] ); </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0],   (<span class=\"keywordtype\">float</span>)vertex[1],   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw second side</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> sideFactor(0,0,d);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> vertex2 = minVertex + sideFactor;</div>\n\
<div class=\"line\">    glBegin( GL_LINE_LOOP );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0],   (<span class=\"keywordtype\">float</span>)vertex2[1],   (<span class=\"keywordtype\">float</span>)vertex2[2] );  </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0]+w, (<span class=\"keywordtype\">float</span>)vertex2[1],   (<span class=\"keywordtype\">float</span>)vertex2[2] );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0]+w, (<span class=\"keywordtype\">float</span>)vertex2[1]+h, (<span class=\"keywordtype\">float</span>)vertex2[2] );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0],   (<span class=\"keywordtype\">float</span>)vertex2[1]+h, (<span class=\"keywordtype\">float</span>)vertex2[2] );  </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0],   (<span class=\"keywordtype\">float</span>)vertex2[1],   (<span class=\"keywordtype\">float</span>)vertex2[2] );  </div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Connect the edges together</span></div>\n\
<div class=\"line\">    glBegin( GL_LINES );</div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0],   (<span class=\"keywordtype\">float</span>)vertex2[1],   (<span class=\"keywordtype\">float</span>)vertex2[2] );  </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0],   (<span class=\"keywordtype\">float</span>)vertex[1],   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0]+w,   (<span class=\"keywordtype\">float</span>)vertex2[1],   (<span class=\"keywordtype\">float</span>)vertex2[2] );    </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0]+w,   (<span class=\"keywordtype\">float</span>)vertex[1],   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0]+w,   (<span class=\"keywordtype\">float</span>)vertex2[1]+h,   (<span class=\"keywordtype\">float</span>)vertex2[2] );  </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0]+w,   (<span class=\"keywordtype\">float</span>)vertex[1]+h,   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex2[0],   (<span class=\"keywordtype\">float</span>)vertex2[1]+h,   (<span class=\"keywordtype\">float</span>)vertex2[2] );    </div>\n\
<div class=\"line\">    glVertex3f( (<span class=\"keywordtype\">float</span>)vertex[0],   (<span class=\"keywordtype\">float</span>)vertex[1]+h,   (<span class=\"keywordtype\">float</span>)vertex[2] );</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// for userChangingViewContext example code </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawRedPointAtCenter( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a> &amp; request,</div>\n\
<div class=\"line\">                                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp; view ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Simple very fast draw routine</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     request - request to be drawn</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     view    - view to draw into</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw point</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// </span></div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>();</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">    <span class=\"comment\">// save state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glPushAttrib( GL_CURRENT_BIT | GL_POINT_BIT );</div>\n\
<div class=\"line\">    glPointSize( 20.0f );</div>\n\
<div class=\"line\">    glBegin( GL_POINTS );</div>\n\
<div class=\"line\">    glColor3f( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    glVertex3f(0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    glEnd();</div>\n\
<div class=\"line\">                            </div>\n\
<div class=\"line\">    <span class=\"comment\">// restore state</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshUI::selectVertices( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_select_info.html\">MSelectInfo</a> &amp;selectInfo,</div>\n\
<div class=\"line\">                             <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> &amp;selectionList,</div>\n\
<div class=\"line\">                             <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point_array.html\">MPointArray</a> &amp;worldSpaceSelectPts ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     Vertex selection.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Arguments:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     selectInfo           - the selection state information</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     selectionList        - the list of selected items to add to</span></div>\n\
<div class=\"line\"><span class=\"comment\">//     worldSpaceSelectPts  -</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> selected = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> view = selectInfo.view();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>      xformedPoint;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>      selectionPoint;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">double</span>      z,previousZ = 0.0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>         closestPointVertexIndex = -1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; path = selectInfo.multiPath();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a component that will store the selected vertices</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> fnComponent;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> surfaceComponent = fnComponent.<a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ae3b7a9c926f9770f786893bbea825d6b\">create</a>( <a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a040adaedfb9ad2fcc82cdeca1e214522\">MFn::kMeshVertComponent</a> );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vertexIndex;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// if the user did a single mouse click and we find &gt; 1 selection</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// we will use the alignmentMatrix to find out which is the closest</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <a name=\"_a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> alignmentMatrix;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> singlePoint; </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> singleSelection = selectInfo.singleSelection();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( singleSelection ) {</div>\n\
<div class=\"line\">        alignmentMatrix = selectInfo.getAlignmentMatrix();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the geometry information</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    apiMesh* meshNode = (apiMesh*)surfaceShape();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = meshNode-&gt;meshGeom();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Loop through all vertices of the mesh and</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// see if they lie withing the selection area</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> numVertices = geom-&gt;vertices.length();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( vertexIndex=0; vertexIndex&lt;numVertices; vertexIndex++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> currentPoint = geom-&gt;vertices[ vertexIndex ];</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Sets OpenGL&#39;s render mode to select and stores</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// selected items in a pick buffer</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        view.<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#aa6921536008ba99da053a07d29bc16a0\">beginSelect</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glBegin( GL_POINTS );</div>\n\
<div class=\"line\">        glVertex3f( (<span class=\"keywordtype\">float</span>)currentPoint[0], </div>\n\
<div class=\"line\">                    (<span class=\"keywordtype\">float</span>)currentPoint[1], </div>\n\
<div class=\"line\">                    (<span class=\"keywordtype\">float</span>)currentPoint[2] );</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( view.<a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a810c2fe3e3a6d9cf923d4b5f98a0adc7\">endSelect</a>() &gt; 0 ) <span class=\"comment\">// Hit count &gt; 0</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            selected = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( singleSelection ) {</div>\n\
<div class=\"line\">                xformedPoint = currentPoint;</div>\n\
<div class=\"line\">                xformedPoint.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#a038c747ad8e5343c8e6cc563b9e431d4\">homogenize</a>();</div>\n\
<div class=\"line\">                xformedPoint*= alignmentMatrix;</div>\n\
<div class=\"line\">                z = xformedPoint.<a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> ( closestPointVertexIndex &lt; 0 || z &gt; previousZ ) {</div>\n\
<div class=\"line\">                    closestPointVertexIndex = vertexIndex;</div>\n\
<div class=\"line\">                    singlePoint = currentPoint;</div>\n\
<div class=\"line\">                    previousZ = z;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            } <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                <span class=\"comment\">// multiple selection, store all elements</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                fnComponent.<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ac611414173082c0660277269ea6a4671\">addElement</a>( vertexIndex );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If single selection, insert the closest point into the array</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( selected &amp;&amp; selectInfo.singleSelection() ) {</div>\n\
<div class=\"line\">        fnComponent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ac611414173082c0660277269ea6a4671\">addElement</a>(closestPointVertexIndex);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// need to get world space position for this vertex</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        selectionPoint = singlePoint;</div>\n\
<div class=\"line\">        selectionPoint *= path.<a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add the selected component to the selection list</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( selected ) {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html\">MSelectionList</a> selectionItem;</div>\n\
<div class=\"line\">        selectionItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_list.html#a23929aeafb29672f2652128eac9c4dec\">add</a>( path, surfaceComponent );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html\">MSelectionMask</a> mask( <a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_selection_mask.html#acffca3b33fddce63d3220bc7487e879daddcd409dd7fe14cab048b65f973ebfa3\">MSelectionMask::kSelectComponentsMask</a> );</div>\n\
<div class=\"line\">        selectInfo.addSelection(</div>\n\
<div class=\"line\">            selectionItem, selectionPoint,</div>\n\
<div class=\"line\">            selectionList, worldSpaceSelectPts,</div>\n\
<div class=\"line\">            mask, <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> selected;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> apiMeshUI::canDrawUV() const</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Tells Maya that this surface shape supports uv drawing. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    apiMesh* meshNode = (apiMesh*)surfaceShape();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = meshNode-&gt;meshGeom();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> geom-&gt;uvcoords.uvcount() &gt; 0; </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawUVWireframe( </div>\n\
<div class=\"line\">    apiMeshGeom *geom, </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html\">MTextureEditorDrawInfo</a> &amp;info </div>\n\
<div class=\"line\">) <span class=\"keyword\">const</span> </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Draws the UV layout in wireframe mode. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the polygons</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> vid_start = vid;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( <span class=\"keywordtype\">int</span> i=0; i&lt;geom-&gt;faceCount; i++ )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glBegin( GL_LINES );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> v;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        vid_start = vid; </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( v=0; v&lt;geom-&gt;face_counts[i]-1; v++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> du1, dv1, du2, dv2; </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> uvId1 = geom-&gt;uvcoords.uvId(vid); </div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> uvId2 = geom-&gt;uvcoords.uvId(vid+1); </div>\n\
<div class=\"line\">            geom-&gt;uvcoords.getUV( uvId1, du1, dv1 ); </div>\n\
<div class=\"line\">            geom-&gt;uvcoords.getUV( uvId2, du2, dv2 );</div>\n\
<div class=\"line\">            glVertex3f( (GLfloat)du1, (GLfloat)dv1, 0.0f ); </div>\n\
<div class=\"line\">            glVertex3f( (GLfloat)du2, (GLfloat)dv2, 0.0f ); </div>\n\
<div class=\"line\">            vid++;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> du1, dv1, du2, dv2; </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> uvId1 = geom-&gt;uvcoords.uvId(vid); </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> uvId2 = geom-&gt;uvcoords.uvId(vid_start); </div>\n\
<div class=\"line\">        geom-&gt;uvcoords.getUV( uvId1, du1, dv1 ); </div>\n\
<div class=\"line\">        geom-&gt;uvcoords.getUV( uvId2, du2, dv2 );</div>\n\
<div class=\"line\">        glVertex3f( (GLfloat)du1, (GLfloat)dv1, 0.0f );</div>\n\
<div class=\"line\">        glVertex3f( (GLfloat)du2, (GLfloat)dv2, 0.0f ); </div>\n\
<div class=\"line\">        vid ++ ; </div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    } </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>();</div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawUVMapCoord( </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv, </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> u, <span class=\"keywordtype\">float</span> v, </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawNum</div>\n\
<div class=\"line\">) <span class=\"keyword\">const</span> </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Draw the specified uv value into the port view. If drawNum is true </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  It will also draw the UV id for the the UV.  </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( drawNum ) { </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">char</span> s[32];</div>\n\
<div class=\"line\">        sprintf( s, <span class=\"stringliteral\">&quot;%d&quot;</span>, uv );</div>\n\
<div class=\"line\">        view.<a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a1d533091a31a590ee4599fde04fa65d7\">drawText</a>( s, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( u, v, 0 ), <a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a8e0d441725a81d2bbdebbea09078260eae006401ce2987367501dd62b12f1396d\">M3dView::kCenter</a> );</div>\n\
<div class=\"line\">    }  </div>\n\
<div class=\"line\">    glVertex3f( (GLfloat)u, (GLfloat)v, 0.0f ); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawUVMapCoordNum( </div>\n\
<div class=\"line\">    apiMeshGeom *geom, </div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, </div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html\">MTextureEditorDrawInfo</a> &amp;info, </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawNumbers </div>\n\
<div class=\"line\">) <span class=\"keyword\">const</span> </div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//  Draw the UV points for all uvs on this surface shape. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#a0e318e5634c7aaf31c4eb7232d2013d4\">beginGL</a>(); </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GLfloat ptSize; </div>\n\
<div class=\"line\">    glGetFloatv( GL_POINT_SIZE, &amp;ptSize ); </div>\n\
<div class=\"line\">    glPointSize( UV_POINT_SIZE );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv; </div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv_len = geom-&gt;uvcoords.uvcount();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> ( uv = 0; uv &lt; uv_len; uv ++ ) { </div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> du, dv; </div>\n\
<div class=\"line\">        geom-&gt;uvcoords.getUV( uv, du, dv ); </div>\n\
<div class=\"line\">        drawUVMapCoord( view, uv, du, dv, drawNumbers );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPointSize( ptSize ); </div>\n\
<div class=\"line\">    view.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#ab810c5a46d728df70ff5f44b604559f4\">endGL</a>(); </div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> apiMeshUI::drawUV( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a> &amp;view, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html\">MTextureEditorDrawInfo</a> &amp;info ) <span class=\"keyword\">const</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   Main entry point for UV drawing. This method is called by the UV </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   texture editor when the shape is &#39;active&#39;. </span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Input: </span></div>\n\
<div class=\"line\"><span class=\"comment\">//   A 3dView. </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    apiMesh* meshNode = (apiMesh*)surfaceShape();</div>\n\
<div class=\"line\">    apiMeshGeom * geom = meshNode-&gt;meshGeom();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> uv_len = geom-&gt;uvcoords.uvcount(); </div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (uv_len &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        view.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html#aaf6fd568acc50d57be00639f773c1d73\">setDrawColor</a>( <a name=\"_a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>( 1.0f, 0.0f, 0.0f ) ); </div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">switch</span>( info.drawingFunction() ) { </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bca5d1abe339e4ec64b4381a33ab7f693d1\">MTextureEditorDrawInfo::kDrawWireframe</a>: </div>\n\
<div class=\"line\">            drawUVWireframe( geom, view, info ); </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>; </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bcab0a7afec9af80ea94ad7a85b2dee7180\">MTextureEditorDrawInfo::kDrawEverything</a>: </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bca68f8ea0ed4ef3f13ab93d36c7eedba30\">MTextureEditorDrawInfo::kDrawUVForSelect</a>: </div>\n\
<div class=\"line\">            drawUVWireframe( geom, view, info ); </div>\n\
<div class=\"line\">            drawUVMapCoordNum( geom, view, info, <span class=\"keyword\">false</span> ); </div>\n\
<div class=\"line\">            <span class=\"keywordflow\">break</span>; </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bcaf153640d10fb82aff2d819d840826bca\">MTextureEditorDrawInfo::kDrawVertexForSelect</a>: </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bca268f05728289012bc5b41158205e4c25\">MTextureEditorDrawInfo::kDrawEdgeForSelect</a>: </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">case</span> <a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_texture_editor_draw_info.html#a5cfc7b3910bc9ef6a80d2d572cb882bca81492d5adb63503408694bb638a8bfa6\">MTextureEditorDrawInfo::kDrawFacetForSelect</a>: </div>\n\
<div class=\"line\">        <span class=\"keywordflow\">default</span>: </div>\n\
<div class=\"line\">            drawUVWireframe( geom, view, info ); </div>\n\
<div class=\"line\">        };</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";