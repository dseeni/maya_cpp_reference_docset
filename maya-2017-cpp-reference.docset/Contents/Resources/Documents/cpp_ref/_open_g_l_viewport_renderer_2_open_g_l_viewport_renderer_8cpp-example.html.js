var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2017\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2016-06-16\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>OpenGLViewportRenderer/OpenGLViewportRenderer.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_open_g_l_viewport_renderer_2_open_g_l_viewport_renderer_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>OpenGLViewportRenderer/OpenGLViewportRenderer.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">OpenGLViewportRenderer/OpenGLViewportRenderer.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;OpenGLViewportRenderer.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MRenderingInfo.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAngle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDag.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MBoundingBox.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHardwareRenderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawTraversal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGeometryManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGeometry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGeometryData.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGeometryPrimitive.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHwTextureManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MImageFileInfo.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSingleIndexedComponent.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if MAYA_API_VERSION &gt; 800</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #define _USE_MGL_FT_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;maya/MGLFunctionTable.h&gt;</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a> *gGLFT = NULL;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #include &lt;maya/MGL.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">OpenGLViewportRendererHUD::OpenGLViewportRendererHUD()</div>\n\
<div class=\"line\">: OpenGLViewportRenderer( <span class=\"stringliteral\">&quot;OpenGLViewportRendererHUD&quot;</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fUIName.set( <span class=\"stringliteral\">&quot;Plugin OpenGL Renderer HUD&quot;</span>);</div>\n\
<div class=\"line\">    fRenderingOverride = <a name=\"a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a21e72c75b59deb20f71d38a11967cfa7a5516f2e50ee059ec0b4186720e7a6d37\">MViewportRenderer::kOverrideThenStandard</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>    OpenGLViewportRendererHUD::overrideThenStandardExclusion()<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">// exclude everything apart from manipulators</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> ~(<span class=\"keywordtype\">unsigned</span> int)kExcludeManipulators;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">OpenGLViewportRendererFullUI::OpenGLViewportRendererFullUI()</div>\n\
<div class=\"line\">: OpenGLViewportRenderer( <span class=\"stringliteral\">&quot;OpenGLViewportRendererFullUI&quot;</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    fUIName.set( <span class=\"stringliteral\">&quot;Plugin OpenGL Renderer Full UI&quot;</span>);</div>\n\
<div class=\"line\">    fRenderingOverride = <a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a21e72c75b59deb20f71d38a11967cfa7ac9a329060276a3a99388b4cdc1945b82\">MViewportRenderer::kOverrideThenUI</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">OpenGLViewportRenderer::OpenGLViewportRenderer( <span class=\"keyword\">const</span> <a name=\"_a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> &amp; name )</div>\n\
<div class=\"line\">:   <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html\">MViewportRenderer</a>( name )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the ui name</span></div>\n\
<div class=\"line\">    fUIName.set( <span class=\"stringliteral\">&quot;Plugin OpenGL Renderer&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// This renderer overrides all drawing</span></div>\n\
<div class=\"line\">    fRenderingOverride = <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a21e72c75b59deb20f71d38a11967cfa7af6de8fd975ab6ac7b32a828abab0d3ca\">MViewportRenderer::kOverrideAllDrawing</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set API and version number</span></div>\n\
<div class=\"line\">    m_API = <a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a5cc2993db47042d12f73f656e0fa1435a72361be679c1aca1c1be5f9b500a3315\">MViewportRenderer::kOpenGL</a>;</div>\n\
<div class=\"line\">    m_Version = 2.0f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::~OpenGLViewportRenderer()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    uninitialize();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">OpenGLViewportRenderer::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_USE_MGL_FT)</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get a pointer to a GL function table</span></div>\n\
<div class=\"line\">    Tboolean useMGLFT = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> *rend = MHardwareRenderer::theRenderer();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (rend)</div>\n\
<div class=\"line\">        gGLFT = rend-&gt;<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">glFunctionTable</a>();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!gGLFT)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">OpenGLViewportRenderer::uninitialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    gGLFT = NULL;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">OpenGLViewportRenderer::render(<span class=\"keyword\">const</span> <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_rendering_info.html\">MRenderingInfo</a> &amp;renderInfo)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//printf(&quot;Render using (%s : %s) renderer\\n&quot;, fName.asChar(), fUIName.asChar());</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Support direct rendering to an OpenGL context only.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (renderInfo.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_rendering_info.html#a0f2275dc8cb381a257941c312fb16dc8\">renderingAPI</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a5cc2993db47042d12f73f656e0fa1435a72361be679c1aca1c1be5f9b500a3315\">MViewportRenderer::kOpenGL</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// This is not required as the target has already been made current</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// before the render() call.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// renderTarget.makeTargetCurrent();</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Do some rendering...</span></div>\n\
<div class=\"line\">        renderToTarget( renderInfo );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::nativelySupports( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a5cc2993db47042d12f73f656e0fa1435\">MViewportRenderer::RenderingAPI</a> api,</div>\n\
<div class=\"line\">                                       <span class=\"keywordtype\">float</span> version )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Do API check</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (api == m_API);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span> <span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::override( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_viewport_renderer.html#a21e72c75b59deb20f71d38a11967cfa7\">MViewportRenderer::RenderingOverride</a> <span class=\"keyword\">override</span> )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Check override</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> (<span class=\"keyword\">override</span> == fRenderingOverride);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Rendering methods</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::drawSurface( <span class=\"keyword\">const</span> <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;dagPath, <span class=\"keywordtype\">bool</span> active, <span class=\"keywordtype\">bool</span> templated )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drewSurface = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( dagPath.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> <span class=\"keywordtype\">object</span> = dagPath.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ad1aa507eb8e63e89e8d46a0abc18aa8c\">node</a>();</div>\n\
<div class=\"line\">        <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> mesh(<span class=\"keywordtype\">object</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Figure out texturing</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> haveTexture = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numUVsets = mesh.numUVSets();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> uvSetName;</div>\n\
<div class=\"line\">        <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html\">MObjectArray</a> textures;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numUVsets &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mesh.getCurrentUVSetName( uvSetName );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = mesh.getAssociatedUVSetTextures(uvSetName, textures);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a> &amp;&amp; textures.<a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object_array.html#a580388f31f60c46fac867ca48a48da1e\">length</a>())</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                haveTexture = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> haveColors = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numColors = mesh.numColorSets();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> colorSetName;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numColors &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            haveColors = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            mesh.getCurrentColorSetName(colorSetName);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> useNormals = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Setup our requirements needs.</span></div>\n\
<div class=\"line\">        <a name=\"_a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html\">MGeometryRequirements</a> requirements;</div>\n\
<div class=\"line\">        requirements.<a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#ac06310a311e21853120d0cc6f0e10fa1\">addPosition</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (useNormals)</div>\n\
<div class=\"line\">            requirements.<a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#ac225c13948fae1c5058e28da27fb1cc4\">addNormal</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (haveTexture)</div>\n\
<div class=\"line\">            requirements.<a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#afd5a8b1052778de698bfce452630541c\">addTexCoord</a>( uvSetName );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (haveColors)</div>\n\
<div class=\"line\">            requirements.<a name=\"a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#a41fbeecafb7fc5f4aca13539dc008d07\">addColor</a>( colorSetName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Test for tangents and binormals</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> testBinormal = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (testBinormal)</div>\n\
<div class=\"line\">            requirements.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#a0887071ccdc8ec8ed899a651e6b842dd\">addBinormal</a>( uvSetName );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> testTangent= <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (testTangent)</div>\n\
<div class=\"line\">            requirements.<a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_requirements.html#a15b53d49b11c1b3b94f2a8645e415caf\">addTangent</a>( uvSetName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Cheesy test for filtering out 3 components for drawing.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_TEST_OGL_RENDERER_COMPONENT_FILTER_)</span></div>\n\
<div class=\"line\">        <a name=\"_a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html\">MFnSingleIndexedComponent</a> components;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> comp = components.<a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ae3b7a9c926f9770f786893bbea825d6b\">create</a>( <a name=\"a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a5ddabf9726f89e07cff62014221fe6fb\">MFn::kMeshPolygonComponent</a> );</div>\n\
<div class=\"line\">        components.<a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ac611414173082c0660277269ea6a4671\">addElement</a>( 1 );</div>\n\
<div class=\"line\">        components.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ac611414173082c0660277269ea6a4671\">addElement</a>( 200 );</div>\n\
<div class=\"line\">        components.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_single_indexed_component.html#ac611414173082c0660277269ea6a4671\">addElement</a>( 5000 );</div>\n\
<div class=\"line\">        <a name=\"_a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html\">MGeometry</a> geom = <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_manager.html#a07f0396a180a7db98a472bdcc292c119\">MGeometryManager::getGeometry</a>( dagPath, requirements, &amp;comp );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#else</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html\">MGeometry</a> geom = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_manager.html#a07f0396a180a7db98a472bdcc292c119\">MGeometryManager::getGeometry</a>( dagPath, requirements, NULL );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numPrims = geom.<a name=\"a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#a1a7e6f6f8f6d3be99f6f0524ab76ad85\">primitiveArrayCount</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (numPrims)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a name=\"_a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_primitive.html\">MGeometryPrimitive</a> prim = geom.<a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#ad0b84023dd720ca2b0b8b05893dab358\">primitiveArray</a>(0);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numElem = prim.<a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_primitive.html#ac9580a2ec3ad9690d0fb0ea0b3179fec\">elementCount</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (numElem)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">//MGeometryData::ElementType primType = prim.dataType();</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *idx = (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> *) prim.<a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_primitive.html#ad3b74abc0bab69f337c70783e73f5bef\">data</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get the position data</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <a name=\"_a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> pos = geom.<a name=\"a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#a117087d6021defde4f3202650c48f3ce\">position</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> * posPtr = (<span class=\"keywordtype\">float</span> * )pos.<a name=\"a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">bool</span> haveData = idx &amp;&amp; posPtr;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get the normals data</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> * normPtr = NULL;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (useNormals)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> norm = geom.<a name=\"a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#aa6680785c2ecf1772013b55775fbcc2d\">normal</a>();</div>\n\
<div class=\"line\">                    normPtr = (<span class=\"keywordtype\">float</span> * )norm.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Get the texture coordinate data</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> *uvPtr = NULL;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (haveTexture)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> uvs = geom.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#a6a5f2937533ee58b7c2c7c1d64c203c2\">texCoord</a>( uvSetName );</div>\n\
<div class=\"line\">                    uvPtr = (<span class=\"keywordtype\">float</span> *)uvs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numColorComponents = 4;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">float</span> *clrPtr = NULL;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (haveColors)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> clrs = geom.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#aa778ce908f5a55b137620434ae2ecaf4\">color</a>( colorSetName );</div>\n\
<div class=\"line\">                    clrPtr = (<span class=\"keywordtype\">float</span> *)clrs.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (testBinormal)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> binorm = geom.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#a221789fde015ae3d8b1c6ac68b90f497\">binormal</a>( uvSetName );</div>\n\
<div class=\"line\">                    clrPtr = (<span class=\"keywordtype\">float</span> *)binorm.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\">                    numColorComponents = 3;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (testTangent)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a> tang = geom.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry.html#af81121404b85458ac375447fdff3b31e\">tangent</a>( uvSetName );</div>\n\
<div class=\"line\">                    clrPtr = (<span class=\"keywordtype\">float</span> *)tang.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html#ac73113f892730ec6fce5da7e3273c9cd\">data</a>();</div>\n\
<div class=\"line\">                    numColorComponents = 3;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (haveData)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    drewSurface = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> drawWire = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <a name=\"_a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a>  matrix = dagPath.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a50\"></a>glMatrixMode( MGL_MODELVIEW );</div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a51\"></a>glPushMatrix();</div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a52\"></a>glMultMatrixd( &amp;(matrix.<a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][0]) );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #else</span></div>\n\
<div class=\"line\">                        ::glMatrixMode( GL_MODELVIEW );</div>\n\
<div class=\"line\">                        ::glPushMatrix();</div>\n\
<div class=\"line\">                        ::glMultMatrixd( &amp;(matrix.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][0]) );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Setup state, and routing.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> boundTexture = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (uvPtr)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image_file_info.html#a9b0c9320a802a00a718bcab75ba40550\">MImageFileInfo::MHwTextureType</a> hwType;</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MS::kSuccess</a> == <a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hw_texture_manager.html#a1135feb4729cedcfc70935c196fd0448\">MHwTextureManager::glBind</a>( textures[0], hwType ))</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            boundTexture = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a55\"></a>glTexParameteri(MGL_TEXTURE_2D, MGL_TEXTURE_WRAP_S, MGL_REPEAT);</div>\n\
<div class=\"line\">                            gGLFT-&gt;glTexParameteri(MGL_TEXTURE_2D, MGL_TEXTURE_WRAP_T, MGL_REPEAT);</div>\n\
<div class=\"line\">                            gGLFT-&gt;glTexParameteri(MGL_TEXTURE_2D, MGL_TEXTURE_MIN_FILTER, MGL_LINEAR);</div>\n\
<div class=\"line\">                            gGLFT-&gt;glTexParameteri(MGL_TEXTURE_2D, MGL_TEXTURE_MAG_FILTER, MGL_LINEAR);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (!clrPtr)</div>\n\
<div class=\"line\">                                gGLFT-&gt;<a name=\"a56\"></a>glColor4f( 1.0f, 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a57\"></a>glEnableClientState( MGL_TEXTURE_COORD_ARRAY );</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a58\"></a>glTexCoordPointer( 2, MGL_FLOAT, 0, uvPtr );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #else</span></div>\n\
<div class=\"line\">                            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);</div>\n\
<div class=\"line\">                            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);</div>\n\
<div class=\"line\">                            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);</div>\n\
<div class=\"line\">                            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (!clrPtr)</div>\n\
<div class=\"line\">                                glColor4f( 1.0f, 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\">                            glEnableClientState( GL_TEXTURE_COORD_ARRAY );</div>\n\
<div class=\"line\">                            glTexCoordPointer( 2, GL_FLOAT, 0, uvPtr );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                            drawWire = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (clrPtr)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        gGLFT-&gt;glEnableClientState(MGL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a59\"></a>glColorPointer( numColorComponents, MGL_FLOAT, 0, clrPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #else</span></div>\n\
<div class=\"line\">                        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        glColorPointer( numColorComponents, GL_FLOAT, 0, clrPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #endif</span></div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                    gGLFT-&gt;glEnableClientState( MGL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a60\"></a>glVertexPointer ( 3, MGL_FLOAT, 0, posPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #else</span></div>\n\
<div class=\"line\">                    glEnableClientState( GL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">                    glVertexPointer ( 3, GL_FLOAT, 0, posPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (normPtr)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        gGLFT-&gt;glEnableClientState( MGL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a61\"></a>glNormalPointer (    MGL_FLOAT, 0, normPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #else</span></div>\n\
<div class=\"line\">                        glEnableClientState( GL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">                        glNormalPointer (    GL_FLOAT, 0, normPtr );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #endif</span></div>\n\
<div class=\"line\">                        drawWire = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Draw</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (drawWire)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a62\"></a>glPolygonMode(MGL_FRONT_AND_BACK, MGL_LINE);</div>\n\
<div class=\"line\">                        gGLFT-&gt;<a name=\"a63\"></a>glDrawElements ( MGL_TRIANGLES, numElem, MGL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                        gGLFT-&gt;glPolygonMode(MGL_FRONT_AND_BACK, MGL_FILL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (clrPtr)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a64\"></a>glDisableClientState(MGL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #else</span></div>\n\
<div class=\"line\">                        glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</div>\n\
<div class=\"line\">                        glDrawElements ( GL_TRIANGLES, numElem, GL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                        glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (clrPtr)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            glDisableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #endif</span></div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a65\"></a>glEnable(MGL_POLYGON_OFFSET_FILL);</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a66\"></a>glPolygonOffset( 0.95f, 1.0f );</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        gGLFT-&gt;glDrawElements ( MGL_TRIANGLES, numElem, MGL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a67\"></a>glDisable(MGL_POLYGON_OFFSET_FILL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (normPtr)</div>\n\
<div class=\"line\">                            gGLFT-&gt;glDisableClientState( MGL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (boundTexture)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            gGLFT-&gt;glDisableClientState( MGL_TEXTURE_COORD_ARRAY );</div>\n\
<div class=\"line\">                            gGLFT-&gt;glDisable(MGL_TEXTURE_2D);</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a68\"></a>glBindTexture(MGL_TEXTURE_2D, 0);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (clrPtr)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            gGLFT-&gt;glDisableClientState(MGL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            gGLFT-&gt;<a name=\"a69\"></a>glColor3f( 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\">                            gGLFT-&gt;glPolygonMode(MGL_FRONT_AND_BACK, MGL_LINE);</div>\n\
<div class=\"line\">                            gGLFT-&gt;glDrawElements ( MGL_TRIANGLES, numElem, MGL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                            gGLFT-&gt;glPolygonMode(MGL_FRONT_AND_BACK, MGL_FILL);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #else</span></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            glEnable(GL_POLYGON_OFFSET_FILL);</div>\n\
<div class=\"line\">                            glPolygonOffset( 0.95f, 1.0f );</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        glDrawElements ( GL_TRIANGLES, numElem, GL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                            glDisable(GL_POLYGON_OFFSET_FILL);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (normPtr)</div>\n\
<div class=\"line\">                            glDisableClientState( GL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (boundTexture)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            glDisableClientState( GL_TEXTURE_COORD_ARRAY );</div>\n\
<div class=\"line\">                            glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">                            glBindTexture(GL_TEXTURE_2D, 0);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (clrPtr)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            glDisableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (active)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            ::glColor3f( 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\">                            glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</div>\n\
<div class=\"line\">                            glDrawElements ( GL_TRIANGLES, numElem, GL_UNSIGNED_INT, idx );</div>\n\
<div class=\"line\">                            glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #endif</span></div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Reset state, and routing.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                    gGLFT-&gt;glDisableClientState( MGL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a70\"></a>glPopMatrix();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #else</span></div>\n\
<div class=\"line\">                    glDisableClientState( GL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">                    ::glPopMatrix();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                    #endif</span></div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> drewSurface;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::drawBounds( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;dagPath,</div>\n\
<div class=\"line\">                                    <span class=\"keyword\">const</span> <a name=\"_a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> &amp;box)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a>  matrix = dagPath.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a229ff721947ec3ded47b5a071a7311ec\">inclusiveMatrix</a>();</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>  minPt = box.<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afb3213b98f3a6b4bda9759511e9b79a1\">min</a>();</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>  maxPt = box.<a name=\"a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a1dfdbea9d5560e4aa09d34bdbd82480c\">max</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> bottomLeftFront[3] =     { minPt.<a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, minPt.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, minPt.<a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> topLeftFront[3] =        { minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> bottomRightFront[3] =    { maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> topRightFront[3] =       { maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> bottomLeftBack[3] =      { minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> topLeftBack[3] =         { minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> bottomRightBack[3] =     { maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, minPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">double</span> topRightBack[3] =        { maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, maxPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a> };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">        gGLFT-&gt;glMatrixMode( MGL_MODELVIEW );</div>\n\
<div class=\"line\">        gGLFT-&gt;glPushMatrix();</div>\n\
<div class=\"line\">        gGLFT-&gt;glMultMatrixd( &amp;(matrix.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][0]) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        gGLFT-&gt;<a name=\"a78\"></a>glBegin(MGL_LINE_STRIP);</div>\n\
<div class=\"line\">        gGLFT-&gt;<a name=\"a79\"></a>glVertex3dv( bottomLeftFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( bottomLeftBack );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( topLeftBack );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( topLeftFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( bottomLeftFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( bottomRightFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( bottomRightBack);</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( topRightBack );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( topRightFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv( bottomRightFront );</div>\n\
<div class=\"line\">        gGLFT-&gt;<a name=\"a80\"></a>glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        gGLFT-&gt;glBegin(MGL_LINES);</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(bottomLeftBack);</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(bottomRightBack);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(topLeftBack);</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(topRightBack);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(topLeftFront);</div>\n\
<div class=\"line\">        gGLFT-&gt;glVertex3dv(topRightFront);</div>\n\
<div class=\"line\">        gGLFT-&gt;glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        gGLFT-&gt;glPopMatrix();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">        #else</span></div>\n\
<div class=\"line\">        ::glMatrixMode( GL_MODELVIEW );</div>\n\
<div class=\"line\">        ::glPushMatrix();</div>\n\
<div class=\"line\">        ::glMultMatrixd( &amp;(matrix.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0][0]) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ::glBegin(GL_LINE_STRIP);</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomLeftFront );</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomLeftBack );</div>\n\
<div class=\"line\">        ::glVertex3dv( topLeftBack );</div>\n\
<div class=\"line\">        ::glVertex3dv( topLeftFront );</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomLeftFront );</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomRightFront );</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomRightBack);</div>\n\
<div class=\"line\">        ::glVertex3dv( topRightBack );</div>\n\
<div class=\"line\">        ::glVertex3dv( topRightFront );</div>\n\
<div class=\"line\">        ::glVertex3dv( bottomRightFront );</div>\n\
<div class=\"line\">        ::glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ::glBegin(GL_LINES);</div>\n\
<div class=\"line\">        ::glVertex3dv(bottomLeftBack);</div>\n\
<div class=\"line\">        ::glVertex3dv(bottomRightBack);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ::glVertex3dv(topLeftBack);</div>\n\
<div class=\"line\">        ::glVertex3dv(topRightBack);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ::glVertex3dv(topLeftFront);</div>\n\
<div class=\"line\">        ::glVertex3dv(topRightFront);</div>\n\
<div class=\"line\">        ::glEnd();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        ::glPopMatrix();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">        #endif</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">OpenGLViewportRenderer::setupLighting()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">//glEnable(GL_LIGHT0);</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//glEnable(GL_LIGHTING);</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Comment out #define to see how pruning works in this example</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// #define _DEBUG_TRAVERSAL_PRUNING</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Use a custom traverser class.</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>MsurfaceDrawTraversal : <span class=\"keyword\">public</span> <a name=\"_a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html\">MDrawTraversal</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">virtual</span> <span class=\"keywordtype\">bool</span>        <a name=\"a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#aea51f24eb5f0b51318d9f3091f2f6535\">filterNode</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;traversalItem )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> prune = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Check to only prune shapes, not transforms.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pname = traversalItem.<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ac4b316731c4019c927aa63731d4749e8\">fullPathName</a>() ;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( traversalItem.<a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a7c6cdc0f5380b205fcf6e524e307b47f\">childCount</a>() == 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !traversalItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>) &amp;&amp;</div>\n\
<div class=\"line\">                !traversalItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>) &amp;&amp;</div>\n\
<div class=\"line\">                !traversalItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a305a1a7e615931a31f8d932bb4f3a4c1\">MFn::kSubdiv</a>) &amp;&amp;</div>\n\
<div class=\"line\">                !traversalItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a820f123f996c72c300977750d929a07d\">MFn::kSketchPlane</a> ) &amp;&amp;</div>\n\
<div class=\"line\">                !traversalItem.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a71922db719316890115e11f622c07b96\">MFn::kGroundPlane</a> )</div>\n\
<div class=\"line\">                )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;Prune path [ %s ]\\n&quot;</span>, pname.<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">                prune = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;Don&#39;t prune path [ %s ]\\n&quot;</span>, pname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> prune;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> OpenGLViewportRenderer::renderToTarget( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_rendering_info.html\">MRenderingInfo</a> &amp;renderInfo )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Render directly to current OpenGL target.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a name=\"_a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_target.html\">MRenderTarget</a> &amp;renderTarget = renderInfo.<a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_rendering_info.html#a3a641f5ee926a4cf398e710d5ab7630f\">renderTarget</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw the world space axis</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">    gGLFT-&gt;glDisable(MGL_LIGHTING);</div>\n\
<div class=\"line\">    gGLFT-&gt;glBegin(MGL_LINES);</div>\n\
<div class=\"line\">    gGLFT-&gt;glColor3f( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;<a name=\"a92\"></a>glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glVertex3f( 3.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    gGLFT-&gt;glColor3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glVertex3f( 0.0f, 3.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    gGLFT-&gt;glColor3f( 0.0f, 0.0f, 1.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glVertex3f( 0.0f, 0.0f, 3.0f );</div>\n\
<div class=\"line\">    gGLFT-&gt;glEnd();</div>\n\
<div class=\"line\">    gGLFT-&gt;glEnable(MGL_DEPTH_TEST);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #else</span></div>\n\
<div class=\"line\">    ::glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\">    ::glBegin(GL_LINES);</div>\n\
<div class=\"line\">    ::glColor3f( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 3.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ::glColor3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 0.0f, 3.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ::glColor3f( 0.0f, 0.0f, 1.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    ::glVertex3f( 0.0f, 0.0f, 3.0f );</div>\n\
<div class=\"line\">    ::glEnd();</div>\n\
<div class=\"line\">    glEnable(GL_DEPTH_TEST);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw some surfaces...</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> useDrawTraversal = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (useDrawTraversal)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">        printf(<span class=\"stringliteral\">&quot;==========================\\n&quot;</span>);</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;cameraPath = renderInfo.<a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_rendering_info.html#a07e8bf96bcd0ec1fffd88c631a5c82ff\">cameraPath</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (cameraPath.<a name=\"a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a1da4467477df2e6955b9917434a94074\">isValid</a>())</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> pruneDuringTraversal = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// You can actually keep the traverser classes around</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// if desired. Here we just create temporary traversers</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// on the fly.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html\">MDrawTraversal</a> *trav = NULL;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (pruneDuringTraversal)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                trav = <span class=\"keyword\">new</span> MsurfaceDrawTraversal;</div>\n\
<div class=\"line\">                trav-&gt;<a name=\"a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#afb2ac0dd09dd73700a4258f091c04a1d\">enableFiltering</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                trav = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html\">MDrawTraversal</a>;</div>\n\
<div class=\"line\">                trav-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#afb2ac0dd09dd73700a4258f091c04a1d\">enableFiltering</a>( <span class=\"keyword\">false</span> );</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!trav)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;Warning: failed to create a traversal class !\\n&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            trav-&gt;<a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a54bc763b89ac8604bfd0a7c88c0044e1\">setFrustum</a>( cameraPath, renderTarget.<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_target.html#a7b736ec9a05be5c498760d35a0406ed3\">width</a>(),</div>\n\
<div class=\"line\">                renderTarget.<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_render_target.html#aa420a28166e708e3f8b9ecc8e527fc09\">height</a>() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!trav-&gt;<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a3560c3bd79408c8cd0615889d349c1b3\">frustumValid</a>())</div>\n\
<div class=\"line\">                printf(<span class=\"stringliteral\">&quot;Warning : Frustum is invalid !\\n&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            trav-&gt;<a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a5f1630ceda51de2240591c5409cb3790\">traverse</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numItems = trav-&gt;<a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a890a36866f5602d44153c818f81d8ef5\">numberOfItems</a>();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">            printf(<span class=\"stringliteral\">&quot;There are %d items on the traversal list\\n&quot;</span>, numItems );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (numItems)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                setupLighting();</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (i=0; i&lt;numItems; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> path;</div>\n\
<div class=\"line\">                trav-&gt;<a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#ad398b50125777b1021b33f16584370a3\">itemPath</a>(i, path);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a1da4467477df2e6955b9917434a94074\">isValid</a>())</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> drawIt = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Default traverer may have view manips showing up.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// This is currently a known Maya bug.</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!pruneDuringTraversal)</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> ( path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a name=\"a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a1ffa06cc268579e3f936af4fa5b0e7cc\">MFn::kViewManip</a> ))</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(_DEBUG_TRAVERSAL_PRUNING)</span></div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pname = path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ac4b316731c4019c927aa63731d4749e8\">fullPathName</a>() ;</div>\n\
<div class=\"line\">                    printf(<span class=\"stringliteral\">&quot;Draw path [%d][ %s ]\\n&quot;</span>, i, pname.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>());</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Draw surfaces (polys, nurbs, subdivs)</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> active = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">bool</span> templated = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> ( path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>) ||</div>\n\
<div class=\"line\">                         path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>) ||</div>\n\
<div class=\"line\">                         path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a305a1a7e615931a31f8d932bb4f3a4c1\">MFn::kSubdiv</a>) )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        drawIt = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (trav-&gt;<a name=\"a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a372f897e3c752448f55cf1ab61f2bddf\">itemHasStatus</a>( i, <a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a726ca809ffd3d67ab4b8476646f26635aeb81f2660649dd45dbf8316826c2e96c\">MDrawTraversal::kActiveItem</a> ))</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            active = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                            gGLFT-&gt;glColor3f( 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #else</span></div>\n\
<div class=\"line\">                            ::glColor3f( 1.0f, 1.0f, 1.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #endif</span></div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (trav-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a372f897e3c752448f55cf1ab61f2bddf\">itemHasStatus</a>( i, <a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_traversal.html#a726ca809ffd3d67ab4b8476646f26635a4c661de51d08a364ca2d91c38122e9e6\">MDrawTraversal::kTemplateItem</a> ))</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                            gGLFT-&gt;glColor3f( 0.2f, 0.2f, 0.2f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #else</span></div>\n\
<div class=\"line\">                            ::glColor3f( 0.2f, 0.2f, 0.2f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #endif</span></div>\n\
<div class=\"line\">                            templated = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ))</div>\n\
<div class=\"line\">                                gGLFT-&gt;glColor3f( 0.286f, 0.706f, 1.0f );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>))</div>\n\
<div class=\"line\">                                gGLFT-&gt;glColor3f( 0.486f, 0.306f, 1.0f );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                                gGLFT-&gt;glColor3f( 0.886f, 0.206f, 1.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #else</span></div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ))</div>\n\
<div class=\"line\">                                ::glColor3f( 0.286f, 0.706f, 1.0f );</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a016a93d2c00725d6ca8021dffbd2a0a8\">MFn::kNurbsSurface</a>))</div>\n\
<div class=\"line\">                                ::glColor3f( 0.486f, 0.306f, 1.0f );</div>\n\
<div class=\"line\">                            else</div>\n\
<div class=\"line\">                                ::glColor3f( 0.886f, 0.206f, 1.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                            #endif</span></div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Draw the ground plane</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a820f123f996c72c300977750d929a07d\">MFn::kSketchPlane</a> ) ||</div>\n\
<div class=\"line\">                             path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#abea5b1e5057d0e1088877be2573be47b\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a71922db719316890115e11f622c07b96\">MFn::kGroundPlane</a> ))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        drawIt = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">                        gGLFT-&gt;glColor3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #else</span></div>\n\
<div class=\"line\">                        ::glColor3f( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">                        #endif</span></div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (drawIt)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <a name=\"_a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNode(path);</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (!drawSurface( path, active, templated ))</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> box = dagNode.boundingBox();</div>\n\
<div class=\"line\">                            drawBounds( path, box );</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (trav)</div>\n\
<div class=\"line\">                <span class=\"keyword\">delete</span> trav;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Draw everything in the scene, without any culling or visibility</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// testing. This is just comparison code, and should never be</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// enabled, unless you want to do post-filtering...</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1\">MItDag::TraversalType</a> traversalType = <a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html#a1545968b4f810358b53ae9844bce6bd1a6e92a8757afce03be51397f0b518f4c5\">MItDag::kDepthFirst</a>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7\">MFn::Type</a> filter = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_it_dag.html\">MItDag</a> dagIterator( traversalType, filter, &amp;status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> ( ; !dagIterator.isDone(); dagIterator.next() )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> dagPath;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            status = dagIterator.getPath(dagPath);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">                status.<a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MItDag::getPath&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNode(dagPath, &amp;status);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">                status.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnDagNode constructor&quot;</span>);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> box = dagNode.boundingBox();</div>\n\
<div class=\"line\"><span class=\"preprocessor\">            #if defined(_USE_MGL_FT_)</span></div>\n\
<div class=\"line\">            gGLFT-&gt;glColor3f( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">            #else</span></div>\n\
<div class=\"line\">            ::glColor3f( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\"><span class=\"preprocessor\">            #endif</span></div>\n\
<div class=\"line\">            drawBounds( dagPath, box );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";