var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2017\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2016-06-16\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>DX11ViewportRenderer/DX11ResourceManager.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'_d_x11_viewport_renderer_2_d_x11_resource_manager_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>DX11ViewportRenderer/DX11ResourceManager.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">DX11ViewportRenderer/DX11ResourceManager.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined(DX11_SUPPORTED)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if _MSC_VER &gt;= 1700</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable: 4005 )</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning (disable:4239)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;stdio.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;DX11ResourceManager.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnCamera.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MAngle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MItDag.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MMatrix.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDagPath.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnDagNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MBoundingBox.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MNodeMessage.h&gt;</span> <span class=\"comment\">// For monitor geometry list</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlugArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnLight.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnSpotLight.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MColor.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatMatrix.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Monitors on Maya scene graph</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Handle node dirty changes</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryDirtyCallback( <span class=\"keywordtype\">void</span>* clientData )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GeometryItem *item = (GeometryItem *)clientData;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDirtyMonitor ); </div>\n\
<div class=\"line\">        item-&gt;m_objectDirtyMonitor = 0;</div>\n\
<div class=\"line\">        item-&gt;m_objectPath = <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>(); <span class=\"comment\">// Assign in valid dag path to mark as &quot;bad&quot;</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Handle node attr change </span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geomteryChangedCallback( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a2f710b68ff75e657f3be4b17a9dbe1e7\">MNodeMessage::AttributeMessage</a> msg, <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; otherPlug, <span class=\"keywordtype\">void</span>* clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GeometryItem *item = (GeometryItem *)clientData;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectChangeMonitor );    </div>\n\
<div class=\"line\">        item-&gt;m_objectChangeMonitor = 0;</div>\n\
<div class=\"line\">        item-&gt;m_objectPath = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>(); <span class=\"comment\">// Assign in valid dag path to mark as &quot;bad&quot;</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> textureChangedCallback( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a2f710b68ff75e657f3be4b17a9dbe1e7\">MNodeMessage::AttributeMessage</a> msg, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a> &amp; otherPlug, <span class=\"keywordtype\">void</span>* clientData)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    TextureItem *item = (TextureItem *)clientData;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectChangeMonitor );    </div>\n\
<div class=\"line\">        item-&gt;m_objectChangeMonitor = 0;</div>\n\
<div class=\"line\">        item-&gt;m_mayaNode = <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ae6af14e0aa2c92bdda88c81280e1d122\">MObject::kNullObj</a>; <span class=\"comment\">// Assign in valid dag path to mark as &quot;bad&quot;</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Handle node delete</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> geometryDeleteCallback( <a name=\"_a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node,</div>\n\
<div class=\"line\">                        <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>&amp; modifier,</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">void</span>* clientData )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GeometryItem *item = (GeometryItem *)clientData;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDeleteMonitor );    </div>\n\
<div class=\"line\">        item-&gt;m_objectDeleteMonitor = 0;</div>\n\
<div class=\"line\">        item-&gt;m_objectPath = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>(); <span class=\"comment\">// Assign in valid dag path to mark as &quot;bad&quot;</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> textureDeleteCallback( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;node,</div>\n\
<div class=\"line\">                        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_d_g_modifier.html\">MDGModifier</a>&amp; modifier,</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">void</span>* clientData )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    TextureItem *item = (TextureItem *)clientData;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDeleteMonitor );    </div>\n\
<div class=\"line\">        item-&gt;m_objectDeleteMonitor = 0;</div>\n\
<div class=\"line\">        item-&gt;m_mayaNode = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ae6af14e0aa2c92bdda88c81280e1d122\">MObject::kNullObj</a>; <span class=\"comment\">// Assign in valid dag path to mark as &quot;bad&quot;</span></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">DX11ResourceManager::DX11ResourceManager()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    initializeDefaultCamera();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\">DX11ResourceManager::~DX11ResourceManager()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">bool</span> onlyInvalidItems = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    clearResources(onlyInvalidItems, <span class=\"keyword\">true</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>                    </div>\n\
<div class=\"line\">DX11ResourceManager::initializeDefaultCamera()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the default camera being 10 up and 10 back, with Y-up (to match Maya).</span></div>\n\
<div class=\"line\">    m_camera.m_vEyePt = XMFLOAT3( 0.0f, 10.0f, -10.0f );</div>\n\
<div class=\"line\">    m_camera.m_vLookatPt = XMFLOAT3( 0.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    m_camera.m_vUpVec = XMFLOAT3( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set up default clip planes, and FOV to match Maya&#39;s</span></div>\n\
<div class=\"line\">    m_camera.m_FieldOfView = 45.0f;</div>\n\
<div class=\"line\">    m_camera.m_nearClip = 0.1f;</div>\n\
<div class=\"line\">    m_camera.m_farClip = 1000.0f;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span>                    </div>\n\
<div class=\"line\">DX11ResourceManager::translateCamera( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp;cameraPath )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Translate Maya&#39;s camera </span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> translatedCamera = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (cameraPath.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a1da4467477df2e6955b9917434a94074\">isValid</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a name=\"_a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">        <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_camera.html\">MFnCamera</a> camera (cameraPath, &amp;status);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> ( !status ) {</div>\n\
<div class=\"line\">            status.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a1f01a4748fea4d8bcced082df83f804d\">perror</a>(<span class=\"stringliteral\">&quot;MFnCamera constructor&quot;</span>);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            translatedCamera = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> eyePoint = camera.eyePoint( <a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a> );</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> lookAtPt = camera.centerOfInterestPoint( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a> );</div>\n\
<div class=\"line\">            <a name=\"_a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html\">MVector</a> upDirection = camera.upDirection ( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8a45a60f04ac9114f0d6e865a6285f40b2\">MSpace::kWorld</a> );</div>\n\
<div class=\"line\">            <a name=\"_a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_matrix.html\">MFloatMatrix</a> projMatrix = camera.projectionMatrix();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> horizontalFieldOfView = <a name=\"_a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_angle.html\">MAngle</a>( <span class=\"comment\">/* camera.verticalFieldOfView() / */</span> camera.horizontalFieldOfView()</div>\n\
<div class=\"line\">                ).asDegrees();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> nearClippingPlane = camera.nearClippingPlane();</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> farClippingPlane = camera.farClippingPlane();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Convert API values to internal native storage.</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            m_camera.m_vEyePt = XMFLOAT3((<span class=\"keywordtype\">float</span>)eyePoint.<a name=\"a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, (<span class=\"keywordtype\">float</span>)eyePoint.<a name=\"a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, (<span class=\"keywordtype\">float</span>)eyePoint.<a name=\"a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>);</div>\n\
<div class=\"line\">            m_camera.m_vLookatPt = XMFLOAT3((<span class=\"keywordtype\">float</span>)lookAtPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, (<span class=\"keywordtype\">float</span>)lookAtPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>, (<span class=\"keywordtype\">float</span>)lookAtPt.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>);</div>\n\
<div class=\"line\">            m_camera.m_vUpVec = XMFLOAT3((<span class=\"keywordtype\">float</span>)upDirection.<a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>, (<span class=\"keywordtype\">float</span>)upDirection.<a name=\"a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html#ab927965981178aa1fba979a37168db2a\">y</a>, (<span class=\"keywordtype\">float</span>)upDirection.<a name=\"a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_vector.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>);</div>\n\
<div class=\"line\">            m_camera.m_FieldOfView = (float)horizontalFieldOfView;</div>\n\
<div class=\"line\">            m_camera.m_nearClip = (float)nearClippingPlane;</div>\n\
<div class=\"line\">            m_camera.m_farClip = (float)farClippingPlane;</div>\n\
<div class=\"line\">            m_camera.m_isOrtho = camera.isOrtho();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        initializeDefaultCamera();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> translatedCamera;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Get the geometry buffers for this bad boy</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">D3DGeometry* DX11ResourceManager::getGeometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; dagPath, ID3D11Device* D3D)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    D3DGeometry* Geometry = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Look for a cached mesh ...</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check to see if object is in the list, if not added a</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// new item and cache some geometry</span></div>\n\
<div class=\"line\">    GeometryItem *itemFound = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    GeometryItemList::const_iterator it, end_it;</div>\n\
<div class=\"line\">    end_it = m_geometryItemList.end();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (it = m_geometryItemList.begin(); it != end_it;  it++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GeometryItem *item = *it;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item &amp;&amp; item-&gt;m_objectPath == dagPath)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            itemFound = item;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Build a new item, and add it to the list</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!itemFound)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        itemFound = <span class=\"keyword\">new</span> GeometryItem;</div>\n\
<div class=\"line\">        itemFound-&gt;m_objectPath = dagPath;</div>\n\
<div class=\"line\">        Geometry = itemFound-&gt;m_objectGeometry = <span class=\"keyword\">new</span> D3DGeometry();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (Geometry)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            Geometry-&gt;Populate( dagPath, D3D);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_dag_node.html\">MFnDagNode</a> dagNode(dagPath);</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;obj = (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> &amp;) dagNode.object();</div>\n\
<div class=\"line\">        itemFound-&gt;m_objectDeleteMonitor = </div>\n\
<div class=\"line\">            <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a71d104c41cfd465708d0151b94a38810\">MNodeMessage::addNodeAboutToDeleteCallback</a>( obj, geometryDeleteCallback, (<span class=\"keywordtype\">void</span> *)itemFound ); <span class=\"comment\">// Add callback for node deleted.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Don&#39;t get attr change messages during playback, so use node dirty also..sigh</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//itemFound-&gt;m_objectChangeMonitor = </span></div>\n\
<div class=\"line\">        <span class=\"comment\">//  MNodeMessage::addAttributeChangedCallback( obj, geometryChangedCallback, (void *)itemFound); // Add callback for attr changed.</span></div>\n\
<div class=\"line\">        itemFound-&gt;m_objectChangeMonitor = 0;</div>\n\
<div class=\"line\">        itemFound-&gt;m_objectChangeMonitor = </div>\n\
<div class=\"line\">            <a name=\"a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a449a233d8c1f0d263a4ffd1f8dbe17b6\">MNodeMessage::addNodeDirtyCallback</a>( obj, geometryDirtyCallback, (<span class=\"keywordtype\">void</span> *)itemFound); <span class=\"comment\">// Add callback for node changed.       </span></div>\n\
<div class=\"line\">        m_geometryItemList.push_back( itemFound );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Geometry = itemFound-&gt;m_objectGeometry;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a new set of buffers for this mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> Geometry;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Get the DirectX texture for a Maya texture node</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">D3DTexture* DX11ResourceManager::getTexture( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; textureNode)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    D3DTexture* Texture = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Look for a cached texture ...</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check to see if object is in the list, if not added a</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// new item and cache some texture</span></div>\n\
<div class=\"line\">    TextureItem *itemFound = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    TextureItemList::const_iterator it, end_it;</div>\n\
<div class=\"line\">    end_it = m_textureItemList.end();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (it = m_textureItemList.begin(); it != end_it;  it++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        TextureItem *item = *it;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item &amp;&amp; item-&gt;m_mayaNode.object() == textureNode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            itemFound = item;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// Build a new item, and add it to the list</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!itemFound)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        itemFound = <span class=\"keyword\">new</span> TextureItem();</div>\n\
<div class=\"line\">        itemFound-&gt;m_mayaNode = textureNode;</div>\n\
<div class=\"line\">        Texture = itemFound-&gt;m_texture = <span class=\"keyword\">new</span> D3DTexture( textureNode);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        itemFound-&gt;m_objectDeleteMonitor = </div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a71d104c41cfd465708d0151b94a38810\">MNodeMessage::addNodeAboutToDeleteCallback</a>( textureNode, textureDeleteCallback, (<span class=\"keywordtype\">void</span> *)itemFound ); <span class=\"comment\">// Add callback for node deleted.</span></div>\n\
<div class=\"line\">        itemFound-&gt;m_objectChangeMonitor = </div>\n\
<div class=\"line\">            <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_node_message.html#a92573fa0091e7c9de4412b467e928810\">MNodeMessage::addAttributeChangedCallback</a>( textureNode, textureChangedCallback, (<span class=\"keywordtype\">void</span> *)itemFound); <span class=\"comment\">// Add callback for attr changed.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        m_textureItemList.push_back( itemFound );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        Texture = itemFound-&gt;m_texture;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create a new set of buffers for this mesh</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> Texture;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Helper for compiling shaders with D3DX11</span></div>\n\
<div class=\"line\"><span class=\"comment\">//--------------------------------------------------------------------------------------</span></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> HRESULT CompileShaderFromFile( <span class=\"keyword\">const</span> <span class=\"keywordtype\">char</span>* szFileName, LPCSTR szEntryPoint, LPCSTR szShaderModel, ID3DBlob** ppBlobOut )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    HRESULT hr = S_OK;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifndef D3DCOMPILE_ENABLE_STRICTNESS</span></div>\n\
<div class=\"line\"><span class=\"comment\">// allow the plug-in to compile against the Maya 2011 default DXSDK version (August 2009)</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define D3DCOMPILE_ENABLE_STRICTNESS D3D10_SHADER_ENABLE_STRICTNESS</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define D3DCOMPILE_DEBUG D3D10_SHADER_DEBUG</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    </div>\n\
<div class=\"line\">    DWORD dwShaderFlags = D3DCOMPILE_ENABLE_STRICTNESS;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#if defined( DEBUG ) || defined( _DEBUG )</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the D3DCOMPILE_DEBUG flag to embed debug information in the shaders.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Setting this flag improves the shader debugging experience, but still allows </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the shaders to be optimized and to run exactly the way they will run in </span></div>\n\
<div class=\"line\">    <span class=\"comment\">// the release configuration of this program.</span></div>\n\
<div class=\"line\">    dwShaderFlags |= D3DCOMPILE_DEBUG;</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ID3DBlob* pErrorBlob;</div>\n\
<div class=\"line\">    hr = D3DX11CompileFromFile( szFileName, NULL, NULL, szEntryPoint, szShaderModel, </div>\n\
<div class=\"line\">        dwShaderFlags, 0, NULL, ppBlobOut, &amp;pErrorBlob, NULL );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( FAILED(hr) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( pErrorBlob != NULL )</div>\n\
<div class=\"line\">            <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>( (<span class=\"keywordtype\">char</span>*)pErrorBlob-&gt;GetBufferPointer() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( pErrorBlob ) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> hr;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( pErrorBlob ) pErrorBlob-&gt;Release();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> S_OK;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span>                    </div>\n\
<div class=\"line\">DX11ResourceManager::initializeDefaultSurfaceEffect( <span class=\"keyword\">const</span> <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; effectsLocation, ID3D11Device* D3D,</div>\n\
<div class=\"line\">                                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; effectName, </div>\n\
<div class=\"line\">                                                    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; vsName, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; psName,</div>\n\
<div class=\"line\">                                                    <span class=\"keyword\">const</span> D3D11_INPUT_ELEMENT_DESC* layout, <span class=\"keywordtype\">int</span> numLayoutElements )</div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Description:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      Initialize default surface effects found in a given directory.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    HRESULT hres;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> effectLocation = effectsLocation + <span class=\"stringliteral\">&quot;\\\\&quot;</span> + effectName + <span class=\"stringliteral\">&quot;.hlsl&quot;</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ID3DBlob* pVSBlob = NULL;</div>\n\
<div class=\"line\">    hres = CompileShaderFromFile( effectLocation.<a name=\"a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), vsName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), <span class=\"stringliteral\">&quot;vs_4_0&quot;</span>, &amp;pVSBlob );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (FAILED(hres))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Failed to compile vertex shader &quot;</span> + vsName + <span class=\"stringliteral\">&quot; in file: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\">    ID3D11VertexShader* pVertexShader = NULL;</div>\n\
<div class=\"line\">    hres = D3D-&gt;CreateVertexShader( pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), NULL, &amp;pVertexShader );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (FAILED(hres))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Failed to create vertex shader &quot;</span> + vsName + <span class=\"stringliteral\">&quot; in file: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        pVSBlob-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    ID3D11InputLayout* pVertexLayout = NULL;</div>\n\
<div class=\"line\">    hres = D3D-&gt;CreateInputLayout( layout, numLayoutElements, pVSBlob-&gt;GetBufferPointer(), pVSBlob-&gt;GetBufferSize(), &amp;pVertexLayout );</div>\n\
<div class=\"line\">    pVSBlob-&gt;Release();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (FAILED(hres))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Failed to create input layout for file: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ID3DBlob* pPSBlob = NULL;</div>\n\
<div class=\"line\">    hres = CompileShaderFromFile( effectLocation.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), psName.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html#aa9ab612f356c53479afc4c648c9ef94d\">asChar</a>(), <span class=\"stringliteral\">&quot;ps_4_0&quot;</span>, &amp;pPSBlob );</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (FAILED(hres))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Failed to compile pixel shader &quot;</span> + psName + <span class=\"stringliteral\">&quot; in file: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        pVertexShader-&gt;Release();</div>\n\
<div class=\"line\">        pVertexLayout-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\">    ID3D11PixelShader* pPixelShader = NULL;</div>\n\
<div class=\"line\">    hres = D3D-&gt;CreatePixelShader( pPSBlob-&gt;GetBufferPointer(), pPSBlob-&gt;GetBufferSize(), NULL, &amp;pPixelShader );</div>\n\
<div class=\"line\">    pPSBlob-&gt;Release();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (FAILED(hres))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Failed to create pixel shader &quot;</span> + psName + <span class=\"stringliteral\">&quot; in file: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        pVertexShader-&gt;Release();</div>\n\
<div class=\"line\">        pVertexLayout-&gt;Release();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }   </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Create a new effect item</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>(<span class=\"stringliteral\">&quot;Maya default pixel shader loaded: &quot;</span> + effectLocation);</div>\n\
<div class=\"line\">        SurfaceEffectItem *pei = <span class=\"keyword\">new</span> SurfaceEffectItem;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (pei)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            pei-&gt;fVertexShader = pVertexShader;</div>\n\
<div class=\"line\">            pei-&gt;fPixelShader = pPixelShader;</div>\n\
<div class=\"line\">            pei-&gt;fInputLayout = pVertexLayout;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            m_SurfaceEffectItemList[ effectName.asChar() ] = pei;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span>                    </div>\n\
<div class=\"line\">DX11ResourceManager::clearResources(<span class=\"keywordtype\">bool</span> onlyInvalidItems, <span class=\"keywordtype\">bool</span> clearShaders)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    GeometryItemList::const_iterator git, end_git;</div>\n\
<div class=\"line\">    end_git = m_geometryItemList.end();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (git = m_geometryItemList.begin(); git != end_git;  git++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        GeometryItem *item = *git;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!onlyInvalidItems || (onlyInvalidItems &amp;&amp; !(item-&gt;m_objectPath.isValid() )))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectGeometry)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">delete</span> item-&gt;m_objectGeometry;</div>\n\
<div class=\"line\">                    item-&gt;m_objectGeometry = NULL;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                item-&gt;m_objectPath = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>(); <span class=\"comment\">// Assign invalid dag path</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Kill the delete monitor</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectDeleteMonitor)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDeleteMonitor );</div>\n\
<div class=\"line\">                    item-&gt;m_objectDeleteMonitor = 0;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"comment\">// Kill the attr changed monitor</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectChangeMonitor)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectChangeMonitor );    </div>\n\
<div class=\"line\">                    item-&gt;m_objectChangeMonitor = 0;                    </div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"comment\">// Kill node dirty monitor</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectDirtyMonitor)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDirtyMonitor ); </div>\n\
<div class=\"line\">                    item-&gt;m_objectDirtyMonitor = 0;                                     </div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!onlyInvalidItems)</div>\n\
<div class=\"line\">        m_geometryItemList.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    TextureItemList::const_iterator tit, end_tit;</div>\n\
<div class=\"line\">    end_tit = m_textureItemList.end();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (tit = m_textureItemList.begin(); tit != end_tit;  tit++)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        TextureItem *item = *tit;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!onlyInvalidItems || (onlyInvalidItems &amp;&amp; !(item-&gt;m_mayaNode.isValid() )))</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_texture)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keyword\">delete</span> item-&gt;m_texture;</div>\n\
<div class=\"line\">                    item-&gt;m_texture = NULL;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                item-&gt;m_mayaNode = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#ae6af14e0aa2c92bdda88c81280e1d122\">MObject::kNullObj</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Kill the delete monitor</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectDeleteMonitor)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectDeleteMonitor );</div>\n\
<div class=\"line\">                    item-&gt;m_objectDeleteMonitor = 0;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"comment\">// Kill the attr changed monitor</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item-&gt;m_objectChangeMonitor)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_message.html#a50fe995add3ce133b8b56551abb4ed09\">MMessage::removeCallback</a>( item-&gt;m_objectChangeMonitor );    </div>\n\
<div class=\"line\">                    item-&gt;m_objectChangeMonitor = 0;                    </div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!onlyInvalidItems)</div>\n\
<div class=\"line\">        m_textureItemList.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (clearShaders)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Clean up surface effects list</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            SurfaceEffectItemList::const_iterator eit, end_eit;</div>\n\
<div class=\"line\">            end_eit = m_SurfaceEffectItemList.end();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (eit = m_SurfaceEffectItemList.begin(); eit != end_eit;  eit++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                SurfaceEffectItem *item = eit-&gt;second;</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (item)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (item-&gt;fVertexShader)</div>\n\
<div class=\"line\">                        item-&gt;fVertexShader-&gt;Release();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (item-&gt;fPixelShader)</div>\n\
<div class=\"line\">                        item-&gt;fPixelShader-&gt;Release();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (item-&gt;fInputLayout)</div>\n\
<div class=\"line\">                        item-&gt;fInputLayout-&gt;Release();</div>\n\
<div class=\"line\">                    <span class=\"keyword\">delete</span> item;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            m_SurfaceEffectItemList.clear();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif </span><span class=\"comment\">/* DX11_SUPPORTED */</span><span class=\"preprocessor\"></span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div><br></div>\n\
   </div></body>\n\
</html>\n\
";