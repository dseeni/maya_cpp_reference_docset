var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>geometryOverrideHighPerformance/geometryOverrideHighPerformanceHelper.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'geometry_override_high_performance_2geometry_override_high_performance_helper_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>geometryOverrideHighPerformance/geometryOverrideHighPerformanceHelper.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/files.html\"><span>Files</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">geometryOverrideHighPerformance/geometryOverrideHighPerformanceHelper.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2018 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;geometryOverrideHighPerformanceHelper.h&quot;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">constexpr <span class=\"keywordtype\">float</span> PI = 3.14159265358979323846f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> createSphere(<span class=\"keywordtype\">float</span> radius,</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> sliceCount,</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> stackCount,</div>\n\
<div class=\"line\">    Float3Array&amp; positions,</div>\n\
<div class=\"line\">    Float3Array&amp; normals,</div>\n\
<div class=\"line\">    Float3Array&amp; tangents,</div>\n\
<div class=\"line\">    Float3Array&amp; biTangents,</div>\n\
<div class=\"line\">    Float2Array&amp; texCoords,</div>\n\
<div class=\"line\">    IndexList&amp;   indices,</div>\n\
<div class=\"line\">    <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>&amp; boundingBox</div>\n\
<div class=\"line\">)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    positions.clear();</div>\n\
<div class=\"line\">    normals.clear();</div>\n\
<div class=\"line\">    tangents.clear();</div>\n\
<div class=\"line\">    texCoords.clear();</div>\n\
<div class=\"line\">    indices.clear();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> std::size_t vertexCount =  stackCount * sliceCount + 1;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> std::size_t indexCount  = sliceCount * 3 * 2 + (sliceCount - 2) * sliceCount * 6;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    positions.reserve(vertexCount);</div>\n\
<div class=\"line\">    normals.reserve(vertexCount);</div>\n\
<div class=\"line\">    tangents.reserve(vertexCount);</div>\n\
<div class=\"line\">    texCoords.reserve(vertexCount);</div>\n\
<div class=\"line\">    indices.reserve(indexCount);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// vertex on the top of the sphere</span></div>\n\
<div class=\"line\">    positions.emplace_back( 0.0f, radius, 0.0f );</div>\n\
<div class=\"line\">    normals.emplace_back( 0.0f, 1.0f, 0.0f );</div>\n\
<div class=\"line\">    tangents.emplace_back( 1.0f, 0.0f, 0.0f );  </div>\n\
<div class=\"line\">    biTangents.emplace_back(0.0f, 0.0f, -1.0f);</div>\n\
<div class=\"line\">    texCoords.emplace_back( 0.0f, 0.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> phiStep = PI / stackCount;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> thetaStep = 2.0f * PI / sliceCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute vertices for each stack ring</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 1; i &lt;= stackCount - 1; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> phi = i * phiStep;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Vertices of ring.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt;= sliceCount; ++j)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> theta = j * thetaStep;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// spherical to cartesian</span></div>\n\
<div class=\"line\">            Float3 position;</div>\n\
<div class=\"line\">            position.x = radius * sinf(phi) * cosf(theta);</div>\n\
<div class=\"line\">            position.y = radius * cosf(phi);</div>\n\
<div class=\"line\">            position.z = radius * sinf(phi) * sinf(theta);</div>\n\
<div class=\"line\">            positions.emplace_back( position.x, position.y, position.z );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> normal(position.x, position.y, position.z);</div>\n\
<div class=\"line\">            normal.<a name=\"a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ab66b0c7697d96a278da9bca810f4dee1\">normalize</a>();</div>\n\
<div class=\"line\">            normals.emplace_back( normal.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, normal.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, normal.<a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Partial derivative of P with respect to theta</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> tangent(</div>\n\
<div class=\"line\">                -radius * sinf(phi) * sinf(theta),</div>\n\
<div class=\"line\">                 0.0f,</div>\n\
<div class=\"line\">                radius * sinf(phi) * cosf(theta)</div>\n\
<div class=\"line\">            );</div>\n\
<div class=\"line\">            tangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ab66b0c7697d96a278da9bca810f4dee1\">normalize</a>();</div>\n\
<div class=\"line\">            tangents.emplace_back( tangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, tangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, tangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> biTangent = normal ^ tangent;          </div>\n\
<div class=\"line\">            biTangents.emplace_back(biTangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, biTangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, biTangent.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a>);</div>\n\
<div class=\"line\">            </div>\n\
<div class=\"line\">            texCoords.emplace_back( theta / PI, phi / PI);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// vertex at the buttom of the sphere</span></div>\n\
<div class=\"line\">    positions.emplace_back( 0.0f, -radius, 0.0f );</div>\n\
<div class=\"line\">    normals.emplace_back( 0.0f, -1.0f, 0.0f );</div>\n\
<div class=\"line\">    tangents.emplace_back( 1.0f, 0.0f, 0.0f );</div>\n\
<div class=\"line\">    biTangents.emplace_back(0.0f, 0.0f, -1.0f);</div>\n\
<div class=\"line\">    texCoords.emplace_back( 0.0f, 1.0f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute indices for top stack.  The top stack was written first to the vertex buffer</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and connects the top pole to the first ring.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 1; i &lt;= sliceCount; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        indices.push_back(0);</div>\n\
<div class=\"line\">        indices.push_back(i + 1);</div>\n\
<div class=\"line\">        indices.push_back(i);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Offset the indices to the index of the first vertex in the first ring.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// This is just skipping the top pole vertex.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> baseIndex = 1;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> ringVertexCount = sliceCount + 1;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; sliceCount - 2; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> j = 0; j &lt; sliceCount; ++j)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            indices.push_back(baseIndex + i * ringVertexCount + j);</div>\n\
<div class=\"line\">            indices.push_back(baseIndex + i * ringVertexCount + j + 1);</div>\n\
<div class=\"line\">            indices.push_back(baseIndex + (i + 1) * ringVertexCount + j);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            indices.push_back(baseIndex + (i + 1) * ringVertexCount + j);</div>\n\
<div class=\"line\">            indices.push_back(baseIndex + i * ringVertexCount + j + 1);</div>\n\
<div class=\"line\">            indices.push_back(baseIndex + (i + 1) * ringVertexCount + j + 1);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// South pole vertex was added last.</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> southPoleIndex = (<span class=\"keywordtype\">unsigned</span> int)positions.size() - 1;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Offset the indices to the index of the first vertex in the last ring.</span></div>\n\
<div class=\"line\">    baseIndex = southPoleIndex - ringVertexCount;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> i = 0; i &lt; sliceCount; ++i)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        indices.push_back(southPoleIndex);</div>\n\
<div class=\"line\">        indices.push_back(baseIndex + i);</div>\n\
<div class=\"line\">        indices.push_back(baseIndex + i + 1);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Compute the bounding box</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    boundingBox = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>(<a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( -radius , -radius , -radius ), <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>( radius, radius ,radius ));</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";