var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head>\n\
<link href=\"../../style/prettify.css\" type=\"text/css\" rel=\"stylesheet\">\n\
<script type=\"text/javascript\" src=\"../../scripts/prettify.js\"></script><script src=\"../../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><meta http-equiv=\"Content-Style-Type\" content=\"text/css\"><meta name=\"generator\" content=\"pandoc\"><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>What&#39;s New in API in Maya 2016 Extension 1</title>\n\
   <meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><style type=\"text/css\">code{white-space: pre;}</style><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/multireflink.js\"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script></script><script></script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div><div id=\"reflinkdiv\"></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>What&#39;s New in API in Maya 2016 Extension 1</h1>\n\
         </div>\n\
\n\
<div class=\'section\'><a id=\"whats-new-in-api-in-maya-2016-extension-1\"></a></div>\n\
<p>The following changes apply to Maya 2016 Service Pack 3 and Maya 2016 Extension 1 + Service Pack 3.</p>\n\
<div class=\'section\'><a id=\"api-compatibility\"></a><h2 id=\"api-compatibility\">API compatibility</h2></div>\n\
<p>Maya 2016 Extension 2 is not binary compatible with Maya 2016. To obtain the Maya 2016 and Maya 2016 Extension 1 API Guide, see <a href=\'http://www.autodesk.com/me-sdk-docs-2016\' title=\'\' target=\'_blank\'>http://www.autodesk.com/me-sdk-docs-2016</a>.</p>\n\
<p>C++ plug-ins that were compiled against Maya 2016 or Maya 2016 Extension 1, including Maya 2016 service pack releases, must be re-compiled against Maya 2016 Extension 2 in order to be recognized by this version of Maya.</p>\n\
<p>In addition, plug-ins compiled against Maya 2016 Extension 2 will either not load or exhibit unpredictable behavior if loaded in Maya 2016, Maya 2016 Extension 1, or any Maya 2016 service pack release.</p>\n\
<div class=\'section\'><a id=\"maya-viewport-2.0-whitepaper\"></a><h2 id=\"maya-viewport-2.0-whitepaper\">Maya Viewport 2.0 whitepaper</h2></div>\n\
<p>The <em>Maya Viewport 2.0 whitepaper</em> can be found at <a href=\'http://www.autodesk.com/developmaya\' title=\'\' target=\'_blank\'>http://www.autodesk.com/developmaya</a>.</p>\n\
<p>This document is divided into two parts. The first (<em>Viewport 2.0 API Porting Guide</em>) is an overview of Viewport 2.0 and outlines the differences between the legacy default viewport and Viewport 2.0. The second part (<em>Viewport 2.0 API Porting Guide Details</em>) is more detailed and specifies the recommended interfaces and provides code examples for common tasks.</p>\n\
<div class=\'section\'><a id=\"maya-animation-performance-whitepaper\"></a><h2 id=\"maya-animation-performance-whitepaper\">Maya animation performance whitepaper</h2></div>\n\
<p>The <em>Improving Performance with Parallel Evaluation</em> whitepaper can be found at <a href=\'http://www.autodesk.com/maya-docs\' title=\'\' target=\'_blank\'>http://www.autodesk.com/maya-docs</a>.</p>\n\
<p>Refer to this document for information on how to use the new Evaluation Manager feature to improve playback and manipulation of your animated scenes through scene-level graph analysis and parallelization. In addition, it provides information on the API extensions that your plug-in can implement to take advantage of these features, as well as guidelines on how to use the Profiler to evaluate performance in your scene.</p>\n\
<div class=\'section\'><a id=\"maya-developer-kit\"></a><h2 id=\"maya-developer-kit\">Maya Developer Kit</h2></div>\n\
<p>The Developer Kit is available online at Autodesk Exchange at <a href=\'https://apps.exchange.autodesk.com/MAYA/en/Home/Index\' title=\'\' target=\'_blank\'>https://apps.exchange.autodesk.com/MAYA/en/Home/Index</a>.</p>\n\
<div class=\'section\'><a id=\"hardware-selection\"></a><h2 id=\"hardware-selection\">Hardware selection</h2></div>\n\
<ul>\n\
<li><p>Semantics added that allow your DX11 or GLSL shader to perform hardware selection; for example, semantics that allow you to specify whether selection is to be done at the object level or vertex level.</p>\n\
<p>Annotations added that allow you to draw non-material items such as the wireframe and selected edges/vertices components.</p>\n\
<p>Hardware selection is enabled when you run Maya in OpenGL Core Profile mode. Alternatively, you can also set the environment variable MAYA_USE_HARDWARE_SELECTION = 1.</p>\n\
<p>See <a href=\'#!/url=./developer/Viewport-2-0-API/Semantics-and-annotations.html\' title=\'\'>Semantics and annotations supported by the dx11Shader and glslShader plug-ins in Viewport 2.0</a> and <a href=\'#!/url=./developer/Viewport-2-0-API/Shader-semantics-supported-by.html\' title=\'\'>Shader semantics supported by Viewport 2.0</a>.</p></li>\n\
<li><p>The <em>dx11Shader</em> and <em>glslShader</em> plug-ins in the Maya Developer Kit have been updated to illustrate hardware selection. The <em>glslShader</em> also supports shadow pass, transparency and advanced transparency passes. Varying inputs are selectable (choice of color or UV sets), and performance is improved.</p>\n\
<p>See also the <em>WaterSimulation</em> shader example. For the GLSL version of the example, see <span class=\'code\'>WaterSimulation.ogsfx</span> in the <span class=\'code\'>presets\\GLSL\\examples</span> folder of the Maya installation directory. For the DX11 version, see <span class=\'code\'>WaterSimulation.fx</span> in the <span class=\'code\'>presets\\HLSL11\\examples</span> folder.</p></li>\n\
<li><p>New <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxGeometryOverride::pointSnappingActive()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_px_geometry_override.html#a4a0af36ded25ebee92ce267d31004f0c&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxGeometryOverride::pointSnappingActive()</a></span> and <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MPxSubSceneOverride::pointSnappingActive()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_px_sub_scene_override.html#a4a0af36ded25ebee92ce267d31004f0c&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MPxSubSceneOverride::pointSnappingActive()</a></span> functions have been added that allow you to set the correct selection level when snapping is active.</p>\n\
<p>See <em>apiMeshShape</em> in the developer kit for more information. See also <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MSelectionContext::selectionLevel()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_selection_context.html#afc14bf98a3ea57f890b474abaf5a5b4b&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MSelectionContext::selectionLevel()</a></span>.</p></li>\n\
</ul>\n\
<p>Creating GLSL shaders learning path</p>\n\
<ul>\n\
<li>A <a href=\'#!/url=./developer/Writing-a-Hardware-Shading-Node/Creating-GLSL-hardware-shaders.html\' title=\'\'>Creating GLSL shaders learning path</a> has been added that provides guidelines for converting your GLSL shaders to the <span class=\'code\'>.ogsfx</span> format. Shaders of this format can be loaded via the <span class=\'code\'>glslShader.mll</span> plug-in in Maya and visualized in Viewport 2.0.</li>\n\
</ul>\n\
<div class=\'section\'><a id=\"drawing\"></a><h2 id=\"drawing\">Drawing</h2></div>\n\
<p>MUIDrawManager</p>\n\
<ul>\n\
<li><p><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MUIDrawManager::beginDrawInXray()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#af96a94322df2d2bf866e866c8612b88d&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MUIDrawManager::beginDrawInXray()</a></span> and <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MUIDrawManager::endDrawInXray()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#af51ad5c3bbccc1f1d183bda305636ad1&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MUIDrawManager::endDrawInXray()</a></span> methods have been added so that primitives drawn between calls to these two methods will display on top of other geometries in the scene. These methods can be used to draw objects such as locators.</p>\n\
<p>These methods are only applicable to drawables created using the <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MUIDrawManager::mesh()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html#ab7479336abc018548fe68277932d848a&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MUIDrawManager::mesh()</a></span> method and that are one of <span class=\'code\'>kTriangles</span>, <span class=\'code\'>kLines</span> and <span class=\'code\'>kPoints</span>.</p></li>\n\
<li><p>See <em>squaresNode_noDepthTest</em> in the developer kit for an example that draws meshes without performing depth testing. <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MUIDrawManager\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_h_w_render_1_1_m_u_i_draw_manager.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_render_1_1_m_u_i_draw_manager.html&quot;,&quot;title&quot;:&quot;Maya Python API 2.0 Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MUIDrawManager</a></span> is used to draw two squares and some text, and these two squares and text display on the top of other geometries in the scene.</p></li>\n\
</ul>\n\
<div class=\'section\'><a id=\"modeling\"></a><h2 id=\"modeling\">Modeling</h2></div>\n\
<p>New class for curve attributes</p>\n\
<ul>\n\
<li>Added a new <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MCurveAttribute\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_curve_attribute.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MCurveAttribute</a></span> class for creating and manipulating curve attributes. This class is similar to the <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MRampAttribute\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_ramp_attribute.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_ramp_attribute.html&quot;,&quot;title&quot;:&quot;Maya Python API 2.0 Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MRampAttribute</a></span> class, which is used for ramp attributes. Like a ramp attribute, a curve attribute has a set of entries that describes a curve for mapping an input value to an output value. Note that the entries for a curve attribute are control points instead of points on a curve as in a ramp attribute. This difference produces smoother effects and is a better fit for falloff curves of brushes. You can use the methods in <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MCurveAttribute\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_curve_attribute.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MCurveAttribute</a></span> for operations such as adding entries, deleting entries, repositioning entries, querying the output values for inputs ranging from 0 to 1, and others.</li>\n\
</ul>\n\
<p>Functions to display manipulator plane handles</p>\n\
<ul>\n\
<li><p>New functions added that allow you to determine whether to display manipulator plane handles:</p>\n\
<ul>\n\
<li><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MFnManip3D::drawPlaneHandles()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_fn_manip3_d.html#a05d8dda7721175248b88251225ff5fe0&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MFnManip3D::drawPlaneHandles()</a></span></li>\n\
<li><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MFnManip3D::setDrawPlaneHandles()\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_fn_manip3_d.html#adb2dc0506ddaf1d4f1fffdf42b1db4bf&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MFnManip3D::setDrawPlaneHandles()</a></span></li>\n\
</ul>\n\
<p>Calling these functions is equivalent to executing the command <span class=\'code\'>manipOptions</span> with the <span class=\'code\'>showPlaneHandles</span> flag.</p></li>\n\
</ul>\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";