var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head>\n\
<link href=\"../../style/prettify.css\" type=\"text/css\" rel=\"stylesheet\">\n\
<script type=\"text/javascript\" src=\"../../scripts/prettify.js\"></script><script src=\"../../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><meta http-equiv=\"Content-Style-Type\" content=\"text/css\"><meta name=\"generator\" content=\"pandoc\"><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><script type=\"text/javascript\" src=\"../../scripts/utils/adsk.redirect.js\"></script>\n\
      <title>Hello World Explained</title>\n\
   <meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><style type=\"text/css\">code{white-space: pre;}</style><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/multireflink.js\"); });</script><script>$(document).ready(function () { prettyPrint(); } );</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script></script><script></script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div><div id=\"reflinkdiv\"></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>Hello World Explained</h1>\n\
         </div>\n\
\n\
<div class=\'section\'><a id=\"hello-world-explained\"></a></div>\n\
<p>The Hello World examples demonstrates several important components of plug-in development.</p>\n\
<p>Detailed about the classes and functions listed here can be found in the C++ API reference.</p>\n\
<div class=\'section\'><a id=\"marglist\"></a><h2 id=\"marglist\">MArgList</h2></div>\n\
<p><span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MArgList\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_arg_list.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_arg_list.html&quot;,&quot;title&quot;:&quot;Maya Python API 2.0 Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MArgList</a></span> gathers arguments to a plug-in and stores them in a list. It provides similar functionality to the standard <span class=\'code\'>argc</span> and <span class=\'code\'>argv</span> of C and C++.</p>\n\
<p>Both versions of Hello World use the <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MArgList\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_arg_list.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_arg_list.html&quot;,&quot;title&quot;:&quot;Maya Python API 2.0 Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MArgList</a></span> assignment operator, <span class=\'code\'>const <a href=\"javascript:void(0)\" data-symbol=\"MArgList\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_arg_list.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;},{&quot;path&quot;:&quot;py_ref/class_open_maya_1_1_m_arg_list.html&quot;,&quot;title&quot;:&quot;Maya Python API 2.0 Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MArgList</a>&amp; args</span>, to gather any arguments passed to the plug-in. However, only the second version of the plug-in uses the arguments passed to it:</p>\n\
<p><span class=\'code\'>cpp cout &lt;&lt; args.asString( 0 ).asChar() &lt;&lt;  &quot; &quot; &lt;&lt; args.asString( 1 ).asChar() &lt;&lt; endl;</span></p>\n\
<p>The arguments passed to the plug-in are stored in the <span class=\'code\'>args</span> list. The <span class=\'code\'>asString()</span> function returns a list argument as an <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MString\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_string.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MString</a></span> object. The <span class=\'code\'>asChar()</span> function converts the <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MString\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_string.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MString</a></span> to a C++ <span class=\'code\'>char *</span>.</p>\n\
<div class=\'section\'><a id=\"declaresimplecommand\"></a><h2 id=\"declaresimplecommand\">DeclareSimpleCommand</h2></div>\n\
<p>All plug-ins need to implement the <span class=\'code\'>initializePlugin()</span>, <span class=\'code\'>uninitializePlugin()</span>, and <span class=\'code\'>creator()</span> functions.</p>\n\
<p>The <span class=\'code\'>DeclareSimpleCommand()</span> macro replaces <span class=\'code\'>initializePlugin()</span>, <span class=\'code\'>uninitializePlugin()</span>, and <span class=\'code\'>creator()</span> in simple plug-ins so you do not have to implement these functions yourself.</p>\n\
<p><span class=\'code\'>DeclareSimpleCommand()</span> takes three arguments: the plug-in class, the owner of the plug-in, and the version.</p>\n\
<div class=\"codeBlock\"><pre class=\"prettyprint lang-cpp\"><a href=\"javascript:void(0)\" data-symbol=\"DeclareSimpleCommand\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/group___macros.html#gaf3b44fe07495c3792b926494fca7b517&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">DeclareSimpleCommand</a>( helloWorld, &quot;Autodesk&quot;, &quot;2019&quot;);\n\
</pre></div><p><span class=\'code\'>DeclareSimpleCommand()</span> can only be used to create an undoable command. Because undoable commands cannot be undone, they should only query the scene. They should not modify the scene in any way.</p>\n\
<blockquote>\n\
<p><strong>Important:</strong> If you create an undoable command that does modify the scene, it will break Maya&#39;s undo capability.</p>\n\
</blockquote>\n\
<p>You need to include <span class=\'code\'>MSimple.h</span> to use <span class=\'code\'>DeclareSimpleCommand()</span>.</p>\n\
<div class=\'section\'><a id=\"doit\"></a><h2 id=\"doit\">doIt</h2></div>\n\
<p>In this simple example, <span class=\'code\'>doIt()</span> performs the command&#39;s action, which is to write to the Maya output window.</p>\n\
<p>In more complex command plug-ins, <span class=\'code\'>doIt()</span> is used to parse arguments, set internal data, and do other housekeeping before it calls the <span class=\'code\'>redoIt()</span> function. The <span class=\'code\'>redoIt()</span> function then performs the command&#39;s actions.</p>\n\
<p>As with most API functions, <span class=\'code\'>doIt()</span> returns an <span class=\'code\'><a href=\"javascript:void(0)\" data-symbol=\"MStatus\" class=\"a_multireflink\" data-reflinkdata=\"[{&quot;path&quot;:&quot;cpp_ref/class_m_status.html&quot;,&quot;title&quot;:&quot;C++ API Reference&quot;,&quot;relpathtoroot&quot;:&quot;../../&quot;}]\">MStatus</a></span> object. The returned status can be used for error handling and error logging in more complex plug-ins. In this case, the plug-in always returns the success status code, <span class=\'code\'>MS:kSuccess</span></p>\n\
      <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";