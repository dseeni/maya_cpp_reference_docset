var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2017-06-22\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>hwColorPerVertexShader/hwColorPerVertexShader.cpp</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'hw_color_per_vertex_shader_2hw_color_per_vertex_shader_8cpp-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>hwColorPerVertexShader/hwColorPerVertexShader.cpp</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">hwColorPerVertexShader/hwColorPerVertexShader.cpp</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk</span></div>\n\
<div class=\"line\"><span class=\"comment\">// license agreement provided at the time of installation or download,</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or which otherwise accompanies this software in either electronic</span></div>\n\
<div class=\"line\"><span class=\"comment\">// or hard copy form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// ==========================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// NOTE: PLEASE READ THE README.TXT FILE FOR INSTRUCTIONS ON</span></div>\n\
<div class=\"line\"><span class=\"comment\">// COMPILING AND USAGE REQUIREMENTS.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// DESCRIPTION:</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      This is an example of drawing an object using</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      the stored color per vertex, or using false</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      coloring of either : the nornmals, the tangents,</span></div>\n\
<div class=\"line\"><span class=\"comment\">//      or the binormals.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef WIN32</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#pragma warning( disable : 4786 )       // Disable STL warnings.</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MIOStream.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;math.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MString.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPlug.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataBlock.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDataHandle.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnNumericAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnTypedAttribute.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatVector.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnPlugin.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxHwShaderNode.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MRenderUtilities.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStringArray.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFnMesh.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGlobal.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPoint.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MFloatPointArray.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// For swatch rendering</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHardwareRenderer.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGeometryData.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Viewport 2.0 includes</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawRegistry.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxShaderOverride.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MDrawContext.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MStateManager.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGLdefinitions.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGLFunctionTable.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWGeometryUtilities.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MHWShaderSwatchGenerator.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MGL.h&gt;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keywordtype\">void</span> drawBoundingBox( <span class=\"keyword\">const</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a>&amp; box, <span class=\"keyword\">const</span> <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a>&amp; color )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> bmin = box.<a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#afb3213b98f3a6b4bda9759511e9b79a1\">min</a>();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a> bmax = box.<a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#a1dfdbea9d5560e4aa09d34bdbd82480c\">max</a>();</div>\n\
<div class=\"line\">    <a name=\"_a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a> min( <span class=\"keywordtype\">float</span>(bmin.<a name=\"a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>), <span class=\"keywordtype\">float</span>(bmin.<a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>), <span class=\"keywordtype\">float</span>(bmin.<a name=\"a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>) );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html\">MFloatPoint</a> max( <span class=\"keywordtype\">float</span>(bmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#af88b946fb90d5f08b5fb740c70e98c10\">x</a>), <span class=\"keywordtype\">float</span>(bmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab927965981178aa1fba979a37168db2a\">y</a>), <span class=\"keywordtype\">float</span>(bmax.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html#ab3e6ed577a7c669c19de1f9c1b46c872\">z</a>) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPushAttrib(GL_ALL_ATTRIB_BITS);</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable( GL_LIGHTING );</div>\n\
<div class=\"line\">        glColor3f( color.<a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a4788d82c901b9367dd5c0daff8a7616b\">r</a>, color.<a name=\"a10\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a8cf17d727651616de6f2b79ef32170cd\">g</a>, color.<a name=\"a11\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html#a83fc1af92e29717b4513d121b0c72c7d\">b</a>);</div>\n\
<div class=\"line\">        glBegin( GL_LINE_STRIP );</div>\n\
<div class=\"line\">        glVertex3f( min.<a name=\"a12\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a name=\"a13\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a name=\"a14\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( min.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glVertex3f( max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#ad0da36b2558901e21e7a30f6c227a45e\">x</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#aa4f0d3eebc3c443f9be81bf48561a217\">y</a>, max.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_point.html#af73583b1e980b0aa03f9884812e9fd4d\">z</a> );</div>\n\
<div class=\"line\">        glEnd();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <a name=\"_a15\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> sHWCPVShaderRegistrantId(<span class=\"stringliteral\">&quot;HWCPVShaderRegistrantId&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>hwColorPerVertexShader : <span class=\"keyword\">public</span> <a name=\"_a16\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html\">MPxHwShaderNode</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">                    hwColorPerVertexShader();</div>\n\
<div class=\"line\">            ~hwColorPerVertexShader() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a17\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a18\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6e1aa1e50774080d5aee55f20ffa5503\">compute</a>( <span class=\"keyword\">const</span> <a name=\"_a19\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <a name=\"_a20\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>    <a name=\"a21\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a5c13a6c88a839b5356861d1d09e820d9\">postConstructor</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Internally cached attribute handling routines</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a22\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#aa88f4dd4cfd3e964e0806d6e5b253347\">getInternalValue</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <a name=\"_a23\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp; )         <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a24\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a6caab4434e836748680958883564af35\">setInternalValue</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp;, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp; )   <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a25\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a4b373289ba4ef6bf66387e2b540cdc05\">bind</a>( <span class=\"keyword\">const</span> <a name=\"_a26\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                              <a name=\"_a27\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a28\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a1add8314dc908073f9126b81dc187ce7\">unbind</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>     <a name=\"a29\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#acd6773ef64b27965c09ed584830bf8f3\">geometry</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Batch overrides</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a30\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#aa39f824f610a30172f5bb7a130c35069\">glBind</a>(<span class=\"keyword\">const</span> <a name=\"_a31\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; shapePath) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a32\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#ab94ce2a19c9ce026e7b0825b5397975e\">glUnbind</a>(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; shapePath) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a33\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a495a60eaa1df3815d5565e79e08c90ac\">glGeometry</a>( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp;,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                              <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                              <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Overridden to draw an image for swatch rendering.</span></div>\n\
<div class=\"line\"><span class=\"comment\"></span>    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> <a name=\"a34\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a765f8d7c0499e87180ff884b6967550e\">renderSwatchImage</a>( <a name=\"_a35\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a> &amp; image ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span>            drawTheSwatch( <a name=\"_a36\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a>* pGeomData,</div>\n\
<div class=\"line\">                                   <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* pIndexing,</div>\n\
<div class=\"line\">                                   <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  numberOfData,</div>\n\
<div class=\"line\">                                   <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  indexCount );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> draw( <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                    <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     <a name=\"a37\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a636103e207bea5f6f82065a21c275072\">colorsPerVertex</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    <a name=\"a38\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a48045e919e9cafe71b7883de1c4875de\">hasTransparency</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     <a name=\"a39\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#af3550674237dc92887354c8c1aab7367\">normalsPerVertex</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span>     <a name=\"a40\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a4ad8d328c883db5ee4e4141840c76394\">texCoordsPerVertex</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp;  colorSetName()<span class=\"keyword\">const</span>{<span class=\"keywordflow\">return</span> mColorSetName;}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <span class=\"keywordtype\">void</span> *  creator();</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initialize();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span>  <a name=\"_a41\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> id;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>            wantDrawBoundingBox()<span class=\"keyword\"> const </span>{ <span class=\"keywordflow\">return</span> mDrawBoundingBox; }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> getFloat3(<a name=\"_a42\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <a name=\"_a43\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> &amp; val) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">void</span> getFloat(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> attr, <span class=\"keywordtype\">float</span> &amp; val) <span class=\"keyword\">const</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Attributes</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aColorGain;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aColorBias;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aTranspGain;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aTranspBias;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aNormalsPerVertex;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aColorsPerVertex;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aColorSetName;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aTexRotateX;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aTexRotateY;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aTexRotateZ;</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  aDrawBoundingBox;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Cached internal values</span></div>\n\
<div class=\"line\">    float3  mColorGain;</div>\n\
<div class=\"line\">    float3  mColorBias;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   mTranspGain;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   mTranspBias;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> mNormalsPerVertex;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> mColorsPerVertex;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> mColorSetName;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   mTexRotateX;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   mTexRotateY;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span>   mTexRotateZ;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    mDrawBoundingBox;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>  *mSampleImage;</div>\n\
<div class=\"line\">    GLuint  mSampleImageId;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span>    mAttributesChanged;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_type_id.html\">MTypeId</a> hwColorPerVertexShader::id( 0x00105450 );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aColorGain;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aTranspGain;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aColorBias;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aTranspBias;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aNormalsPerVertex;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aColorsPerVertex;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aColorSetName;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aTexRotateX;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aTexRotateY;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aTexRotateZ;</div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>  hwColorPerVertexShader::aDrawBoundingBox;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> hwColorPerVertexShader::postConstructor( )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    setMPSafe(<span class=\"keyword\">false</span>);</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwColorPerVertexShader::hwColorPerVertexShader()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    mColorGain[0] = mColorGain[1] = mColorGain[2] = 1.0f;</div>\n\
<div class=\"line\">    mColorBias[0] = mColorBias[1] = mColorBias[2] = 0.0f;</div>\n\
<div class=\"line\">    mTranspGain = 1.0f;</div>\n\
<div class=\"line\">    mTranspBias = 0.0f;</div>\n\
<div class=\"line\">    mAttributesChanged = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    mNormalsPerVertex = 0;</div>\n\
<div class=\"line\">    mColorsPerVertex = 0;</div>\n\
<div class=\"line\">    mSampleImage = 0;</div>\n\
<div class=\"line\">    mSampleImageId = 0;</div>\n\
<div class=\"line\">    mTexRotateX = 0.0f;</div>\n\
<div class=\"line\">    mTexRotateY = 0.0f;</div>\n\
<div class=\"line\">    mTexRotateZ = 0.0f;</div>\n\
<div class=\"line\">    mDrawBoundingBox = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">hwColorPerVertexShader::~hwColorPerVertexShader()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( mSampleImageId &gt; 0 )</div>\n\
<div class=\"line\">        glDeleteTextures(1, &amp;mSampleImageId );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The creator method creates an instance of the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// hwColorPerVertexShader class and is the first method called by Maya</span></div>\n\
<div class=\"line\"><span class=\"comment\">// when a hwColorPerVertexShader needs to be created.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span> * hwColorPerVertexShader::creator()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> hwColorPerVertexShader();</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">hwColorPerVertexShader::setInternalValue( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp; handle )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> handledAttribute = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == aNormalsPerVertex)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mNormalsPerVertex = (<span class=\"keywordtype\">unsigned</span> int) handle.<a name=\"a44\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorsPerVertex)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mColorsPerVertex = (<span class=\"keywordtype\">unsigned</span> int) handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a4c3fb2724eadb8e8a3cca8ff1af10dfd\">asInt</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorSetName)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mColorSetName = (<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>) handle.<a name=\"a45\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a858b071eda071f265c130e30d0b98622\">asString</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateX)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mTexRotateX = handle.<a name=\"a46\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateY)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mTexRotateY = handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateZ)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        mTexRotateZ = handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorGain)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        float3 &amp; val = handle.<a name=\"a47\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#abda8516acf6a0cbc9387882bc974efac\">asFloat3</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (val[0] != mColorGain[0] ||</div>\n\
<div class=\"line\">            val[1] != mColorGain[1] ||</div>\n\
<div class=\"line\">            val[2] != mColorGain[2])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mColorGain[0] = val[0];</div>\n\
<div class=\"line\">            mColorGain[1] = val[1];</div>\n\
<div class=\"line\">            mColorGain[2] = val[2];</div>\n\
<div class=\"line\">            mAttributesChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorBias)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        float3 &amp;val = handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#abda8516acf6a0cbc9387882bc974efac\">asFloat3</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (val[0] != mColorBias[0] ||</div>\n\
<div class=\"line\">            val[1] != mColorBias[1] ||</div>\n\
<div class=\"line\">            val[2] != mColorBias[2])</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mColorBias[0] = val[0];</div>\n\
<div class=\"line\">            mColorBias[1] = val[1];</div>\n\
<div class=\"line\">            mColorBias[2] = val[2];</div>\n\
<div class=\"line\">            mAttributesChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTranspGain)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> val = handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (val != mTranspGain)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mTranspGain = val;</div>\n\
<div class=\"line\">            mAttributesChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTranspBias)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> val = handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a43df510424a7de372dd130315d9f223c\">asFloat</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (val != mTranspBias)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mTranspBias = val;</div>\n\
<div class=\"line\">            mAttributesChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( plug == aDrawBoundingBox )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">bool</span> val = handle.<a name=\"a48\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a69fdebf4dcdf33c1b313eb4a426e0d45\">asBool</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( val != mDrawBoundingBox )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            mDrawBoundingBox = val;</div>\n\
<div class=\"line\">            mAttributesChanged = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> handledAttribute;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span></div>\n\
<div class=\"line\">hwColorPerVertexShader::getInternalValue( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a>&amp; handle )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> handledAttribute = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (plug == aColorGain)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a name=\"a49\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mColorGain[0], mColorGain[1], mColorGain[2] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorBias)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mColorBias[0], mColorBias[1], mColorBias[2] );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTranspGain)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mTranspGain );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTranspBias)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mTranspBias );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aNormalsPerVertex)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( (<span class=\"keywordtype\">int</span>)mNormalsPerVertex );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorsPerVertex)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( (<span class=\"keywordtype\">int</span>)mColorsPerVertex );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aColorSetName)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mColorSetName );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateX)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mTexRotateX );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateY)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mTexRotateY );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (plug == aTexRotateZ)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mTexRotateZ );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span>( plug == aDrawBoundingBox )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        handledAttribute = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">        handle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a2a75482f517f405a641c0eee0bd995ac\">set</a>( mDrawBoundingBox );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> handledAttribute;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The initialize routine is called after the node has been created.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It sets up the input and output attributes and adds them to the node.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Finally the dependencies are arranged so that when the inputs</span></div>\n\
<div class=\"line\"><span class=\"comment\">// change Maya knowns to call compute to recalculate the output values.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwColorPerVertexShader::initialize()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a name=\"_a50\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html\">MFnNumericAttribute</a> nAttr;</div>\n\
<div class=\"line\">    <a name=\"_a51\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html\">MFnTypedAttribute</a> tAttr;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Create input attributes.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// All attributes are cached internal</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    aColorGain = nAttr.<a name=\"a52\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;colorGain&quot;</span>, <span class=\"stringliteral\">&quot;cg&quot;</span>, &amp;status);</div>\n\
<div class=\"line\">    <a name=\"a53\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a54\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a55\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a56\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.f, 1.f, 1.f));</div>\n\
<div class=\"line\">    nAttr.<a name=\"a57\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a name=\"a58\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a name=\"a59\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTranspGain = nAttr.<a name=\"a60\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;transparencyGain&quot;</span>, <span class=\"stringliteral\">&quot;tg&quot;</span>,</div>\n\
<div class=\"line\">                          <a name=\"a61\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 1.f, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(1.f));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a62\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#af72ddb0704d27319ad52a28bdcd9f2a5\">setSoftMin</a>(0.f));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a name=\"a63\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#acd6abf61e5a1e573a57a516bf81bb2dc\">setSoftMax</a>(2.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColorBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a3b53a86b42bc4da537c4be835797c4d5\">createColor</a>( <span class=\"stringliteral\">&quot;colorBias&quot;</span>, <span class=\"stringliteral\">&quot;cb&quot;</span>, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.f, 0.f, 0.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTranspBias = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;transparencyBias&quot;</span>, <span class=\"stringliteral\">&quot;tb&quot;</span>,</div>\n\
<div class=\"line\">                           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.f, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.f));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#af72ddb0704d27319ad52a28bdcd9f2a5\">setSoftMin</a>(-1.f));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#acd6abf61e5a1e573a57a516bf81bb2dc\">setSoftMax</a>(1.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aNormalsPerVertex = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;normalsPerVertex&quot;</span>, <span class=\"stringliteral\">&quot;nv&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a64\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>, 0, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#af72ddb0704d27319ad52a28bdcd9f2a5\">setSoftMin</a>(0));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#acd6abf61e5a1e573a57a516bf81bb2dc\">setSoftMax</a>(3));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColorsPerVertex = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>(<span class=\"stringliteral\">&quot;colorsPerVertex&quot;</span>, <span class=\"stringliteral\">&quot;cv&quot;</span>,</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a9bb31be73c01d40428195449f62588ac\">MFnNumericData::kInt</a>, 0, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#af72ddb0704d27319ad52a28bdcd9f2a5\">setSoftMin</a>(0));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#acd6abf61e5a1e573a57a516bf81bb2dc\">setSoftMax</a>(5));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aColorSetName = tAttr.<a name=\"a65\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_typed_attribute.html#af785af0a66bd4a4da1d9f7bd74d4de0a\">create</a>(<span class=\"stringliteral\">&quot;colorSetName&quot;</span>, <span class=\"stringliteral\">&quot;cs&quot;</span>,</div>\n\
<div class=\"line\">        <a name=\"a66\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_data.html#a1d1cfd8ffb84e947f82999c682b666a7afab53ea4a643325262b9c140af093279\">MFnData::kString</a>, <a name=\"a67\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">false</span>));</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    tAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTexRotateX = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;texRotateX&quot;</span>, <span class=\"stringliteral\">&quot;tx&quot;</span>,</div>\n\
<div class=\"line\">                           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.f, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTexRotateY = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;texRotateY&quot;</span>, <span class=\"stringliteral\">&quot;ty&quot;</span>,</div>\n\
<div class=\"line\">                           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.f, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aTexRotateZ = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;texRotateZ&quot;</span>, <span class=\"stringliteral\">&quot;tz&quot;</span>,</div>\n\
<div class=\"line\">                           <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a5686197bafb177bdc82550848416a1ad\">MFnNumericData::kFloat</a>, 0.f, &amp;status);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(0.f));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    aDrawBoundingBox = nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#a5c08a5ce5e7123cc444c95a0e4a50f29\">create</a>( <span class=\"stringliteral\">&quot;drawBoundingBox&quot;</span>, <span class=\"stringliteral\">&quot;dbb&quot;</span>,</div>\n\
<div class=\"line\">                            <a name=\"a68\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_data.html#a1d1cfd8ffb84e947f82999c682b666a7a8cfc0ab572a96edfc9db7c02f0d025d7\">MFnNumericData::kBoolean</a>, <span class=\"keyword\">false</span>, &amp;status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( status );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a8d2be80de133a200a455bf9e2ac1b709\">setStorable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a9e68a8b4af016b37f6567cfa6d68e551\">setKeyable</a>(<span class=\"keyword\">true</span>));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_numeric_attribute.html#aae3f2fbbbce06e006f1838a1fb6fdcdd\">setDefault</a>(<span class=\"keyword\">false</span>));</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#afa3d56222eae663308e11edc39e8d153\">setCached</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#ae27cf2fd28a3c69b880b1096ea9e0103\">setInternal</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\">    nAttr.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_attribute.html#a0810da59cbaac7ecbd26ba0a43d0ac35\">setAffectsAppearance</a>( <span class=\"keyword\">true</span> );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// create output attributes here</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// outColor is the only output attribute and it is inherited</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so we do not need to create or add it.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Add the attributes here</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColorGain));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aTranspGain));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColorBias));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aTranspBias));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aNormalsPerVertex));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColorsPerVertex));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aColorSetName));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aTexRotateX));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aTexRotateY));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aTexRotateZ));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( addAttribute(aDrawBoundingBox));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aColorGain,  outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aTranspGain, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aColorBias,  outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aTranspBias, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aNormalsPerVertex, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aColorsPerVertex, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aColorSetName, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aTexRotateX, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aTexRotateY, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aTexRotateZ, outColor));</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( attributeAffects (aDrawBoundingBox, outColor));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">hwColorPerVertexShader::bind( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                              <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">hwColorPerVertexShader::unbind( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">hwColorPerVertexShader::geometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_draw_request.html\">MDrawRequest</a>&amp; request,</div>\n\
<div class=\"line\">                            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m3d_view.html\">M3dView</a>&amp; view,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                            <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                            <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( mDrawBoundingBox )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Compute the bounding box.</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> i;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> box;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( i = 0; i &lt; vertexCount; i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            box.<a name=\"a69\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html#aee704d46278fb5925a7bd814a5773ccd\">expand</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_point.html\">MPoint</a>(vertexArray[i*3], vertexArray[i*3+1], vertexArray[i*3+2]) );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Draw the bounding box.</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor( 0.1f, 0.15f, 0.35f );</div>\n\
<div class=\"line\">        drawBoundingBox( box, wireColor );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// If we&#39;re received a color, that takes priority</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( colorCount &gt; 0 &amp;&amp; colorArrays[ colorCount - 1] != NULL )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPushAttrib(GL_ALL_ATTRIB_BITS);</div>\n\
<div class=\"line\">        glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\">        glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">        glColorPointer( 4, GL_FLOAT, 0, &amp;colorArrays[colorCount - 1][0]);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">        glVertexPointer ( 3, GL_FLOAT, 0, &amp;vertexArray[0] );</div>\n\
<div class=\"line\">        glDrawElements ( prim, indexCount, GL_UNSIGNED_INT, indexArray );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopClientAttrib();</div>\n\
<div class=\"line\">        glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"comment\">// If this attribute is enabled, normals, tangents,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and binormals can be visualized using false coloring.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Negative values will clamp to black however.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)normalCount &gt; mNormalsPerVertex) {</div>\n\
<div class=\"line\">        normalCount = mNormalsPerVertex;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (normalCount &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPushAttrib(GL_ALL_ATTRIB_BITS);</div>\n\
<div class=\"line\">        glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\">        glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (normalCount &gt; 1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (normalCount == 2)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #ifdef _TANGENT_DEBUG</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *tangents = (<span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *)&amp;normalArrays[1][0];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  i=0; i&lt; vertexCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cout&lt;&lt;<span class=\"stringliteral\">&quot;tangent[&quot;</span>&lt;&lt;i</div>\n\
<div class=\"line\">                        &lt;&lt;<span class=\"stringliteral\">&quot;] = &quot;</span>&lt;&lt;tangnets[i*3]</div>\n\
<div class=\"line\">                        &lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;tangents[i*3+1]&lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;tangents[i*3+2]&lt;&lt;endl;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[1][0]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #ifdef _BINORMAL_DEBUG</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *binormals = (<span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *)&amp;normalArrays[2][0];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  i=0; i&lt; vertexCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cout&lt;&lt;<span class=\"stringliteral\">&quot;binormals[&quot;</span>&lt;&lt;i&lt;&lt;<span class=\"stringliteral\">&quot;] = &quot;</span>&lt;&lt;binormals[i*3]</div>\n\
<div class=\"line\">                        &lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;binormals[i*3+1]&lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;binormals[i*3+2]&lt;&lt;endl;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[2][0]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (normalCount)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">            glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[0][0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">        glVertexPointer ( 3, GL_FLOAT, 0, &amp;vertexArray[0] );</div>\n\
<div class=\"line\">        glDrawElements ( prim, indexCount, GL_UNSIGNED_INT, indexArray );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDisableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopClientAttrib();</div>\n\
<div class=\"line\">        glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> draw( prim, writable, indexCount, indexArray,</div>\n\
<div class=\"line\">            vertexCount, vertexArray, colorCount, colorArrays );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Batch overrides</span></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">hwColorPerVertexShader::glBind(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; shapePath)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a></div>\n\
<div class=\"line\">hwColorPerVertexShader::glUnbind(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; shapePath)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwColorPerVertexShader::glGeometry( <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a>&amp; path,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">int</span> * vertexIDs,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> normalCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** normalArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> texCoordCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** texCoordArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// If this attribute is enabled, normals, tangents,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// and binormals can be visualized using false coloring.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Negative values will clamp to black however.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#ifdef _TEST_FILE_PATH_DURING_DRAW_</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (path.<a name=\"a70\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>( <a name=\"a71\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Check the # of uvsets. If no uvsets</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// then can&#39;t return tangent or binormals</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <a name=\"a72\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#a3d14e9f9ed022a80f664eac0136c2f7a\">MGlobal::displayInfo</a>( path.<a name=\"a73\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a7cffb69661adc6ae7ac9e03c297caf01\">fullPathName</a>() );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a name=\"_a74\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> fnMesh( path.<a name=\"a75\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>() );</div>\n\
<div class=\"line\">        numUVSets = fnMesh.<a name=\"a76\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#aa8c2d263dfbaa7a187f5db2c3edd565d\">numUVSets</a>();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>)normalCount &gt; mNormalsPerVertex)</div>\n\
<div class=\"line\">        normalCount = mNormalsPerVertex;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (normalCount &gt; 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPushAttrib(GL_ALL_ATTRIB_BITS);</div>\n\
<div class=\"line\">        glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\">        glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\">        glDisable(GL_BLEND);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (normalCount &gt; 1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (normalCount == 2)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">    <span class=\"comment\">//#define _TANGENT_DEBUG</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #ifdef _TANGENT_DEBUG</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *tangents = (<span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *)&amp;normalArrays[1][0];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span>  i=0; i&lt; vertexCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cout&lt;&lt;<span class=\"stringliteral\">&quot;tangent[&quot;</span>&lt;&lt;i&lt;&lt;<span class=\"stringliteral\">&quot;] = &quot;</span>&lt;&lt;tangents[i*3]</div>\n\
<div class=\"line\">                        &lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;tangents[i*3+1]&lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;tangents[i*3+2]&lt;&lt;endl;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[1][0]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #ifdef _BINORMAL_DEBUG</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *binormals = (<span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> *)&amp;normalArrays[2][0];</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  i=0; i&lt; vertexCount; i++)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    cout&lt;&lt;<span class=\"stringliteral\">&quot;binormals[&quot;</span>&lt;&lt;i&lt;&lt;<span class=\"stringliteral\">&quot;] = &quot;</span>&lt;&lt;binormals[i*3]</div>\n\
<div class=\"line\">                        &lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;binormals[i*3+1]&lt;&lt;<span class=\"stringliteral\">&quot;,&quot;</span>&lt;&lt;binormals[i*3+2]&lt;&lt;endl;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"><span class=\"preprocessor\">    #endif</span></div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[2][0]);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (normalCount)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">            glColorPointer(3, GL_FLOAT, 0, &amp;normalArrays[0][0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">        glVertexPointer ( 3, GL_FLOAT, 0, &amp;vertexArray[0] );</div>\n\
<div class=\"line\">        glDrawElements ( prim, indexCount, GL_UNSIGNED_INT, indexArray );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glDisableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopClientAttrib();</div>\n\
<div class=\"line\">        glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> draw( prim, writable, indexCount, indexArray,</div>\n\
<div class=\"line\">            vertexCount, vertexArray, colorCount, colorArrays );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/* virtual */</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwColorPerVertexShader::renderSwatchImage( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>&amp; outImage )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status = <a name=\"a77\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Use VP2 swatch drawing (especially useful for Dx11 and Core Profile OpenGL)</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (<a name=\"a78\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_renderer.html#a4678a72ac6959ed21d422d27928d0343\">MHWRender::MRenderer::theRenderer</a>())</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> meshSphere(<span class=\"stringliteral\">&quot;meshSphere&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a79\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_utilities.html#a73c521cb743ed9cc5a595f29d7428e91\">MHWRender::MRenderUtilities::renderMaterialViewerGeometry</a>(meshSphere, </div>\n\
<div class=\"line\">                                                                         thisMObject(), </div>\n\
<div class=\"line\">                                                                         outImage, </div>\n\
<div class=\"line\">                                                                         <a name=\"a80\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_utilities.html#af9563ae2bd890aa0fb7782f626e35bc7a2cec741abb80798c163d0aea01676163\">MHWRender::MRenderUtilities::kPerspectiveCamera</a>, </div>\n\
<div class=\"line\">                                                                         <a name=\"a81\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_utilities.html#ad15b3d1fb21d3d61911ada0e2bc9b12bab22f7d3eb3e3131a6e8876dccaf3e934\">MHWRender::MRenderUtilities::kSwatchLight</a>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Get the hardware renderer utility class</span></div>\n\
<div class=\"line\">    <a name=\"_a82\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> *pRenderer = MHardwareRenderer::theRenderer();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pRenderer)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; backEndStr = pRenderer-&gt;<a name=\"a83\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afd786038730d9c301a6b3a489d22d816\">backEndString</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get geometry</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ============</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* pIndexing = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  numberOfData = 0;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  indexCount = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505\">MHardwareRenderer::GeometricShape</a> gshape = <a name=\"a84\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a5f45789e2294fc128af5b04595d96505acb4a5f68a3b6cd8c05b1dc9c5a487c88\">MHardwareRenderer::kDefaultSphere</a>;</div>\n\
<div class=\"line\">        <span class=\"comment\">//MHardwareRenderer::GeometricShape gshape = MHardwareRenderer::kDefaultPlane;</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a>* pGeomData =</div>\n\
<div class=\"line\">            pRenderer-&gt;<a name=\"a85\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#afb2b5a9604dd4332eab2b9be053b446e\">referenceDefaultGeometry</a>( gshape, numberOfData, pIndexing, indexCount );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( !pGeomData )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Make the swatch context current</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ===============================</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> width, height;</div>\n\
<div class=\"line\">        outImage.<a name=\"a86\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#acab1f6acf34fc74e4d717322fa35241a\">getSize</a>( width, height );</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> origWidth = width;</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> origHeight = height;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status2 = pRenderer-&gt;<a name=\"a87\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4d85f022b09d72ce1f6a17ad4fa41be4\">makeSwatchContextCurrent</a>( backEndStr, width, height );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( status2 != MS::kSuccess )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            pRenderer-&gt;<a name=\"a88\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a7038dec27e316897f0daf376faefc2c1\">dereferenceGeometry</a>( pGeomData, numberOfData );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPushAttrib(GL_ALL_ATTRIB_BITS);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get the light direction from the API, and use it</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// =============================================</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> light_pos[4];</div>\n\
<div class=\"line\">            pRenderer-&gt;<a name=\"a89\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4fa0ae8729daf1a0125906fad0fc1704\">getSwatchLightDirection</a>( light_pos[0], light_pos[1], light_pos[2], light_pos[3] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">            glPushMatrix();</div>\n\
<div class=\"line\">            glLoadIdentity();</div>\n\
<div class=\"line\">            glLightfv(GL_LIGHT0, GL_POSITION, light_pos );</div>\n\
<div class=\"line\">            glPopMatrix();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> light_ambt[4] = {1.0f, 1.0f, 1.0f, 1.0};</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> light_diff[4] = {1.0f, 1.0f, 1.0f, 1.0};</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> light_spec[4] = {1.0f, 1.0f, 1.0f, 1.0};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glLightfv( GL_LIGHT0, GL_AMBIENT,  light_ambt );</div>\n\
<div class=\"line\">            glLightfv( GL_LIGHT0, GL_DIFFUSE,  light_diff );</div>\n\
<div class=\"line\">            glLightfv( GL_LIGHT0, GL_SPECULAR, light_spec );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glEnable( GL_LIGHTING );</div>\n\
<div class=\"line\">            glEnable( GL_LIGHT0 );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Get camera</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ==========</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Get the camera frustum from the API</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">double</span> l, r, b, t, n, f;</div>\n\
<div class=\"line\">            pRenderer-&gt;<a name=\"a90\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a1c5dbf2c0a0fc8433f48744a92507116\">getSwatchOrthoCameraSetting</a>( l, r, b, t, n, f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glMatrixMode(GL_PROJECTION);</div>\n\
<div class=\"line\">            glLoadIdentity();</div>\n\
<div class=\"line\">            glOrtho( l, r, b, t, n, f );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">            glLoadIdentity();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Draw The Swatch</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ===============</span></div>\n\
<div class=\"line\">        drawTheSwatch( pGeomData, pIndexing, numberOfData, indexCount );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Read pixels back from swatch context to MImage</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// ==============================================</span></div>\n\
<div class=\"line\">        pRenderer-&gt;<a name=\"a91\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae2bc38072d14c1b8e1988e1f2ae73066\">readSwatchContextPixels</a>( backEndStr, outImage );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Double check the outing going image size as image resizing</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// was required to properly read from the swatch context</span></div>\n\
<div class=\"line\">        outImage.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html#acab1f6acf34fc74e4d717322fa35241a\">getSize</a>( width, height );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (width != origWidth || height != origHeight)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            status = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            status = <a name=\"a92\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopAttrib();</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">void</span></div>\n\
<div class=\"line\">hwColorPerVertexShader::drawTheSwatch( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_geometry_data.html\">MGeometryData</a>* pGeomData,</div>\n\
<div class=\"line\">                                       <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>* pIndexing,</div>\n\
<div class=\"line\">                                       <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  numberOfData,</div>\n\
<div class=\"line\">                                       <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span>  indexCount )</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html\">MHardwareRenderer</a> *pRenderer = MHardwareRenderer::theRenderer();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( !pRenderer )    <span class=\"keywordflow\">return</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set the default background color</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> r, g, b, a;</div>\n\
<div class=\"line\">        <a name=\"a93\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_shader_swatch_generator.html#a95a6855572205246f2741796ed8c5bdc\">MHWShaderSwatchGenerator::getSwatchBackgroundColor</a>( r, g, b, a );</div>\n\
<div class=\"line\">        glClearColor( r, g, b, a );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glShadeModel(GL_SMOOTH);</div>\n\
<div class=\"line\">    glEnable(GL_DEPTH_TEST);</div>\n\
<div class=\"line\">    glDepthFunc(GL_LEQUAL);</div>\n\
<div class=\"line\">    glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Enable the blending to get the transparency to work</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        glEnable(GL_BLEND);</div>\n\
<div class=\"line\">        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Load in a sample background image</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mSampleImageId == 0)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        mSampleImage = <span class=\"keyword\">new</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_image.html\">MImage</a>;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> rstatus = mSampleImage-&gt;readFromFile(<span class=\"stringliteral\">&quot;C:\\\\temp\\\\maya.gif&quot;</span>);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (rstatus == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80af0536797208144380691e2b376ffc1d1\">MStatus::kSuccess</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> w, h;</div>\n\
<div class=\"line\">            mSampleImage-&gt;getSize( w, h );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (w &gt; 2 &amp;&amp; h &gt; 2 )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glGenTextures( 1, &amp;mSampleImageId );</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (mSampleImageId &gt; 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">                    glBindTexture ( GL_TEXTURE_2D, mSampleImageId );</div>\n\
<div class=\"line\">                    glTexImage2D( GL_TEXTURE_2D, 0, GL_RGBA8, w, h, 0,</div>\n\
<div class=\"line\">                        GL_RGBA, GL_UNSIGNED_BYTE, (GLvoid *) mSampleImage-&gt;pixels() );</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mSampleImage)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">delete</span> mSampleImage;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Overlay the background checker board</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawBackGround = ( mTranspBias &gt; 0.0f );</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> drawBackGroundTexture = (mSampleImageId != 0);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (drawBackGround)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawBackGroundTexture)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glMatrixMode(GL_TEXTURE);</div>\n\
<div class=\"line\">            glLoadIdentity();</div>\n\
<div class=\"line\">            glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glBindTexture(GL_TEXTURE_2D, mSampleImageId );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP);</div>\n\
<div class=\"line\">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);</div>\n\
<div class=\"line\">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">            glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numberOfRepeats = 8;</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> quadColor( 0.5f, 0.5f, 0.5f, 1.0f );</div>\n\
<div class=\"line\">        pRenderer-&gt;<a name=\"a94\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a4fd995524f4d62ca22bee3f1b1249941\">drawSwatchBackGroundQuads</a>( quadColor,</div>\n\
<div class=\"line\">                            drawBackGroundTexture, numberOfRepeats );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (drawBackGroundTexture)</div>\n\
<div class=\"line\">            glDisable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">        glEnable(GL_LIGHTING);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Set some example material</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> ambient[4]  = { 0.1f, 0.1f, 0.1f, 1.0f };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> diffuse[4]  = { 0.7f, 0.7f, 0.7f, 1.0f };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> specular[4] = { 0.5f, 0.5f, 0.5f, 1.0f };</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> emission[4] = { 0.0f, 0.0f, 0.0f, 1.0f };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glMaterialfv(GL_FRONT_AND_BACK, GL_AMBIENT,  ambient);</div>\n\
<div class=\"line\">        glMaterialfv(GL_FRONT_AND_BACK, GL_EMISSION, emission );</div>\n\
<div class=\"line\">        glMaterialfv(GL_FRONT_AND_BACK, GL_SPECULAR, specular );</div>\n\
<div class=\"line\">        glMaterialf(GL_FRONT_AND_BACK, GL_SHININESS, 20.0f);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Track diffuse color</span></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> swatchColor[4];</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> biasT = 1.0f - mTranspGain - mTranspBias;</div>\n\
<div class=\"line\">        swatchColor[0] = (diffuse[0] * mColorGain[0]) + mColorBias[0];</div>\n\
<div class=\"line\">        swatchColor[1] = (diffuse[1] * mColorGain[1]) + mColorBias[1];</div>\n\
<div class=\"line\">        swatchColor[2] = (diffuse[2] * mColorGain[2]) + mColorBias[2];</div>\n\
<div class=\"line\">        swatchColor[3] = (diffuse[3] * mTranspGain) + biasT;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glMaterialfv(GL_FRONT_AND_BACK, GL_DIFFUSE, swatchColor );</div>\n\
<div class=\"line\">        glColorMaterial(GL_FRONT_AND_BACK, GL_DIFFUSE);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glEnable(GL_COLOR_MATERIAL);</div>\n\
<div class=\"line\">        glColor4fv( swatchColor );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (pGeomData)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glPushClientAttrib ( GL_CLIENT_VERTEX_ARRAY_BIT );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mNormalsPerVertex &gt;= 1)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> *normalData = (<span class=\"keywordtype\">float</span> *)( pGeomData[1].data() );</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> * tangentData = (<span class=\"keywordtype\">float</span> *)( pGeomData[3].data() );</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> * binormalData = (<span class=\"keywordtype\">float</span> *)( pGeomData[4].data() );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (normalData &amp;&amp; mNormalsPerVertex  == 1)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, normalData);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (tangentData &amp;&amp; mNormalsPerVertex  == 2)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, tangentData);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (binormalData)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(3, GL_FLOAT, 0, binormalData);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *vertexData = (<span class=\"keywordtype\">float</span> *)( pGeomData[0].data() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (vertexData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState( GL_VERTEX_ARRAY );</div>\n\
<div class=\"line\">            glVertexPointer ( 3, GL_FLOAT, 0, vertexData );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordtype\">float</span> *normalData = (<span class=\"keywordtype\">float</span> *)( pGeomData[1].data() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (normalData)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState( GL_NORMAL_ARRAY );</div>\n\
<div class=\"line\">            glNormalPointer (    GL_FLOAT, 0, normalData );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (mSampleImageId &gt; 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">float</span> *uvData = (<span class=\"keywordtype\">float</span> *) (pGeomData[2].data() );</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (uvData)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                glBindTexture ( GL_TEXTURE_2D, mSampleImageId );</div>\n\
<div class=\"line\">                glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP);</div>\n\
<div class=\"line\">                glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);</div>\n\
<div class=\"line\">                glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\">                glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                glEnable(GL_TEXTURE_2D);</div>\n\
<div class=\"line\">                glEnableClientState( GL_TEXTURE_COORD_ARRAY );</div>\n\
<div class=\"line\">                glTexCoordPointer( 2, GL_FLOAT, 0, uvData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                glMatrixMode(GL_TEXTURE);</div>\n\
<div class=\"line\">                glLoadIdentity();</div>\n\
<div class=\"line\">                glScalef( 0.5f, 0.5f, 1 );</div>\n\
<div class=\"line\">                <span class=\"comment\">//glTranslatef(0.5f, 0.5f, 0.0f);</span></div>\n\
<div class=\"line\">                glRotatef( mTexRotateX, 1.0f, 0.0f, 0.0f);</div>\n\
<div class=\"line\">                glRotatef( mTexRotateY, 0.0, 1.0f, 0.0f);</div>\n\
<div class=\"line\">                glRotatef( mTexRotateZ, 0.0, 0.0f, 1.0f);</div>\n\
<div class=\"line\">                glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (vertexData &amp;&amp; normalData &amp;&amp; pIndexing )</div>\n\
<div class=\"line\">            glDrawElements ( GL_TRIANGLES, indexCount, GL_UNSIGNED_INT, pIndexing );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        glPopClientAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Release data references</span></div>\n\
<div class=\"line\">        pRenderer-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#a7038dec27e316897f0daf376faefc2c1\">dereferenceGeometry</a>( pGeomData, numberOfData );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glDisable( GL_COLOR_MATERIAL );</div>\n\
<div class=\"line\">    glDisable( GL_LIGHTING );</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwColorPerVertexShader::draw(</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> prim,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> writable,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> indexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> * indexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> vertexCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> * vertexArray,</div>\n\
<div class=\"line\">                                <span class=\"keywordtype\">int</span> colorCount,</div>\n\
<div class=\"line\">                                <span class=\"keyword\">const</span> <span class=\"keywordtype\">float</span> ** colorArrays)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"comment\">// Should check this value to allow caching</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// of color values.</span></div>\n\
<div class=\"line\">    mAttributesChanged = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// We assume triangles here.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (!vertexCount ||</div>\n\
<div class=\"line\">        !((prim == GL_TRIANGLES) || (prim == GL_TRIANGLE_STRIP)))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kFailure;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//glPushAttrib(GL_ALL_ATTRIB_BITS); // This is really overkill</span></div>\n\
<div class=\"line\">    glPushAttrib( GL_ENABLE_BIT | GL_COLOR_BUFFER_BIT );</div>\n\
<div class=\"line\">    glPushClientAttrib(GL_CLIENT_VERTEX_ARRAY_BIT);</div>\n\
<div class=\"line\">    glDisable(GL_LIGHTING);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">    glVertexPointer ( 3, GL_FLOAT, 0, &amp;vertexArray[0] );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> localCopyOfColors = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">float</span> * colors = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Do &quot;cheesy&quot; multi-pass here for more than one color set</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> blendSet = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( colorCount &lt;= 1 )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glDisable(GL_BLEND);</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>( colorCount &gt; 0 &amp;&amp; colorArrays[0] != NULL)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">            glColorPointer(4, GL_FLOAT, 0, colorArrays[0]);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            glColor4f(1.0, 0.5, 1.0, 1.0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        glDrawElements ( prim, indexCount, GL_UNSIGNED_INT, indexArray );</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Do a 1:1 Blend if we have more than on color set available.</span></div>\n\
<div class=\"line\">        glEnable(GL_BLEND);</div>\n\
<div class=\"line\">        glBlendFunc(GL_ONE, GL_ONE);</div>\n\
<div class=\"line\">        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">        blendSet = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;colorCount; i++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (colorArrays[i] != NULL)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Apply gain and bias</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">bool</span> haveTransparency = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (mColorGain[0] != 1.0f ||</div>\n\
<div class=\"line\">                    mColorGain[1] != 1.0f ||</div>\n\
<div class=\"line\">                    mColorGain[2] != 1.0f ||</div>\n\
<div class=\"line\">                    mColorBias[0] != 0.0f ||</div>\n\
<div class=\"line\">                    mColorBias[1] != 0.0f ||</div>\n\
<div class=\"line\">                    mColorBias[2] != 0.0f ||</div>\n\
<div class=\"line\">                    mTranspGain != 1.0f ||</div>\n\
<div class=\"line\">                    mTranspBias != 0.0f)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// This sample code is a CPU bottlneck. It could be</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// replaced with a vertex program or color matrix</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// operator.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// We really want to scale 1-transp.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// T = 1 - ((1-T)*gain + bias) =</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//   = T * gain + 1 - gain - bias</span></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> biasT = 1 - mTranspGain - mTranspBias;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"comment\">// Either make a copy or read directly colors.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (!(writable &amp; kWriteColorArrays))</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numFloats = 4 * vertexCount;</div>\n\
<div class=\"line\">                        colors = <span class=\"keyword\">new</span> <span class=\"keywordtype\">float</span>[numFloats];</div>\n\
<div class=\"line\">                        localCopyOfColors = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        colors = (<span class=\"keywordtype\">float</span> *)colorArrays[i];</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> *origColors = (<span class=\"keywordtype\">float</span> *)colorArrays[i];</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> *colorPtr = colors;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> ii = vertexCount ; ii-- ; )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        colorPtr[0] = (origColors[0] * mColorGain[0]) + mColorBias[0];</div>\n\
<div class=\"line\">                        colorPtr[1] = (origColors[1] * mColorGain[1]) + mColorBias[1];</div>\n\
<div class=\"line\">                        colorPtr[2] = (origColors[2] * mColorGain[2]) + mColorBias[2];</div>\n\
<div class=\"line\">                        colorPtr[3] = (origColors[3] * mTranspGain) + biasT;</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (colorPtr[3] != 1.0f)</div>\n\
<div class=\"line\">                            haveTransparency = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                        colorPtr += 4;</div>\n\
<div class=\"line\">                        origColors += 4;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Do a quick test for transparency.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// This attribute is currently not</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// being passed through to the plugin.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">// so must be recomputed per refresh.</span></div>\n\
<div class=\"line\">                    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                    colors = (<span class=\"keywordtype\">float</span> *)colorArrays[i];</div>\n\
<div class=\"line\">                    <span class=\"keywordtype\">float</span> *colorPtr = colors;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> ii = vertexCount ; ii-- ; )</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (colorPtr[3] != 1.0f )</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            haveTransparency = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">                            <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                            colorPtr += 4;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Blending when there are alpha values</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!blendSet)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (haveTransparency)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        glEnable(GL_BLEND);</div>\n\
<div class=\"line\">                        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                    glDisable(GL_BLEND);</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColorPointer(4, GL_FLOAT, 0, colors);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">                glDisable(GL_BLEND);</div>\n\
<div class=\"line\">                glDisableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                glColor4f(1.0, 1.0, 1.0, 1.0);</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            glDrawElements ( prim, indexCount, GL_UNSIGNED_INT, indexArray );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glDisable(GL_BLEND);</div>\n\
<div class=\"line\">    glPopClientAttrib();</div>\n\
<div class=\"line\">    glPopAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Delete any local storage if we are passed</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// non-writable data.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (localCopyOfColors)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keyword\">delete</span>[] colors;</div>\n\
<div class=\"line\">        colors = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Tells maya that color per vertex will be needed.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> hwColorPerVertexShader::normalsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numNormals = mNormalsPerVertex;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a95\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string_array.html\">MStringArray</a> setNames;</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; path = currentPath();</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ) )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Check the # of uvsets. If no uvsets</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// then can&#39;t return tangent or binormals</span></div>\n\
<div class=\"line\">        <span class=\"comment\">//</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// MGlobal::displayInfo( path.fullPathName() );</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> fnMesh( path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>() );</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (fnMesh.numUVSets() == 0)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"comment\">// Put out a warnnig if we&#39;re asking for too many uvsets.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> dispWarn(<span class=\"stringliteral\">&quot;Asking for more uvsets then available for shape: &quot;</span>);</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> pathName = path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a7cffb69661adc6ae7ac9e03c297caf01\">fullPathName</a>();</div>\n\
<div class=\"line\">            dispWarn = dispWarn + pathName;</div>\n\
<div class=\"line\">            <a name=\"a96\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_global.html#acb043e7fc4eb7fc0f39833d31364b8a4\">MGlobal::displayWarning</a>( dispWarn  );</div>\n\
<div class=\"line\">            numNormals = (mNormalsPerVertex &gt; 1 ? 1 : 0);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> numNormals;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Tells maya that texCoords per vertex will be needed.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> hwColorPerVertexShader::texCoordsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Tells maya that color per vertex will be needed.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">int</span> hwColorPerVertexShader::colorsPerVertex()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">int</span> returnVal = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Going to be displaying false coloring,</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// so skip getting internal colors.</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (mNormalsPerVertex)</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span> {</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html\">MDagPath</a> &amp; path = currentPath();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span> (path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#a5901f0fa543d32fb13756c2d004f37ae\">hasFn</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn.html#a1d1cfd8ffb84e947f82999c682b666a7a19fd562fc0900a60162e6073df36cb62\">MFn::kMesh</a> ) )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html\">MFnMesh</a> fnMesh( path.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_dag_path.html#ae024049dad815f2f186e6a4fead8be51\">node</a>() );</div>\n\
<div class=\"line\">            <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> numColorSets = fnMesh.<a name=\"a97\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_mesh.html#ac82916690bb9966bdc05d342bb48cc08\">numColorSets</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (numColorSets &lt; 2)</div>\n\
<div class=\"line\">                returnVal = numColorSets;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                returnVal  = 2;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> returnVal;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// virtual</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Tells maya that color per vertex will be needed.</span></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> hwColorPerVertexShader::hasTransparency()</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The compute method is called by Maya when the input values</span></div>\n\
<div class=\"line\"><span class=\"comment\">// change and the output values need to be recomputed.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><span class=\"comment\">// In this case this is only used for software shading, when the to</span></div>\n\
<div class=\"line\"><span class=\"comment\">// compute the rendering swatches.</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> hwColorPerVertexShader::compute (<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html\">MPlug</a>&amp; plug, <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html\">MDataBlock</a>&amp; data)</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> returnStatus;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Check that the requested recompute is one of the output values</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ((plug != outColor) &amp;&amp; (plug.<a name=\"a98\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_plug.html#aa2338038d1c59dc4d35f37f918aabfab\">parent</a>() != outColor))</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> MS::kUnknownParameter;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> inputData = data.<a name=\"a99\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#af4a356799acd4ed070d372ed7cfb4706\">inputValue</a> (aColorGain, &amp;returnStatus);</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( returnStatus );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> &amp; color = inputData.<a name=\"a100\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html\">MDataHandle</a> outColorHandle = data.<a name=\"a101\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#a5e4082d6ab961bee4ec0281676bb4834\">outputValue</a>( outColor, &amp;returnStatus );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( returnStatus );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_float_vector.html\">MFloatVector</a> &amp; outColor = outColorHandle.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_handle.html#a5e7d49f6ed0e237f1e9e43b639f06d07\">asFloatVector</a>();</div>\n\
<div class=\"line\">    outColor = color;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>( data.<a name=\"a102\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_data_block.html#aceb46f1065ef1cd730c4ab15d61466cc\">setClean</a>( plug ) );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> MS::kSuccess;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Shader override for the custom shading node</span></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>hwCPVShaderOverride : <span class=\"keyword\">public</span> <a name=\"_a103\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html\">MHWRender::MPxShaderOverride</a></div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html\">MHWRender::MPxShaderOverride</a>* Creator(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">new</span> hwCPVShaderOverride(obj);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    ~hwCPVShaderOverride()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        fShaderNode = NULL;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 1) Initialize phase</span></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a name=\"a104\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a0212be7dfc693d9d7a0f95ddcb81ba8d\">initialize</a>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> shader)<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Retrieve and cache the actual node pointer</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(shader != <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html#af2a707b4254eb54763167aeced863e63\">MObject::kNullObj</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            fShaderNode = (hwColorPerVertexShader*)</div>\n\
<div class=\"line\">                <a name=\"a105\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_hw_shader_node.html#a49e2f0b3db50d2e4b0a916713977450d\">MPxHwShaderNode::getHwShaderNodePtr</a>(shader);</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set position requirement</span></div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> reqName;</div>\n\
<div class=\"line\">        <a name=\"a106\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a1293e58405a12d8024512b733e2396d1\">addGeometryRequirement</a>(</div>\n\
<div class=\"line\">            <a name=\"_a107\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>(</div>\n\
<div class=\"line\">                reqName,</div>\n\
<div class=\"line\">                <a name=\"a108\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>,</div>\n\
<div class=\"line\">                <a name=\"a109\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6a5686197bafb177bdc82550848416a1ad\">MHWRender::MGeometry::kFloat</a>,</div>\n\
<div class=\"line\">                3));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"comment\">// Set correct color requirement</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(fShaderNode)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            reqName = fShaderNode-&gt;colorSetName();</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a1293e58405a12d8024512b733e2396d1\">addGeometryRequirement</a>(</div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>(</div>\n\
<div class=\"line\">                reqName,</div>\n\
<div class=\"line\">                <a name=\"a110\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4afc0133ebaa6c307b2388ecf5f72f6fdf\">MHWRender::MGeometry::kColor</a>,</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6a5686197bafb177bdc82550848416a1ad\">MHWRender::MGeometry::kFloat</a>,</div>\n\
<div class=\"line\">                4));</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>(<span class=\"stringliteral\">&quot;Autodesk Maya hwColorPerVertexShader&quot;</span>);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 2) Update phase -- Not implemented, nothing to do since we explicitly</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                    rebuild on every update (thus triggering the</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//                    initialize method each time).</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// 3) Draw phase</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a111\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a26fb6e971beb807417cb83a7b2b8268c\">draw</a>(</div>\n\
<div class=\"line\">        <a name=\"_a112\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a name=\"_a113\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> customDraw(</div>\n\
<div class=\"line\">        <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">        <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList) <span class=\"keyword\">const</span>; <span class=\"comment\">// draw helper method</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a114\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a11ba79b61b2bfcc34362ee7675aca6b4\">rebuildAlways</a>()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"comment\">// Since color set name changing needs to add a new</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// named requirement to the geometry, so we should</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// return true here to trigger the geometry rebuild.</span></div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49\">MHWRender::DrawAPI</a> <a name=\"a115\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#a9c43d7192e56c01d8dde77fabd843a0e\">supportedDrawAPIs</a>()<span class=\"keyword\"> const override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <a name=\"a116\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html#ad970d5c990d4803d0e9d73c1ff4fda49a72361be679c1aca1c1be5f9b500a3315\">MHWRender::kOpenGL</a>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> <a name=\"a117\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_px_shader_override.html#ab79d6d7859fceb8fc8b0e4ace1869612\">isTransparent</a>()<span class=\"keyword\"> override</span></div>\n\
<div class=\"line\"><span class=\"keyword\">    </span>{</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">protected</span>:</div>\n\
<div class=\"line\">    hwCPVShaderOverride(<span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a>&amp; obj)</div>\n\
<div class=\"line\">    : <a class=\"code\" href=\"#!/url=./cpp_ref/namespace_m_h_w_render.html\">MHWRender</a>::MPxShaderOverride(obj)</div>\n\
<div class=\"line\">    , fShaderNode(NULL)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Current hwColorPerVertexShader node associated with the shader override.</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Updated during doDG() time.</span></div>\n\
<div class=\"line\">    hwColorPerVertexShader *fShaderNode;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Blend state will be used in the draw</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a118\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* fBlendState;</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* hwCPVShaderOverride::fBlendState = NULL;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> hwCPVShaderOverride::draw(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Matrix set up</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set world view matrix</span></div>\n\
<div class=\"line\">    glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">    glPushMatrix();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> status;</div>\n\
<div class=\"line\">    <a name=\"_a119\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> transform =</div>\n\
<div class=\"line\">        context.<a name=\"a120\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a71cbe2a3f2dfa967ebc43b5e97456ccb\">getMatrix</a>(<a name=\"a121\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9aada60cca33133e088ad8ee1bce291878\">MHWRender::MFrameContext::kWorldViewMtx</a>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glLoadMatrixd(transform.<a name=\"a122\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Set projection matrix</span></div>\n\
<div class=\"line\">    glMatrixMode(GL_PROJECTION);</div>\n\
<div class=\"line\">    glPushMatrix();</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html\">MMatrix</a> projection =</div>\n\
<div class=\"line\">        context.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a71cbe2a3f2dfa967ebc43b5e97456ccb\">getMatrix</a>(<a name=\"a123\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_frame_context.html#acc6ad8472c2abfd2f63e100474b977f9a9bfe03d742b94b682ba896a1597df9f7\">MHWRender::MFrameContext::kProjectionMtx</a>, &amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        glLoadMatrixd(projection.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_matrix.html#a527b102f4eb0951cf4f391f828d3ca34\">matrix</a>[0]);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// State set up</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <a name=\"_a124\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html\">MHWRender::MStateManager</a>* stateMgr = context.<a name=\"a125\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html#a9eed5300933693e76ad77822b4feb37f\">getStateManager</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Blending</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Save current blend status</span></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>* curBlendStatus = stateMgr-&gt;<a name=\"a126\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a4dbf5ff33e99eba611b73273d868182f\">getBlendState</a>(&amp;status);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!curBlendStatus || status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(!fBlendState)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// If we haven&#39;t got a blending state, then acquire a new one.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Since it would be expensive to acquire the state, we would</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// store it.</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Create a new blend status and acquire blend state from the context</span></div>\n\
<div class=\"line\">        <a name=\"_a127\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html\">MHWRender::MBlendStateDesc</a> blendDesc;</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>(<span class=\"keywordtype\">int</span> i = 0; i &lt; (blendDesc.<a name=\"a128\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab374ca375c42792265e69bb0a4123559\">independentBlendEnable</a> ? <a name=\"a129\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ab6b4785ac0e20c5947d74921bacc49b8\">MHWRender::MBlendState::kMaxTargets</a> : 1); ++i)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            blendDesc.<a name=\"a130\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a131\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#af69e3282d64f8cfe88a2759960788417\">blendEnable</a> = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a132\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a5c49c83334018fa4b2f69ac30b60d003\">sourceBlend</a> = <a name=\"a133\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa76de73d01667fca98bcd3754f1f92c00\">MHWRender::MBlendState::kSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a134\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#adadc1ea4b5fca51312ae451f346434e3\">destinationBlend</a> = <a name=\"a135\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaa58d506c01416594f41c42e255dec594\">MHWRender::MBlendState::kInvSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a136\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a919cbb29a19a1fc79843f58e68ccad57\">blendOperation</a> = <a name=\"a137\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MHWRender::MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a138\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a9fbc968d46ad9a7107696211e34b4e51\">alphaSourceBlend</a> = <a name=\"a139\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaa567435a26feac1c98cd5213345ec6681\">MHWRender::MBlendState::kOne</a>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a140\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#aa0f38fbd90e3171cc6c092e80ff25c7c\">alphaDestinationBlend</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#acdb056fac09601eaa8b5f1b5df3ee4eaaa58d506c01416594f41c42e255dec594\">MHWRender::MBlendState::kInvSourceAlpha</a>;</div>\n\
<div class=\"line\">            blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#ab6054509e76bc88d697a365e82c504c8\">targetBlends</a>[i].<a name=\"a141\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_target_blend_desc.html#a4d3de738732021fb87a82040e77f0aa4\">alphaBlendOperation</a> = <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html#ad3316ff174eff6a45c45f0e90d84eabea8d20f6cca2d49a8732f535cfe28812c8\">MHWRender::MBlendState::kAdd</a>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">        blendDesc.<a name=\"a142\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[0] = 1.0f;</div>\n\
<div class=\"line\">        blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[1] = 1.0f;</div>\n\
<div class=\"line\">        blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[2] = 1.0f;</div>\n\
<div class=\"line\">        blendDesc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state_desc.html#a320c6d5843805b550f81726b07aa7f17\">blendFactor</a>[3] = 1.0f;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">        fBlendState = <span class=\"keyword\">const_cast&lt;</span><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_blend_state.html\">MHWRender::MBlendState</a>*<span class=\"keyword\">&gt;</span>(stateMgr-&gt;<a name=\"a143\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#aeb560f7829270f34ab413ad314314c8f\">acquireBlendState</a>(blendDesc, &amp;status));</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">if</span>(!fBlendState || status == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a>)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Activate the blend on the device</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html#a02ab596f4febca68da503aaf8dde3a80a1ef6c2d725fb4bec3e7e840d28adbc00\">MStatus::kFailure</a> == stateMgr-&gt;<a name=\"a144\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a27dbc083002d85108ed30ee1131f68c1\">setBlendState</a>(fBlendState))</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">return</span> <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Bounding box draw</span></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>( fShaderNode-&gt;wantDrawBoundingBox() )</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numRenderItems = renderItemList.<a name=\"a145\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span>( <span class=\"keywordtype\">int</span> i = 0; i &lt; numRenderItems; i++ )</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a name=\"_a146\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* renderItem = renderItemList.<a name=\"a147\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(i);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span>( !renderItem )</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">            <span class=\"comment\">// Modelview matrix is already set so just use the object</span></div>\n\
<div class=\"line\">            <span class=\"comment\">// space bbox.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_bounding_box.html\">MBoundingBox</a> box = renderItem-&gt;<a name=\"a148\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aa978a85979d7c247cebbc6deb6bcf69c\">boundingBox</a>(<a name=\"a149\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_space.html#ab11a1dda34491acff014ddfc9e6bafb8ad74f4c7c6562dc3f8339a8bba2d28dd0\">MSpace::kObject</a>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Draw the bounding box.</span></div>\n\
<div class=\"line\">            <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_color.html\">MColor</a> wireColor( 0.1f, 0.15f, 0.35f );</div>\n\
<div class=\"line\">            drawBoundingBox( box, wireColor );</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// geometry draw</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"keywordtype\">bool</span> useCustomDraw = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span>(useCustomDraw)</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Custom draw</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Does not set state, matrix or material</span></div>\n\
<div class=\"line\">        customDraw(context, renderItemList);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"comment\">// Internal standard draw</span></div>\n\
<div class=\"line\">        <span class=\"comment\">// Does not set state, matrix or material</span></div>\n\
<div class=\"line\">        drawGeometry(context);</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Matrix restore</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    glPopMatrix();</div>\n\
<div class=\"line\">    glMatrixMode(GL_MODELVIEW);</div>\n\
<div class=\"line\">    glPopMatrix();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// State restore</span></div>\n\
<div class=\"line\">    <span class=\"comment\">//--------------------------</span></div>\n\
<div class=\"line\">    <span class=\"comment\">// Restore blending</span></div>\n\
<div class=\"line\">    stateMgr-&gt;<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_state_manager.html#a27dbc083002d85108ed30ee1131f68c1\">setBlendState</a>(curBlendStatus);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keywordtype\">bool</span> hwCPVShaderOverride::customDraw(</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_context.html\">MHWRender::MDrawContext</a>&amp; context,</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html\">MHWRender::MRenderItemList</a>&amp; renderItemList)<span class=\"keyword\"> const</span></div>\n\
<div class=\"line\"><span class=\"keyword\"></span>{</div>\n\
<div class=\"line\">    <span class=\"keyword\">static</span> <a name=\"_a150\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_g_l_function_table.html\">MGLFunctionTable</a> *gGLFT = 0;</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> ( 0 == gGLFT )</div>\n\
<div class=\"line\">        gGLFT = MHardwareRenderer::theRenderer()-&gt;<a name=\"a151\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_hardware_renderer.html#ae661000714d15915ccc58949842f4c57\">glFunctionTable</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    MGLenum currentError = 0;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    glPushClientAttrib ( GL_CLIENT_ALL_ATTRIB_BITS );</div>\n\
<div class=\"line\">    {</div>\n\
<div class=\"line\">        <span class=\"keywordtype\">int</span> numRenderItems = renderItemList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a57b988236ee6a3a5e572d126d3fbccc1\">length</a>();</div>\n\
<div class=\"line\">        <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> renderItemIdx=0; renderItemIdx&lt;numRenderItems; renderItemIdx++)</div>\n\
<div class=\"line\">        {</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html\">MHWRender::MRenderItem</a>* renderItem = renderItemList.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item_list.html#a82ed5d7ae96a2890f5f54f697bb0bab0\">itemAt</a>(renderItemIdx);</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!renderItem) <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">            <span class=\"keyword\">const</span> <a name=\"_a152\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html\">MHWRender::MGeometry</a>* geometry = renderItem-&gt;<a name=\"a153\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#aee2e53b30cbf1699eac04ce5659398d3\">geometry</a>();</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (!geometry) <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"comment\">// Dump out vertex field information for each field</span></div>\n\
<div class=\"line\">            <span class=\"comment\">//</span></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">int</span> bufferCount = geometry-&gt;<a name=\"a154\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a2d6ad76bad123c47513c5941e7493914\">vertexBufferCount</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define GLOBJECT_BUFFER_OFFSET(i) ((char *)NULL + (i)) // For GLObject offsets</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordtype\">bool</span> boundData = <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">            <span class=\"keywordflow\">for</span> (<span class=\"keywordtype\">int</span> i=0; i&lt;bufferCount &amp;&amp; boundData; i++)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <a name=\"_a155\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html\">MHWRender::MVertexBuffer</a>* buffer = geometry-&gt;<a name=\"a156\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a8dbf1ef3c0feaff25da15a60fe968a80\">vertexBuffer</a>(i);</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!buffer)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html\">MHWRender::MVertexBufferDescriptor</a>&amp; desc = buffer-&gt;<a name=\"a157\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#a331cfb987f5f4d632a747e7fbbbe4a43\">descriptor</a>();</div>\n\
<div class=\"line\">                GLuint * dataBufferId = NULL;</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">void</span> *dataHandle = buffer-&gt;<a name=\"a158\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer.html#ad7bcab0d1707ef0da22fc72ada62c40e\">resourceHandle</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (!dataHandle)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">continue</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                dataBufferId = (GLuint *)(dataHandle);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> fieldOffset = desc.<a name=\"a159\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#aaa02ea556dee3025f49406b9d3fb662c\">offset</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> fieldStride = desc.<a name=\"a160\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#a2f0529f7f5ff03b8a26e3a3d1925bb2b\">stride</a>();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Bind each data buffer</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (*dataBufferId &gt; 0)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;<a name=\"a161\"></a>glBindBufferARB(MGL_ARRAY_BUFFER_ARB, *dataBufferId);</div>\n\
<div class=\"line\">                    currentError = gGLFT-&gt;<a name=\"a162\"></a>glGetError();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (currentError != MGL_NO_ERROR)</div>\n\
<div class=\"line\">                        boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">else</span></div>\n\
<div class=\"line\">                    boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (boundData)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    <span class=\"comment\">// Set the data pointers</span></div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (desc.<a name=\"a163\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4aa20581584e5f9447cb96afb4f2e10703\">MHWRender::MGeometry::kPosition</a>)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        glEnableClientState(GL_VERTEX_ARRAY);</div>\n\
<div class=\"line\">                        glVertexPointer(3, GL_FLOAT, fieldStride*4, GLOBJECT_BUFFER_OFFSET(fieldOffset));</div>\n\
<div class=\"line\">                        currentError = gGLFT-&gt;glGetError();</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (currentError != MGL_NO_ERROR)</div>\n\
<div class=\"line\">                            boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">else</span> <span class=\"keywordflow\">if</span> (desc.<a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_vertex_buffer_descriptor.html#abc8db8e8585a67a40d57c26811aaf8e2\">semantic</a>() == <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a5a5b1d8320f94d3c3d142753f5527fc4afc0133ebaa6c307b2388ecf5f72f6fdf\">MHWRender::MGeometry::kColor</a>)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        glEnableClientState(GL_COLOR_ARRAY);</div>\n\
<div class=\"line\">                        glColorPointer(4, GL_FLOAT, fieldStride*4, GLOBJECT_BUFFER_OFFSET(fieldOffset));</div>\n\
<div class=\"line\">                        currentError = gGLFT-&gt;glGetError();</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (currentError != MGL_NO_ERROR)</div>\n\
<div class=\"line\">                            boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">            <span class=\"keywordflow\">if</span> (boundData &amp;&amp; geometry-&gt;<a name=\"a164\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a841bcde01083fb1b48f22c553d1d695c\">indexBufferCount</a>() &gt; 0)</div>\n\
<div class=\"line\">            {</div>\n\
<div class=\"line\">                <span class=\"comment\">// Dump out indexing information</span></div>\n\
<div class=\"line\">                <span class=\"comment\">//</span></div>\n\
<div class=\"line\">                <span class=\"keyword\">const</span> <a name=\"_a165\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html\">MHWRender::MIndexBuffer</a>* buffer = geometry-&gt;<a name=\"a166\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#aa2f26ad753c6cf66a2d0badd1328ebee\">indexBuffer</a>(0);</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">void</span> *indexHandle = buffer-&gt;<a name=\"a167\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#ad7bcab0d1707ef0da22fc72ada62c40e\">resourceHandle</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordtype\">unsigned</span> <span class=\"keywordtype\">int</span> indexBufferCount = 0;</div>\n\
<div class=\"line\">                GLuint *indexBufferId = NULL;</div>\n\
<div class=\"line\">                <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1e\">MHWRender:: MGeometry::Primitive</a> indexPrimType = renderItem-&gt;<a name=\"a168\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_render_item.html#af3ddb45109547883d06426f0530ddf0c\">primitive</a>();</div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (indexHandle)</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    indexBufferId = (GLuint *)(indexHandle);</div>\n\
<div class=\"line\">                    indexBufferCount = buffer-&gt;<a name=\"a169\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#a90ca964ebcc1b02bbcde225edd49e812\">size</a>();</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">                <span class=\"comment\">// Bind the index buffer</span></div>\n\
<div class=\"line\">                <span class=\"keywordflow\">if</span> (indexBufferId  &amp;&amp; (*indexBufferId &gt; 0))</div>\n\
<div class=\"line\">                {</div>\n\
<div class=\"line\">                    gGLFT-&gt;glBindBufferARB(MGL_ELEMENT_ARRAY_BUFFER_ARB, *indexBufferId);</div>\n\
<div class=\"line\">                    currentError = gGLFT-&gt;glGetError();</div>\n\
<div class=\"line\">                    <span class=\"keywordflow\">if</span> (currentError == MGL_NO_ERROR)</div>\n\
<div class=\"line\">                    {</div>\n\
<div class=\"line\">                        GLenum indexPrimTypeGL = GL_TRIANGLES;</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">switch</span> (indexPrimType) {</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">case</span> <a name=\"a170\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea57a311fc6dd7498f2339ab45af414377\">MHWRender::MGeometry::kPoints</a>:</div>\n\
<div class=\"line\">                                        indexPrimTypeGL = GL_POINTS; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">case</span> <a name=\"a171\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea9808e481c6346dfc333afb4c52890ac9\">MHWRender::MGeometry::kLines</a>:</div>\n\
<div class=\"line\">                                        indexPrimTypeGL = GL_LINES; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">case</span> <a name=\"a172\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea505d8b3b6fdcadeb908f49f661e66957\">MHWRender::MGeometry::kLineStrip</a>:</div>\n\
<div class=\"line\">                                        indexPrimTypeGL = GL_LINE_STRIP; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">case</span> <a name=\"a173\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1eaa2c70dd76c8172a9298334473c914304\">MHWRender::MGeometry::kTriangles</a>:</div>\n\
<div class=\"line\">                                        indexPrimTypeGL = GL_TRIANGLES; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">case</span> <a name=\"a174\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#a08260379b97fd733e30ea92e891ede1ea6f6fdd3e537134843d971d56257d1bfc\">MHWRender::MGeometry::kTriangleStrip</a>:</div>\n\
<div class=\"line\">                                        indexPrimTypeGL = GL_TRIANGLE_STRIP; <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                                    <span class=\"keywordflow\">default</span>:</div>\n\
<div class=\"line\">                                        boundData = <span class=\"keyword\">false</span>;</div>\n\
<div class=\"line\">                                        <span class=\"keywordflow\">break</span>;</div>\n\
<div class=\"line\">                        };</div>\n\
<div class=\"line\">                        <span class=\"keywordflow\">if</span> (boundData)</div>\n\
<div class=\"line\">                        {</div>\n\
<div class=\"line\">                            <span class=\"comment\">// Draw the geometry</span></div>\n\
<div class=\"line\">                            GLenum indexType =</div>\n\
<div class=\"line\">                                ( buffer-&gt;<a name=\"a175\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_index_buffer.html#abc7588a483f61d3d4a1e8204ca14d6f6\">dataType</a>() == <a name=\"a176\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_geometry.html#ad8ed01ff3ff33333d8e19db4d2818bb6aa93f90f58b3077bdbedeb9506e0143fd\">MHWRender::MGeometry::kUnsignedInt32</a>  ? GL_UNSIGNED_INT : GL_UNSIGNED_SHORT );</div>\n\
<div class=\"line\">                            glDrawElements(indexPrimTypeGL, indexBufferCount, indexType, GLOBJECT_BUFFER_OFFSET(0));</div>\n\
<div class=\"line\">                        }</div>\n\
<div class=\"line\">                    }</div>\n\
<div class=\"line\">                }</div>\n\
<div class=\"line\">            }</div>\n\
<div class=\"line\">        }</div>\n\
<div class=\"line\">    }</div>\n\
<div class=\"line\">    glPopClientAttrib();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> <span class=\"keyword\">true</span>;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The initializePlugin method is called by Maya when the</span></div>\n\
<div class=\"line\"><span class=\"comment\">// plugin is loaded. It registers the hwColorPerVertexShader node</span></div>\n\
<div class=\"line\"><span class=\"comment\">// which provides Maya with the creator and initialize methods to be</span></div>\n\
<div class=\"line\"><span class=\"comment\">// called when a hwColorPerVertexShader is created.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> initializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; swatchName = <a name=\"a177\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_shader_swatch_generator.html#acf0030e7f24277ad6805a14be529539f\">MHWShaderSwatchGenerator::initialize</a>();</div>\n\
<div class=\"line\">    <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> UserClassify( <span class=\"stringliteral\">&quot;shader/surface/utility/:drawdb/shader/surface/hwColorPerVertexShader:swatch/&quot;</span>+swatchName );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <a name=\"_a178\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj, PLUGIN_COMPANY, <span class=\"stringliteral\">&quot;4.5&quot;</span>, <span class=\"stringliteral\">&quot;Any&quot;</span>);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    status = plugin.registerNode(<span class=\"stringliteral\">&quot;hwColorPerVertexShader&quot;</span>,</div>\n\
<div class=\"line\">        hwColorPerVertexShader::id,</div>\n\
<div class=\"line\">        hwColorPerVertexShader::creator,</div>\n\
<div class=\"line\">        hwColorPerVertexShader::initialize,</div>\n\
<div class=\"line\">        <a name=\"a179\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_node.html#a1d1cfd8ffb84e947f82999c682b666a7aee2b86760284068eef3c463f9de9babc\">MPxNode::kHwShaderNode</a>, &amp;UserClassify );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Register a shader override for this node</span></div>\n\
<div class=\"line\">    <a name=\"a180\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a7436ee759c9ea5113f5a222085dbfe6e\">MHWRender::MDrawRegistry::registerShaderOverrideCreator</a>(</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;drawdb/shader/surface/hwColorPerVertexShader&quot;</span>,</div>\n\
<div class=\"line\">        sHWCPVShaderRegistrantId,</div>\n\
<div class=\"line\">        hwCPVShaderOverride::Creator);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status != MS::kSuccess) <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// The unitializePlugin is called when Maya needs to unload the plugin.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// It basically does the opposite of initialize by calling</span></div>\n\
<div class=\"line\"><span class=\"comment\">// the deregisterNode to remove it.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//</span></div>\n\
<div class=\"line\"><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a> uninitializePlugin( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_object.html\">MObject</a> obj )</div>\n\
<div class=\"line\">{</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_status.html\">MStatus</a>   status;</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_fn_plugin.html\">MFnPlugin</a> plugin( obj );</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Unregister all chamelion shader nodes</span></div>\n\
<div class=\"line\">    status = plugin.deregisterNode( hwColorPerVertexShader::id );</div>\n\
<div class=\"line\">    <a class=\"code\" href=\"#!/url=./cpp_ref/group___macros.html#gae3dc78724237805e00a767b587b7cf79\">CHECK_MSTATUS</a>(status);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"comment\">// Deregister the shader override</span></div>\n\
<div class=\"line\">    status = <a name=\"a181\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_h_w_render_1_1_m_draw_registry.html#a11ddbef3eada4895397b8acb6c77eb2e\">MHWRender::MDrawRegistry::deregisterShaderOverrideCreator</a>(</div>\n\
<div class=\"line\">        <span class=\"stringliteral\">&quot;drawdb/shader/surface/hwColorPerVertexShader&quot;</span>, sHWCPVShaderRegistrantId);</div>\n\
<div class=\"line\">    <span class=\"keywordflow\">if</span> (status != MS::kSuccess) <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">    <span class=\"keywordflow\">return</span> status;</div>\n\
<div class=\"line\">}</div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";