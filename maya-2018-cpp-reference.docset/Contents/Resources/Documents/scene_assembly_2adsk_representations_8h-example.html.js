var topic = "<!-- saved from url=(0024)http://docs.autodesk.com -->\n\
<html>\n\
   <head><script src=\"../scripts/yepnope.1.5.4-min.js\" type=\"text/javascript\"></script><script src=\"../scripts/lib/jquery-1.11.1.min.js\" type=\"text/javascript\"></script><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=\"product\" content=\"MAYAUL\"><meta name=\"release\" content=\"2018\"><meta name=\"book\" content=\"Developer\"><meta name=\"created\" content=\"2017-06-22\"><meta name=\"topicid\" content=\"GUID-02DEF634-1E7B-48C6-8ACD-2C934CA97887\"><meta name=\"topic-type\" content=\"concept\">\n\
      <title>sceneAssembly/adskRepresentations.h</title>\n\
   \n\
\n\
<meta name=\"topic-subtype\" content=\"C++\"></head>\n\
   <body height=\"100%\"><div class=\"body_content\" id=\"body-content\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/navtree.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/doxygen.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"cpp_ref/tabs.css\"><link rel=\"stylesheet\" type=\"text/css\" href=\"style/adsk.cpm.css\"><script language=\"javascript\">var index = \'index.html\';</script><script>$(document).ready(function() { yepnope.injectJs(\"./scripts/ac_common.js\"); });</script><script type=\"text/javascript\">\n\
var tocSystemNeedsToBeLoaded = typeof(cpp_ref_adsk_ref_toc) == \'undefined\';\n\
var weAreIn21 = $(\'div#main.view-active\').length;\n\
var tocPrefix = \'\';\n\
if (weAreIn21)\n\
{ tocPrefix = \'cpp_ref/\'; }\n\
function cpp_ref_initializeToc(forceTrigger) {\n\
    cpp_ref_adsk_ref_toc.initResizable();\n\
    cpp_ref_adsk_ref_toc.initNavTree(\'scene_assembly_2adsk_representations_8h-example.html\', tocPrefix);\n\
    dQuery(document).trigger(\'toc_initialized\');\n\
}\n\
if (tocSystemNeedsToBeLoaded)\n\
{\n\
	yepnope([{\n\
	load:[tocPrefix + \'json3.min.js\', tocPrefix + \'jquery.js\', tocPrefix + \'ref-toc-controller.js\', tocPrefix + \'dynsections.js\'],\n\
	complete: function() {\n\
	  if (typeof(dQuery) == \'undefined\')\n\
	  {\n\
	    dQuery = jQuery.noConflict(true);\n\
	  }\n\
	  else { jQuery.noConflict(true); }\n\
	  $(document).ready(cpp_ref_initializeToc);\n\
	}\n\
 	}])\n\
}\n\
if (!weAreIn21) { // if in AKN...\n\
$(window).load( function() {\n\
    setTimeout( function() {\n\
        var content = $(\'body > div\').not(\'#body-content\');     // take any divs under body that are not id=body-content\n\
        content.each( function() { \n\
            $(this).css( { \'padding-left\': $(this).css(\'margin-left\') } );       // and if they have any padding-left already, move it to margin-left.\n\
        } );\n\
        var width = cpp_ref_adsk_ref_toc.readFromStorage(\'width\');\n\
        content.css({marginLeft:parseInt(width)+6+\"px\"});\n\
    }, 100);\n\
} ); \n\
}\n\
</script><script>$(\"div#WidgetFloaterPanels,link[href*=\'microsofttranslator.com\'],script[src*=\'microsofttranslator.com\'],script[src*=\'bing.com\']\").remove();</script><script type=\'text/javascript\'>$(\"div#navigation,div#breadcrumbs,div#banner\").attr(\"translate\",\"no\"); var mtLocation = ((location && location.href && location.href.indexOf(\'https\') == 0)?\'https://ssl.microsofttranslator.com\':\'http://www.microsofttranslator.com\')+\'/ajax/v3/WidgetV3.ashx?ctf=True&ui=true&settings=Manual&from=en&hidelanguages=\'; yepnope.injectJs(mtLocation, function() {}, { charset:\'utf-8\', type:\'text/javascript\' } );</script><script>\n\
 if (!tocSystemNeedsToBeLoaded) { cpp_ref_initializeToc(); }\n\
 </script><!-- begin MT -->\n\
            \n\
            <div id=\'MicrosoftTranslatorWidget\' class=\'Dark\' style=\'float:right;z-index:100;color:white;background-color:#bbbbbb;height:58px;overflow:hidden\'></div>\n\
      <div>\n\
         <div class=\"head\">\n\
            <h1>sceneAssembly/adskRepresentations.h</h1>\n\
         </div>\n\
\n\
    <div id=\"top\"><!-- Generated by Doxygen 1.8.10 -->\n\
  <div id=\"navrow1\" class=\"tabs\">\n\
    <ul class=\"tablist\">\n\
      <li><a href=\"#!/url=./cpp_ref/index.html\"><span>Main&#160;Page</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/pages.html\"><span>Topics</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/modules.html\"><span>Modules</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/namespaces.html\"><span>Namespaces</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/annotated.html\"><span>Classes</span></a></li>\n\
      <li><a href=\"#!/url=./cpp_ref/examples.html\"><span>Examples</span></a></li>\n\
    </ul>\n\
  </div>\n\
</div><!-- top -->\n\
<div id=\"side-nav\" class=\"ui-resizable side-nav-resizable\">\n\
  <div id=\"nav-tree\">\n\
    <div id=\"nav-tree-contents\">\n\
      <div id=\"nav-sync\" class=\"sync\"></div>\n\
    </div>\n\
  </div>\n\
  <div id=\"splitbar\" style=\"-moz-user-select:none;\" class=\"ui-resizable-handle\">\n\
  </div>\n\
</div>\n\
\n\
<div id=\"doc-content\">\n\
<div class=\"header\">\n\
  <div class=\"headertitle\">\n\
<div class=\"title\">sceneAssembly/adskRepresentations.h</div>  </div>\n\
</div><!--header-->\n\
<div class=\"contents\">\n\
<div class=\"fragment\"><div class=\"line\"><span class=\"preprocessor\">#ifndef _adskRepresentations_h_</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#define _adskRepresentations_h_</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &lt;maya/MPxRepresentation.h&gt;</span></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#include &quot;adskRepresentationFactory.h&quot;</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * CLASS CacheRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\"> *============================================================================*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Representation which uses a gpuCache node to implement its behavior.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>CacheRepresentation : <span class=\"keyword\">public</span> <a name=\"_a0\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- classes -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Cache representation input is the path to the Alembic file.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">class </span>Factory : <span class=\"keyword\">public</span> AdskRepresentationFactory {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"keyword\">typedef</span> AdskRepresentationFactory BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">      Factory() : BaseClass(CacheRepresentation::type()) {}</div>\n\
<div class=\"line\">      ~Factory()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* create(</div>\n\
<div class=\"line\">         <a name=\"_a1\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a name=\"_a2\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Cache representation name is the file base name, including</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// extension (i.e. directory component removed).</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationName(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Cache representation label is the same as the representation name.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationLabel(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Cache representation persistent data is the input, i.e. the</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// path to the Alembic file.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationData(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> type();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Construct.  The representation data is the path to the Alembic</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// file.</span></div>\n\
<div class=\"line\">   CacheRepresentation( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name );</div>\n\
<div class=\"line\">   ~CacheRepresentation() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span> <a name=\"a3\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#a254ffdbe480747f630d41fbb4fa8be44\">activate</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a name=\"a4\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#afc0dccb4da6d70ff909768308f296179\">getType</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a5\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#abfc494661ea0f7f957a9e437cebb2642\">getExternalContent</a>( <a name=\"_a6\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a name=\"a7\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#a6f6412d2df249be356a8f2cf5844b763\">setExternalContent</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a name=\"_a8\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Assignment optor undefined.</span></div>\n\
<div class=\"line\">   CacheRepresentation&amp; operator=(<span class=\"keyword\">const</span> CacheRepresentation&amp;);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * CLASS SceneRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\"> *============================================================================*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Representation which imports nodes from a Maya file.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>SceneRepresentation : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- classes -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Scene representation input is the path to the Maya scene file.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">class </span>Factory : <span class=\"keyword\">public</span> AdskRepresentationFactory {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"keyword\">typedef</span> AdskRepresentationFactory BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">      Factory() : BaseClass(SceneRepresentation::type()) {}</div>\n\
<div class=\"line\">      ~Factory()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* create(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Scene representation name is the file base name, including</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// extension (i.e. directory component removed).</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationName(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Scene representation label is the same as the representation name.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationLabel(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Scene representation persistent data is the input, i.e. the</span></div>\n\
<div class=\"line\">      <span class=\"comment\">// path to the Maya scene file.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationData(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> type();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Construct.  The representation data is the path to the Maya</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// scene file.</span></div>\n\
<div class=\"line\">   SceneRepresentation( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name );</div>\n\
<div class=\"line\">   ~SceneRepresentation() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Populate the container with nodes imported from the file</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// associated with this representation.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#a254ffdbe480747f630d41fbb4fa8be44\">activate</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#afc0dccb4da6d70ff909768308f296179\">getType</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// This representation type can apply edits.</span></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span> <a name=\"a9\"></a><a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#aaa8cb1742a9cecabfd8118f3e0651eb9\">canApplyEdits</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#abfc494661ea0f7f957a9e437cebb2642\">getExternalContent</a>( <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_info_table.html\">MExternalContentInfoTable</a>&amp; table ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   <span class=\"keywordtype\">void</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#a6f6412d2df249be356a8f2cf5844b763\">setExternalContent</a>(</div>\n\
<div class=\"line\">      <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_external_content_location_table.html\">MExternalContentLocationTable</a>&amp; table</div>\n\
<div class=\"line\">   ) <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Assignment optor undefined.</span></div>\n\
<div class=\"line\">   SceneRepresentation&amp; operator=(<span class=\"keyword\">const</span> SceneRepresentation&amp;);</div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">/*==============================================================================</span></div>\n\
<div class=\"line\"><span class=\"comment\"> * CLASS LocatorRepresentation</span></div>\n\
<div class=\"line\"><span class=\"comment\"> *============================================================================*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">// Representation which uses a locator node to implement its behavior.</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">class </span>LocatorRepresentation : <span class=\"keyword\">public</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">public</span>: </div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">typedef</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a> BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- classes -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">// Locator representation has empty input, which means that</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// initially there is no annotation.</span></div>\n\
<div class=\"line\">   <span class=\"keyword\">class </span>Factory : <span class=\"keyword\">public</span> AdskRepresentationFactory {</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">public</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- types and enumerations ----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"keyword\">typedef</span> AdskRepresentationFactory BaseClass;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">      Factory() : BaseClass(LocatorRepresentation::type()) {}</div>\n\
<div class=\"line\">      ~Factory()<span class=\"keyword\"> override </span>{}</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html\">MPxRepresentation</a>* create(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Locator representation creation name is &quot;Locator&quot;.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationName(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Locator representation label is the same as the representation name.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationLabel(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">      <span class=\"comment\">// Locator representation persistent data is its annotation.</span></div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> creationData(</div>\n\
<div class=\"line\">         <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; input</div>\n\
<div class=\"line\">      ) <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\">   };</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- static member functions -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">static</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> type();</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Construct.  The representation data is the locator text</span></div>\n\
<div class=\"line\">   <span class=\"comment\">// annotation, which is initially empty (no annotation).</span></div>\n\
<div class=\"line\">   LocatorRepresentation(</div>\n\
<div class=\"line\">      <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_assembly.html\">MPxAssembly</a>* assembly, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; name, <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a>&amp; data</div>\n\
<div class=\"line\">   );</div>\n\
<div class=\"line\">   ~LocatorRepresentation() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keywordtype\">bool</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#a254ffdbe480747f630d41fbb4fa8be44\">activate</a>() <span class=\"keyword\">override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_px_representation.html#afc0dccb4da6d70ff909768308f296179\">getType</a>() <span class=\"keyword\">const override</span>;</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"keyword\">private</span>:</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- member functions -----*/</span></div>\n\
<div class=\"line\">      </div>\n\
<div class=\"line\">   <span class=\"comment\">// Assignment optor undefined.</span></div>\n\
<div class=\"line\">   LocatorRepresentation&amp; operator=(<span class=\"keyword\">const</span> LocatorRepresentation&amp;);</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"comment\">/*----- data members -----*/</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\">   <span class=\"keyword\">const</span> <a class=\"code\" href=\"#!/url=./cpp_ref/class_m_string.html\">MString</a> fAnnotation;   <span class=\"comment\">// Locator text annotation.</span></div>\n\
<div class=\"line\">};</div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"preprocessor\">#endif</span></div>\n\
<div class=\"line\"></div>\n\
<div class=\"line\"><span class=\"comment\">//-</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">// Copyright 2015 Autodesk, Inc.  All rights reserved.</span></div>\n\
<div class=\"line\"><span class=\"comment\">// </span></div>\n\
<div class=\"line\"><span class=\"comment\">// Use of this software is subject to the terms of the Autodesk license</span></div>\n\
<div class=\"line\"><span class=\"comment\">// agreement provided at the time of installation or download, or which</span></div>\n\
<div class=\"line\"><span class=\"comment\">// otherwise accompanies this software in either electronic or hard copy</span></div>\n\
<div class=\"line\"><span class=\"comment\">// form.</span></div>\n\
<div class=\"line\"><span class=\"comment\">//*****************************************************************************</span></div>\n\
<div class=\"line\"><span class=\"comment\">//+</span></div>\n\
</div><!-- fragment --> </div><!-- contents -->\n\
</div><!-- doc-content -->\n\
          <div class=\"footer-block\"><a href=\"../html/ac.cmtdialog.htm\" class=\"comments-anchor\" target=\"_blank\"><span class=\"comments-link\">Please send us your comment about this page</span></a></div></div>\n\
   </div></body>\n\
</html>\n\
";